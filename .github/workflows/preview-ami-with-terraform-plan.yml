# Copyright 2023 Democratized Data Foundation
#
# Use of this software is governed by the Business Source License
# included in the file licenses/BSL.txt.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0, included in the file
# licenses/APL.txt.

name: Preview AMI With Terraform Plan Workflow

on:
  pull_request:
    branches:
      - master
      - develop
    paths:
      - '.github/workflows/**'
      - 'tools/cloud/aws/**'


env:
  # Verbosity setting for Terraform logs (has to be named `TF_LOG`).
  TF_LOG: INFO

  # Set environment type: dev, test, prod
  ENVIRONMENT_TYPE: "dev"


jobs:
  preview-ami-with-terraform-plan:
    name: Preview ami with terraform plan job
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: tools/cloud/aws/terraform

    steps:
      - name: Checkout code into the directory
        uses: actions/checkout@v3

      - name: Terraform action setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.7

      - name: Terraform format
        id: terraform-format
        run: terraform fmt -check

      - name: Terraform initialization
        id: terraform-initialization
        run: terraform init -backend-config="workspaces/${ENVIRONMENT_TYPE}-backend.conf"

      - name: Terraform workspace
        # Select workspace if it exists, otherwise create a new workspace.
        run: terraform workspace select ${ENVIRONMENT_TYPE} || terraform workspace new ${ENVIRONMENT_TYPE}

      - name: Terraform validation
        id: terraform-validation
        run: terraform validate -no-color

      - name: Terraform plan
        id: terraform-plan
        run: terraform plan -no-color -input=false -var-file="workspaces/source-ec2-${ENVIRONMENT_TYPE}.tfvars"
        continue-on-error: true

      - name: Update pull request
        uses: actions/github-script@v6
        env:
          PLAN: "terraform\n${{ steps.terraform-plan.outputs.stdout }}"

        with:
          github-token: ${{ secrets.ONLY_DEFRADB_REPO_CI_PAT }} # Must have pull request write perms.
          script: |
            const output = `#### Terraform Format and Style \`${{ steps.terraform-format.outcome }}\`
            #### Terraform Initialization \`${{ steps.terraform-initialization.outcome }}\`
            #### Terraform Validation \`${{ steps.terraform-validation.outcome }}\`
            #### Terraform Plan \`${{ steps.terraform-plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform plan status
        if: steps.terraform-plan.outcome == 'failure'
        run: exit 1

      - name: List workspaces 
        run: ls workspaces
