<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="7187.5px" preserveAspectRatio="none" style="width:20354px;height:7187px;background:#00000000;" version="1.1" viewBox="0 0 20354 7187" width="20354.1667px" zoomAndPan="magnify"><defs/><g><!--MD5=[a19e0ee4c4488a0ce9386991213b9d8d]
cluster badger--><polygon fill="#555555" points="13891.6667,415.625,13978.125,415.625,13985.4167,457.2916,15285.4167,457.2916,15285.4167,2073.9583,13891.6667,2073.9583,13891.6667,415.625" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="13891.6667" x2="13985.4167" y1="457.2916" y2="457.2916"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="69.7917" x="13901.0417" y="443.75">badger</text><!--MD5=[0263fe157d4be94a970bc0451cf22135]
cluster v3--><polygon fill="#555555" points="14493.75,142.7083,14533.3333,142.7083,14540.625,184.375,14608.3333,184.375,14608.3333,264.5833,14493.75,264.5833,14493.75,142.7083" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="14493.75" x2="14540.625" y1="184.375" y2="184.375"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="22.9167" x="14503.125" y="170.8333">v3</text><!--MD5=[b4d40e81e7df799f3dde38229267d8b1]
cluster zap--><polygon fill="#555555" points="13954.1667,142.7083,14005.2083,142.7083,14012.5,184.375,14108.3333,184.375,14108.3333,264.5833,13954.1667,264.5833,13954.1667,142.7083" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="13954.1667" x2="14012.5" y1="184.375" y2="184.375"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="34.375" x="13963.5417" y="170.8333">zap</text><!--MD5=[f12f832c3ac0603ce526ef171d08d9c6]
cluster base--><polygon fill="#555555" points="17555.2083,2911.9792,17619.7917,2911.9792,17627.0833,2953.6458,18413.5417,2953.6458,18413.5417,4099.4792,17555.2083,4099.4792,17555.2083,2911.9792" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="17555.2083" x2="17627.0833" y1="2953.6458" y2="2953.6458"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="47.9167" x="17564.5833" y="2940.1041">base</text><!--MD5=[aa2f05b2676d7d34ffa7e771fb7634f3]
cluster client--><polygon fill="#555555" points="15214.5833,2735.9375,15286.4583,2735.9375,15293.75,2777.6041,16932.2917,2777.6041,16932.2917,5210.9375,15214.5833,5210.9375,15214.5833,2735.9375" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="15214.5833" x2="15293.75" y1="2777.6041" y2="2777.6041"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="55.2083" x="15223.9583" y="2764.0625">client</text><!--MD5=[a2d70b4f0f2b127294967585357d52e2]
cluster clock--><polygon fill="#555555" points="12733.3333,3725,12802.0833,3725,12809.375,3766.6666,14770.8333,3766.6666,14770.8333,4147.9167,12733.3333,4147.9167,12733.3333,3725" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="12733.3333" x2="12809.375" y1="3766.6666" y2="3766.6666"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="52.0833" x="12742.7083" y="3753.125">clock</text><!--MD5=[b70dedc944cb7b13a71066209130aacb]
cluster go-ipld-format--><polygon fill="#555555" points="17361.4583,3014.0625,17519.7917,3014.0625,17527.0833,3055.7291,17530.2083,3055.7291,17530.2083,3135.9375,17361.4583,3135.9375,17361.4583,3014.0625" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="17361.4583" x2="17527.0833" y1="3055.7291" y2="3055.7291"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="141.6667" x="17370.8333" y="3042.1875">go-ipld-format</text><!--MD5=[01435ace8273dc3cae88e7f376e4d373]
cluster core--><polygon fill="#555555" points="9768.75,2953.6458,9830.2083,2953.6458,9837.5,2995.3125,12708.3333,2995.3125,12708.3333,4087.5,9768.75,4087.5,9768.75,2953.6458" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="9768.75" x2="9837.5" y1="2995.3125" y2="2995.3125"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="44.7917" x="9778.125" y="2981.7708">core</text><!--MD5=[d77ae2549ff11ae59699f76b7d8f7963]
cluster cmd--><polygon fill="#555555" points="11480.2083,2098.9583,11539.5833,2098.9583,11546.875,2140.625,11951.0417,2140.625,11951.0417,2476.0417,11480.2083,2476.0417,11480.2083,2098.9583" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="11480.2083" x2="11546.875" y1="2140.625" y2="2140.625"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="42.7083" x="11489.5833" y="2127.0833">cmd</text><!--MD5=[ce5ccd5b359d4259c2ab78015c688698]
cluster container--><polygon fill="#555555" points="14915.625,52.6042,15027.0833,52.6042,15034.375,94.2708,15190.625,94.2708,15190.625,354.6875,14915.625,354.6875,14915.625,52.6042" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="14915.625" x2="15034.375" y1="94.2708" y2="94.2708"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="94.7917" x="14925" y="80.7291">container</text><!--MD5=[d9e6219461a48a49a5bbc70bea13ccec]
cluster go-datastore--><polygon fill="#555555" points="14722.9167,2300.5208,14866.6667,2300.5208,14873.9583,2342.1875,15126.0417,2342.1875,15126.0417,2422.3958,14722.9167,2422.3958,14722.9167,2300.5208" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="14722.9167" x2="14873.9583" y1="2342.1875" y2="2342.1875"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="127.0833" x="14732.2917" y="2328.6458">go-datastore</text><!--MD5=[1ab73ea1a8b69185e296af094a1c1143]
cluster crdt--><polygon fill="#555555" points="8400,4812.5,8456.25,4812.5,8463.5417,4854.1666,11264.5833,4854.1666,11264.5833,6350,8400,6350,8400,4812.5" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="8400" x2="8463.5417" y1="4854.1666" y2="4854.1666"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="39.5833" x="8409.375" y="4840.625">crdt</text><!--MD5=[e8f3788ad7b97e8de68b4194558bc2a1]
cluster db--><polygon fill="#555555" points="12643.75,4232.2917,12685.4167,4232.2917,12692.7083,4273.9583,15189.5833,4273.9583,15189.5833,6337.5,12643.75,6337.5,12643.75,4232.2917" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="12643.75" x2="12692.7083" y1="4273.9583" y2="4273.9583"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="25" x="12653.125" y="4260.4166">db</text><!--MD5=[7778d6cebf4d1039103c23fe2eb326e8]
cluster document--><polygon fill="#555555" points="16957.2917,4974.4792,17073.9583,4974.4792,17081.25,5016.1458,18262.5,5016.1458,18262.5,7175,16957.2917,7175,16957.2917,4974.4792" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="16957.2917" x2="17081.25" y1="5016.1458" y2="5016.1458"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="100" x="16966.6667" y="5002.6041">document</text><!--MD5=[b7dd4bea65ced79add8d4a24af9ce054]
cluster fetcher--><polygon fill="#555555" points="18287.5,4679.6875,18376.0417,4679.6875,18383.3333,4721.3541,19078.125,4721.3541,19078.125,6397.9167,18287.5,6397.9167,18287.5,4679.6875" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="18287.5" x2="18383.3333" y1="4721.3541" y2="4721.3541"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="71.875" x="18296.875" y="4707.8125">fetcher</text><!--MD5=[08cfbaecb6317b1e15f6360cd8b42728]
cluster http--><polygon fill="#555555" points="16423.9583,28.6458,16480.2083,28.6458,16487.5,70.3125,16759.375,70.3125,16759.375,378.6458,16423.9583,378.6458,16423.9583,28.6458" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="16423.9583" x2="16487.5" y1="70.3125" y2="70.3125"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="39.5833" x="16433.3333" y="56.7708">http</text><!--MD5=[f66b89ac91b880328fc1d965eb452218]
cluster key--><polygon fill="#555555" points="16957.2917,2876.0417,17009.375,2876.0417,17016.6667,2917.7083,17336.4583,2917.7083,17336.4583,3273.9583,16957.2917,3273.9583,16957.2917,2876.0417" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="16957.2917" x2="17016.6667" y1="2917.7083" y2="2917.7083"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="35.4167" x="16966.6667" y="2904.1666">key</text><!--MD5=[72fae8e1779ba7dedab19f6352fd74e8]
cluster parser--><polygon fill="#555555" points="6667.7083,2984.375,6748.9583,2984.375,6756.25,3026.0416,8375,3026.0416,8375,5392.1875,6667.7083,5392.1875,6667.7083,2984.375" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="6667.7083" x2="6756.25" y1="3026.0416" y2="3026.0416"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="64.5833" x="6677.0833" y="3012.5">parser</text><!--MD5=[7f1db14b27b7629509c802e44e13c9c4]
cluster context--><polygon fill="#555555" points="4956.25,2300.5208,5047.9167,2300.5208,5055.2083,2342.1875,5070.8333,2342.1875,5070.8333,2422.3958,4956.25,2422.3958,4956.25,2300.5208" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="4956.25" x2="5055.2083" y1="2342.1875" y2="2342.1875"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="75" x="4965.625" y="2328.6458">context</text><!--MD5=[f1307e32d346f66dcf98fb0ec38c139c]
cluster planner--><polygon fill="#555555" points="27.0833,2501.0417,118.75,2501.0417,126.0417,2542.7083,6642.7083,2542.7083,6642.7083,6361.9792,27.0833,6361.9792,27.0833,2501.0417" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="27.0833" x2="126.0417" y1="2542.7083" y2="2542.7083"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="75" x="36.4583" y="2529.1666">planner</text><!--MD5=[c4b2646ccf351ce975daa3e90fbe5a62]
cluster schema--><polygon fill="#555555" points="18438.5417,2706.7708,18533.3333,2706.7708,18540.625,2748.4375,20331.25,2748.4375,20331.25,4087.5,18438.5417,4087.5,18438.5417,2706.7708" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="18438.5417" x2="18540.625" y1="2748.4375" y2="2748.4375"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="78.125" x="18447.9167" y="2734.8958">schema</text><!--MD5=[8e8793dd43192e667fd0ad824fcb1203]
cluster graphql--><polygon fill="#555555" points="18461.4583,2300.5208,18553.125,2300.5208,18560.4167,2342.1875,18603.125,2342.1875,18603.125,2422.3958,18461.4583,2422.3958,18461.4583,2300.5208" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="18461.4583" x2="18560.4167" y1="2342.1875" y2="2342.1875"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="75" x="18470.8333" y="2328.6458">graphql</text><!--MD5=[c23849cc5f4a85746a20de4317c530fc]
cluster store--><polygon fill="#555555" points="17389.5833,645.3125,17458.3333,645.3125,17465.625,686.9791,18012.5,686.9791,18012.5,1019.2708,17389.5833,1019.2708,17389.5833,645.3125" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="17389.5833" x2="17465.625" y1="686.9791" y2="686.9791"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="52.0833" x="17398.9583" y="673.4375">store</text><!--MD5=[c9877cde40eeffbe08dcc0776da2d0b9]
cluster go-ipfs-blockstore--><polygon fill="#555555" points="17388.5417,142.7083,17587.5,142.7083,17594.7917,184.375,17597.9167,184.375,17597.9167,264.5833,17388.5417,264.5833,17388.5417,142.7083" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="17388.5417" x2="17594.7917" y1="184.375" y2="184.375"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="182.2917" x="17397.9167" y="170.8333">go-ipfs-blockstore</text><!--MD5=[0ced8d656a4b5114ad938258804d240c]
cluster tests_test--><polygon fill="#555555" points="18636.4583,77.0833,18753.125,77.0833,18760.4167,118.75,18859.375,118.75,18859.375,330.2083,18636.4583,330.2083,18636.4583,77.0833" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="18636.4583" x2="18760.4167" y1="118.75" y2="118.75"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="100" x="18645.8333" y="105.2083">tests_test</text><!--MD5=[c52f45833d539af9e29a9d34b8b7302b]
cluster utils--><polygon fill="#555555" points="19390.625,16.6667,19450,16.6667,19457.2917,58.3333,19784.375,58.3333,19784.375,390.625,19390.625,390.625,19390.625,16.6667" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="19390.625" x2="19457.2917" y1="58.3333" y2="58.3333"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" textLength="42.7083" x="19400" y="44.7916">utils</text><!--MD5=[857233cdc7018b1e8695fe78ce49561f]
cluster __builtin__--><polygon fill="#555555" points="11976.0417,2300.5208,12055.2083,2300.5208,12062.5,2342.1875,12479.1667,2342.1875,12479.1667,2422.3958,11976.0417,2422.3958,11976.0417,2300.5208" style="stroke:#2A9FD6;stroke-width:1.0416666666666667;"/><line style="stroke:#2A9FD6;stroke-width:1.0416666666666667;" x1="11976.0417" x2="12062.5" y1="2342.1875" y2="2342.1875"/><text fill="#2A9FD6" font-family="&quot;Verdana&quot;" font-size="20.8333" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="62.5" x="11985.4167" y="2328.6458">builtin</text><!--MD5=[f349cabcb8eeaf39b8dc09d94a60a12e]
class badger.Datastore--><rect codeLine="3" fill="#2A9FD6" height="762.4969" id="badger.Datastore" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="487.5" x="14384.375" y="469.7917"/><ellipse cx="14594.2708" cy="492.2916" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M14596.4681,488.483 Q14596.8424,488.483 14596.9564,488.6946 Q14597.0866,488.9062 14597.0866,489.2968 L14597.0866,490.4036 Q14597.0866,491.2337 14596.4681,491.2337 Q14596.3704,491.2337 14596.2891,491.2174 Q14596.2077,491.2011 14596.1426,491.1686 Q14596.0938,491.136 14596.0449,491.0872 Q14595.9961,491.0221 14595.9635,490.9895 Q14595.9473,490.957 14595.9147,490.8756 Q14595.8984,490.7942 14595.8822,490.7779 Q14595.8822,490.7454 14595.8659,490.664 Q14595.8496,490.5826 14595.8496,490.5664 Q14595.7682,490.192 14595.3613,489.9641 Q14594.9544,489.72 14594.3685,489.72 Q14593.7826,489.72 14593.3594,489.9967 Q14592.9525,490.2734 14592.9525,490.6803 Q14592.9525,491.1035 14593.3594,491.3313 Q14593.7826,491.5592 14594.3197,491.6406 Q14594.873,491.7057 14595.5404,491.8847 Q14596.224,492.0638 14596.6146,492.373 Q14597.347,492.9589 14597.347,493.9355 Q14597.347,494.9121 14596.5495,495.5143 Q14595.7682,496.1165 14594.4824,496.1165 Q14593.457,496.1165 14592.5456,495.6282 Q14592.2852,495.9212 14592.041,495.9212 Q14591.4063,495.9212 14591.4063,495.1074 L14591.4063,494.2773 Q14591.4063,493.8704 14591.5365,493.6588 Q14591.6829,493.4472 14592.0247,493.4472 Q14592.1387,493.4472 14592.2201,493.4798 Q14592.3177,493.496 14592.3828,493.5449 Q14592.4479,493.5937 14592.4967,493.6425 Q14592.5456,493.6914 14592.5618,493.7727 Q14592.5944,493.8378 14592.6107,493.8867 Q14592.627,493.9192 14592.6432,493.9843 Q14592.6595,494.0332 14592.6595,494.0494 Q14592.7572,494.3912 14593.2617,494.6354 Q14593.7826,494.8632 14594.401,494.8632 Q14595.1009,494.8632 14595.5729,494.5865 Q14596.0449,494.3098 14596.0449,493.9192 Q14596.0449,493.5449 14595.6706,493.317 Q14595.3125,493.0891 14594.8242,493.024 Q14594.3522,492.9427 14593.7012,492.7962 Q14593.0664,492.6334 14592.6758,492.4218 Q14592.2038,492.1451 14591.9271,491.6894 Q14591.6504,491.2174 14591.6504,490.6803 Q14591.6504,489.7363 14592.4154,489.1178 Q14593.1966,488.483 14594.3685,488.483 Q14595.3288,488.483 14595.9798,488.8899 Q14596.0938,488.6458 14596.1914,488.5644 Q14596.2891,488.483 14596.4681,488.483 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="48.9583" x="14619.2708" y="502.0832">Datastore</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14385.4167" x2="14870.8333" y1="514.7916" y2="514.7916"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14392.7083" y="523.1249"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="116.6667" x="14409.375" y="535.6248">closeLk sync.RWMutex</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14392.7083" y="547.2915"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="56.25" x="14409.375" y="559.7914">closed bool</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14392.7083" y="571.458"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="14409.375" y="583.9579">closeOnce sync.Once</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14392.7083" y="595.6246"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="34.375" x="14409.375" y="608.1245">closing</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="25" x="14446.875" y="608.1245">chan</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="14475" y="608.1245"/><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="28.125" x="14475" y="608.1245">struct</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="14503.125" y="608.1245">{}</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14392.7083" y="619.7912"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="113.5417" x="14409.375" y="632.2911">gcDiscardRatio float64</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14392.7083" y="643.9577"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="110.4167" x="14409.375" y="656.4576">gcSleep time.Duration</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14392.7083" y="668.1243"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="118.75" x="14409.375" y="680.6242">gcInterval time.Duration</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14392.7083" y="692.2908"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="78.125" x="14409.375" y="704.7908">syncWrites bool</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="14412.5" y="728.9573"/><ellipse cx="14395.8333" cy="743.749" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="14409.375" y="753.1239">DB *v3.DB</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14385.4167" x2="14870.8333" y1="764.7905" y2="764.7905"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14392.7083" y="773.1239"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="14409.375" y="785.6238">periodicGC()</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14392.7083" y="797.2904"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="214.5833" x="14409.375" y="809.7904">newImplicitTransaction(readOnly bool) *txn</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14392.7083" y="821.457"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="77.0833" x="14409.375" y="833.9569">gcOnce() error</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="14412.5" y="858.1235"/><ellipse cx="14395.8333" cy="872.9151" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="390.625" x="14409.375" y="882.29">NewTransaction(ctx context.Context, readOnly bool) (go-datastore.Txn, error)</text><ellipse cx="14395.8333" cy="897.0817" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="323.9583" x="14409.375" y="906.4566">Put(ctx context.Context, key go-datastore.Key, value []byte) error</text><ellipse cx="14395.8333" cy="921.2483" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="279.1667" x="14409.375" y="930.6232">Sync(ctx context.Context, prefix go-datastore.Key) error</text><ellipse cx="14395.8333" cy="945.4148" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="451.0417" x="14409.375" y="954.7897">PutWithTTL(ctx context.Context, key go-datastore.Key, value []byte, ttl time.Duration) error</text><ellipse cx="14395.8333" cy="969.5814" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="366.6667" x="14409.375" y="978.9563">SetTTL(ctx context.Context, key go-datastore.Key, ttl time.Duration) error</text><ellipse cx="14395.8333" cy="993.7479" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="375" x="14409.375" y="1003.1229">GetExpiration(ctx context.Context, key go-datastore.Key) (time.Time, error)</text><ellipse cx="14395.8333" cy="1017.9145" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="304.1667" x="14409.375" y="1027.2894">Get(ctx context.Context, key go-datastore.Key) ([]byte, error)</text><ellipse cx="14395.8333" cy="1042.0811" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="300" x="14409.375" y="1051.456">Has(ctx context.Context, key go-datastore.Key) (bool, error)</text><ellipse cx="14395.8333" cy="1066.2476" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="309.375" x="14409.375" y="1075.6226">GetSize(ctx context.Context, key go-datastore.Key) (int, error)</text><ellipse cx="14395.8333" cy="1090.4142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="277.0833" x="14409.375" y="1099.7891">Delete(ctx context.Context, key go-datastore.Key) error</text><ellipse cx="14395.8333" cy="1114.5808" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="323.9583" x="14409.375" y="1123.9557">Query(ctx context.Context, q query.Query) (query.Results, error)</text><ellipse cx="14395.8333" cy="1138.7473" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="231.25" x="14409.375" y="1148.1222">DiskUsage(ctx context.Context) (uint64, error)</text><ellipse cx="14395.8333" cy="1162.9139" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="14409.375" y="1172.2888">Close() error</text><ellipse cx="14395.8333" cy="1187.0805" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="271.875" x="14409.375" y="1196.4554">Batch(ctx context.Context) (go-datastore.Batch, error)</text><ellipse cx="14395.8333" cy="1211.247" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="210.4167" x="14409.375" y="1220.6219">CollectGarbage(ctx context.Context) error</text><!--MD5=[f859ad2ba7ae094df6f6847ae2ab79a3]
class badger.Options--><rect codeLine="36" fill="#2A9FD6" height="134.1663" id="badger.Options" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="157.2917" x="14190.1042" y="783.8542"/><ellipse cx="14240.1042" cy="806.3541" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M14242.3014,802.5455 Q14242.6758,802.5455 14242.7897,802.7571 Q14242.9199,802.9687 14242.9199,803.3593 L14242.9199,804.4661 Q14242.9199,805.2962 14242.3014,805.2962 Q14242.2038,805.2962 14242.1224,805.2799 Q14242.041,805.2636 14241.9759,805.2311 Q14241.9271,805.1985 14241.8783,805.1497 Q14241.8294,805.0846 14241.7969,805.052 Q14241.7806,805.0195 14241.748,804.9381 Q14241.7318,804.8567 14241.7155,804.8404 Q14241.7155,804.8079 14241.6992,804.7265 Q14241.6829,804.6451 14241.6829,804.6289 Q14241.6016,804.2545 14241.1947,804.0266 Q14240.7878,803.7825 14240.2018,803.7825 Q14239.6159,803.7825 14239.1927,804.0592 Q14238.7858,804.3359 14238.7858,804.7428 Q14238.7858,805.166 14239.1927,805.3938 Q14239.6159,805.6217 14240.153,805.7031 Q14240.7064,805.7682 14241.3737,805.9472 Q14242.0573,806.1263 14242.4479,806.4355 Q14243.1803,807.0214 14243.1803,807.998 Q14243.1803,808.9746 14242.3828,809.5768 Q14241.6016,810.179 14240.3158,810.179 Q14239.2904,810.179 14238.3789,809.6907 Q14238.1185,809.9837 14237.8743,809.9837 Q14237.2396,809.9837 14237.2396,809.1699 L14237.2396,808.3398 Q14237.2396,807.9329 14237.3698,807.7213 Q14237.5163,807.5097 14237.8581,807.5097 Q14237.972,807.5097 14238.0534,807.5423 Q14238.151,807.5585 14238.2161,807.6074 Q14238.2813,807.6562 14238.3301,807.705 Q14238.3789,807.7539 14238.3952,807.8352 Q14238.4277,807.9003 14238.444,807.9492 Q14238.4603,807.9817 14238.4766,808.0468 Q14238.4928,808.0957 14238.4928,808.1119 Q14238.5905,808.4537 14239.0951,808.6979 Q14239.6159,808.9257 14240.2344,808.9257 Q14240.9342,808.9257 14241.4063,808.649 Q14241.8783,808.3723 14241.8783,807.9817 Q14241.8783,807.6074 14241.5039,807.3795 Q14241.1458,807.1516 14240.6576,807.0865 Q14240.1855,807.0052 14239.5345,806.8587 Q14238.8997,806.6959 14238.5091,806.4843 Q14238.0371,806.2076 14237.7604,805.7519 Q14237.4837,805.2799 14237.4837,804.7428 Q14237.4837,803.7988 14238.2487,803.1803 Q14239.0299,802.5455 14240.2018,802.5455 Q14241.1621,802.5455 14241.8132,802.9524 Q14241.9271,802.7083 14242.0247,802.6269 Q14242.1224,802.5455 14242.3014,802.5455 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="38.5417" x="14265.1042" y="816.1457">Options</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14191.1458" x2="14346.3542" y1="828.8541" y2="828.8541"/><ellipse cx="14201.5625" cy="840.3124" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="115.625" x="14215.1042" y="849.6873">GcDiscardRatio float64</text><ellipse cx="14201.5625" cy="864.479" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="120.8333" x="14215.1042" y="873.8539">GcInterval time.Duration</text><ellipse cx="14201.5625" cy="888.6455" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="14215.1042" y="898.0204">GcSleep time.Duration</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14191.1458" x2="14346.3542" y1="909.6871" y2="909.6871"/><!--MD5=[e253f719451c69a8ba14c1a3213822e1]
class badger.batch--><rect codeLine="42" fill="#2A9FD6" height="327.4988" id="badger.batch" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="360.4167" x="14908.3333" y="687.5"/><ellipse cx="15065.1042" cy="709.9999" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M15067.3014,706.1914 Q15067.6758,706.1914 15067.7897,706.4029 Q15067.9199,706.6145 15067.9199,707.0052 L15067.9199,708.1119 Q15067.9199,708.942 15067.3014,708.942 Q15067.2038,708.942 15067.1224,708.9257 Q15067.041,708.9095 15066.9759,708.8769 Q15066.9271,708.8443 15066.8783,708.7955 Q15066.8294,708.7304 15066.7969,708.6979 Q15066.7806,708.6653 15066.748,708.5839 Q15066.7318,708.5026 15066.7155,708.4863 Q15066.7155,708.4537 15066.6992,708.3723 Q15066.6829,708.291 15066.6829,708.2747 Q15066.6016,707.9003 15066.1947,707.6725 Q15065.7878,707.4283 15065.2018,707.4283 Q15064.6159,707.4283 15064.1927,707.705 Q15063.7858,707.9817 15063.7858,708.3886 Q15063.7858,708.8118 15064.1927,709.0397 Q15064.6159,709.2675 15065.153,709.3489 Q15065.7064,709.414 15066.3737,709.593 Q15067.0573,709.7721 15067.4479,710.0813 Q15068.1803,710.6673 15068.1803,711.6438 Q15068.1803,712.6204 15067.3828,713.2226 Q15066.6016,713.8248 15065.3158,713.8248 Q15064.2904,713.8248 15063.3789,713.3365 Q15063.1185,713.6295 15062.8743,713.6295 Q15062.2396,713.6295 15062.2396,712.8157 L15062.2396,711.9856 Q15062.2396,711.5787 15062.3698,711.3671 Q15062.5163,711.1555 15062.8581,711.1555 Q15062.972,711.1555 15063.0534,711.1881 Q15063.151,711.2044 15063.2161,711.2532 Q15063.2813,711.302 15063.3301,711.3509 Q15063.3789,711.3997 15063.3952,711.4811 Q15063.4277,711.5462 15063.444,711.595 Q15063.4603,711.6276 15063.4766,711.6927 Q15063.4928,711.7415 15063.4928,711.7578 Q15063.5905,712.0996 15064.0951,712.3437 Q15064.6159,712.5716 15065.2344,712.5716 Q15065.9342,712.5716 15066.4063,712.2949 Q15066.8783,712.0182 15066.8783,711.6276 Q15066.8783,711.2532 15066.5039,711.0253 Q15066.1458,710.7975 15065.6576,710.7324 Q15065.1855,710.651 15064.5345,710.5045 Q15063.8997,710.3417 15063.5091,710.1302 Q15063.0371,709.8535 15062.7604,709.3977 Q15062.4837,708.9257 15062.4837,708.3886 Q15062.4837,707.4446 15063.2487,706.8261 Q15064.0299,706.1914 15065.2018,706.1914 Q15066.1621,706.1914 15066.8132,706.5983 Q15066.9271,706.3541 15067.0247,706.2727 Q15067.1224,706.1914 15067.3014,706.1914 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="28.125" x="15090.1042" y="719.7916">batch</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14909.375" x2="15267.7083" y1="732.4999" y2="732.4999"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14916.6667" y="740.8332"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="67.7083" x="14933.3333" y="753.3331">ds *Datastore</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14916.6667" y="764.9998"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="130.2083" x="14933.3333" y="777.4997">writeBatch *v3.WriteBatch</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14909.375" x2="15267.7083" y1="789.1664" y2="789.1664"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14916.6667" y="797.4997"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="220.8333" x="14933.3333" y="809.9996">put(key go-datastore.Key, value []byte) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14916.6667" y="821.6663"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="172.9167" x="14933.3333" y="834.1662">delete(key go-datastore.Key) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14916.6667" y="845.8328"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="72.9167" x="14933.3333" y="858.3327">commit() error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14916.6667" y="869.9994"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="14933.3333" y="882.4993">cancel()</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="14936.4583" y="906.6659"/><ellipse cx="14919.7917" cy="921.4575" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="323.9583" x="14933.3333" y="930.8324">Put(ctx context.Context, key go-datastore.Key, value []byte) error</text><ellipse cx="14919.7917" cy="945.6241" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="277.0833" x="14933.3333" y="954.999">Delete(ctx context.Context, key go-datastore.Key) error</text><ellipse cx="14919.7917" cy="969.7906" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="14933.3333" y="979.1656">Commit(ctx context.Context) error</text><ellipse cx="14919.7917" cy="993.9572" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="71.875" x="14933.3333" y="1003.3321">Cancel() error</text><!--MD5=[abc058d8ee6c3a223962cf04476d830e]
class badger.compatLogger--><rect codeLine="57" fill="#2A9FD6" height="134.1663" id="badger.compatLogger" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="244.7917" x="13908.8542" y="783.8542"/><ellipse cx="13985.4167" cy="806.3541" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M13987.6139,802.5455 Q13987.9883,802.5455 13988.1022,802.7571 Q13988.2324,802.9687 13988.2324,803.3593 L13988.2324,804.4661 Q13988.2324,805.2962 13987.6139,805.2962 Q13987.5163,805.2962 13987.4349,805.2799 Q13987.3535,805.2636 13987.2884,805.2311 Q13987.2396,805.1985 13987.1908,805.1497 Q13987.1419,805.0846 13987.1094,805.052 Q13987.0931,805.0195 13987.0605,804.9381 Q13987.0443,804.8567 13987.028,804.8404 Q13987.028,804.8079 13987.0117,804.7265 Q13986.9954,804.6451 13986.9954,804.6289 Q13986.9141,804.2545 13986.5072,804.0266 Q13986.1003,803.7825 13985.5143,803.7825 Q13984.9284,803.7825 13984.5052,804.0592 Q13984.0983,804.3359 13984.0983,804.7428 Q13984.0983,805.166 13984.5052,805.3938 Q13984.9284,805.6217 13985.4655,805.7031 Q13986.0189,805.7682 13986.6862,805.9472 Q13987.3698,806.1263 13987.7604,806.4355 Q13988.4928,807.0214 13988.4928,807.998 Q13988.4928,808.9746 13987.6953,809.5768 Q13986.9141,810.179 13985.6283,810.179 Q13984.6029,810.179 13983.6914,809.6907 Q13983.431,809.9837 13983.1868,809.9837 Q13982.5521,809.9837 13982.5521,809.1699 L13982.5521,808.3398 Q13982.5521,807.9329 13982.6823,807.7213 Q13982.8288,807.5097 13983.1706,807.5097 Q13983.2845,807.5097 13983.3659,807.5423 Q13983.4635,807.5585 13983.5286,807.6074 Q13983.5938,807.6562 13983.6426,807.705 Q13983.6914,807.7539 13983.7077,807.8352 Q13983.7402,807.9003 13983.7565,807.9492 Q13983.7728,807.9817 13983.7891,808.0468 Q13983.8053,808.0957 13983.8053,808.1119 Q13983.903,808.4537 13984.4076,808.6979 Q13984.9284,808.9257 13985.5469,808.9257 Q13986.2467,808.9257 13986.7188,808.649 Q13987.1908,808.3723 13987.1908,807.9817 Q13987.1908,807.6074 13986.8164,807.3795 Q13986.4583,807.1516 13985.9701,807.0865 Q13985.498,807.0052 13984.847,806.8587 Q13984.2122,806.6959 13983.8216,806.4843 Q13983.3496,806.2076 13983.0729,805.7519 Q13982.7962,805.2799 13982.7962,804.7428 Q13982.7962,803.7988 13983.5612,803.1803 Q13984.3424,802.5455 13985.5143,802.5455 Q13986.4746,802.5455 13987.1257,802.9524 Q13987.2396,802.7083 13987.3372,802.6269 Q13987.4349,802.5455 13987.6139,802.5455 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="72.9167" x="14010.4167" y="816.1457">compatLogger</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13909.8958" x2="14152.6042" y1="828.8541" y2="828.8541"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13917.1875" y="837.1874"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="157.2917" x="13933.8542" y="849.6873">skipLogger zap.SugaredLogger</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13909.8958" x2="14152.6042" y1="861.354" y2="861.354"/><ellipse cx="13920.3125" cy="872.8123" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="80.2083" x="13933.8542" y="882.1872">Warning(args ...</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14014.0625" y="882.1872">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="12.5" x="14057.8125" y="882.1872">{})</text><ellipse cx="13920.3125" cy="896.9789" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="152.0833" x="13933.8542" y="906.3538">Warningf(format string, args ...</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14085.9375" y="906.3538">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="12.5" x="14129.6875" y="906.3538">{})</text><!--MD5=[64630b9ef4705035ff2cf4b31eec10a3]
class badger.txn--><rect codeLine="64" fill="#2A9FD6" height="762.4969" id="badger.txn" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="487.5" x="14145.8333" y="1294.7917"/><ellipse cx="14372.9167" cy="1317.2916" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M14375.1139,1313.483 Q14375.4883,1313.483 14375.6022,1313.6946 Q14375.7324,1313.9062 14375.7324,1314.2968 L14375.7324,1315.4036 Q14375.7324,1316.2337 14375.1139,1316.2337 Q14375.0163,1316.2337 14374.9349,1316.2174 Q14374.8535,1316.2011 14374.7884,1316.1686 Q14374.7396,1316.136 14374.6908,1316.0872 Q14374.6419,1316.0221 14374.6094,1315.9895 Q14374.5931,1315.957 14374.5605,1315.8756 Q14374.5443,1315.7942 14374.528,1315.7779 Q14374.528,1315.7454 14374.5117,1315.664 Q14374.4954,1315.5826 14374.4954,1315.5664 Q14374.4141,1315.192 14374.0072,1314.9641 Q14373.6003,1314.72 14373.0143,1314.72 Q14372.4284,1314.72 14372.0052,1314.9967 Q14371.5983,1315.2734 14371.5983,1315.6803 Q14371.5983,1316.1035 14372.0052,1316.3313 Q14372.4284,1316.5592 14372.9655,1316.6406 Q14373.5189,1316.7057 14374.1862,1316.8847 Q14374.8698,1317.0638 14375.2604,1317.373 Q14375.9928,1317.9589 14375.9928,1318.9355 Q14375.9928,1319.9121 14375.1953,1320.5143 Q14374.4141,1321.1165 14373.1283,1321.1165 Q14372.1029,1321.1165 14371.1914,1320.6282 Q14370.931,1320.9212 14370.6868,1320.9212 Q14370.0521,1320.9212 14370.0521,1320.1074 L14370.0521,1319.2773 Q14370.0521,1318.8704 14370.1823,1318.6588 Q14370.3288,1318.4472 14370.6706,1318.4472 Q14370.7845,1318.4472 14370.8659,1318.4798 Q14370.9635,1318.496 14371.0286,1318.5449 Q14371.0938,1318.5937 14371.1426,1318.6425 Q14371.1914,1318.6914 14371.2077,1318.7727 Q14371.2402,1318.8378 14371.2565,1318.8867 Q14371.2728,1318.9192 14371.2891,1318.9843 Q14371.3053,1319.0332 14371.3053,1319.0494 Q14371.403,1319.3912 14371.9076,1319.6354 Q14372.4284,1319.8632 14373.0469,1319.8632 Q14373.7467,1319.8632 14374.2188,1319.5865 Q14374.6908,1319.3098 14374.6908,1318.9192 Q14374.6908,1318.5449 14374.3164,1318.317 Q14373.9583,1318.0891 14373.4701,1318.024 Q14372.998,1317.9427 14372.347,1317.7962 Q14371.7122,1317.6334 14371.3216,1317.4218 Q14370.8496,1317.1451 14370.5729,1316.6894 Q14370.2962,1316.2174 14370.2962,1315.6803 Q14370.2962,1314.7363 14371.0612,1314.1178 Q14371.8424,1313.483 14373.0143,1313.483 Q14373.9746,1313.483 14374.6257,1313.8899 Q14374.7396,1313.6458 14374.8372,1313.5644 Q14374.9349,1313.483 14375.1139,1313.483 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="14.5833" x="14397.9167" y="1327.0832">txn</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14146.875" x2="14632.2917" y1="1339.7916" y2="1339.7916"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14154.1667" y="1348.1249"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="67.7083" x="14170.8333" y="1360.6248">ds *Datastore</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14154.1667" y="1372.2915"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="14170.8333" y="1384.7914">txn *v3.Txn</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14154.1667" y="1396.458"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="14170.8333" y="1408.9579">implicit bool</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14146.875" x2="14632.2917" y1="1420.6246" y2="1420.6246"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14154.1667" y="1428.9579"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="220.8333" x="14170.8333" y="1441.4578">put(key go-datastore.Key, value []byte) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14154.1667" y="1453.1245"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="347.9167" x="14170.8333" y="1465.6244">putWithTTL(key go-datastore.Key, value []byte, ttl time.Duration) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14154.1667" y="1477.2911"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="270.8333" x="14170.8333" y="1489.791">getExpiration(key go-datastore.Key) (time.Time, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14154.1667" y="1501.4576"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="262.5" x="14170.8333" y="1513.9575">setTTL(key go-datastore.Key, ttl time.Duration) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14154.1667" y="1525.6242"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="200" x="14170.8333" y="1538.1241">get(key go-datastore.Key) ([]byte, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14154.1667" y="1549.7907"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="195.8333" x="14170.8333" y="1562.2907">has(key go-datastore.Key) (bool, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14154.1667" y="1573.9573"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="205.2083" x="14170.8333" y="1586.4572">getSize(key go-datastore.Key) (int, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14154.1667" y="1598.1239"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="172.9167" x="14170.8333" y="1610.6238">delete(key go-datastore.Key) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14154.1667" y="1622.2904"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="218.75" x="14170.8333" y="1634.7904">query(q query.Query) (query.Results, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14154.1667" y="1646.457"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="72.9167" x="14170.8333" y="1658.9569">commit() error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14154.1667" y="1670.6236"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="14170.8333" y="1683.1235">close() error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14154.1667" y="1694.7901"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="44.7917" x="14170.8333" y="1707.29">discard()</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="14173.9583" y="1731.4566"/><ellipse cx="14157.2917" cy="1746.2483" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="323.9583" x="14170.8333" y="1755.6232">Put(ctx context.Context, key go-datastore.Key, value []byte) error</text><ellipse cx="14157.2917" cy="1770.4148" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="279.1667" x="14170.8333" y="1779.7897">Sync(ctx context.Context, prefix go-datastore.Key) error</text><ellipse cx="14157.2917" cy="1794.5814" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="451.0417" x="14170.8333" y="1803.9563">PutWithTTL(ctx context.Context, key go-datastore.Key, value []byte, ttl time.Duration) error</text><ellipse cx="14157.2917" cy="1818.7479" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="375" x="14170.8333" y="1828.1229">GetExpiration(ctx context.Context, key go-datastore.Key) (time.Time, error)</text><ellipse cx="14157.2917" cy="1842.9145" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="366.6667" x="14170.8333" y="1852.2894">SetTTL(ctx context.Context, key go-datastore.Key, ttl time.Duration) error</text><ellipse cx="14157.2917" cy="1867.0811" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="304.1667" x="14170.8333" y="1876.456">Get(ctx context.Context, key go-datastore.Key) ([]byte, error)</text><ellipse cx="14157.2917" cy="1891.2476" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="300" x="14170.8333" y="1900.6226">Has(ctx context.Context, key go-datastore.Key) (bool, error)</text><ellipse cx="14157.2917" cy="1915.4142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="309.375" x="14170.8333" y="1924.7891">GetSize(ctx context.Context, key go-datastore.Key) (int, error)</text><ellipse cx="14157.2917" cy="1939.5808" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="277.0833" x="14170.8333" y="1948.9557">Delete(ctx context.Context, key go-datastore.Key) error</text><ellipse cx="14157.2917" cy="1963.7473" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="323.9583" x="14170.8333" y="1973.1222">Query(ctx context.Context, q query.Query) (query.Results, error)</text><ellipse cx="14157.2917" cy="1987.9139" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="14170.8333" y="1997.2888">Commit(ctx context.Context) error</text><ellipse cx="14157.2917" cy="2012.0805" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="14170.8333" y="2021.4554">Close() error</text><ellipse cx="14157.2917" cy="2036.247" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="142.7083" x="14170.8333" y="2045.6219">Discard(ctx context.Context)</text><!--MD5=[2dd5e66f6911a938ba90011a035fe4d4]
class v3.Options--><rect fill="#2A9FD6" height="51.2499" id="v3.Options" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="80.2083" x="14510.9375" y="196.875"/><ellipse cx="14525.5208" cy="214.1666" fill="#777777" rx="10.4167" ry="10.4167" style="stroke:#444444;stroke-width:1.0416666666666667;"/><path d="M14525.9928,216.7382 Q14526.5951,216.7382 14527.002,216.5917 Q14527.4251,216.4453 14527.5879,216.2825 Q14527.7669,216.1197 14527.946,215.9733 Q14528.1413,215.8268 14528.304,215.8268 Q14528.5482,215.8268 14528.7272,216.0221 Q14528.9225,216.2011 14528.9225,216.4453 Q14528.9225,216.9824 14528.0599,217.4869 Q14527.2135,217.9915 14525.9603,217.9915 Q14524.3815,217.9915 14523.3236,217.0638 Q14522.2819,216.1197 14522.2819,214.7037 L14522.2819,213.8736 Q14522.2819,212.3763 14523.2585,211.3671 Q14524.235,210.358 14525.6836,210.358 Q14526.5625,210.358 14527.4577,210.7812 L14527.5879,210.83 Q14527.7995,210.5208 14528.1087,210.5208 Q14528.4831,210.5208 14528.6133,210.7324 Q14528.7435,210.944 14528.7435,211.3509 L14528.7435,212.3925 Q14528.7435,213.2226 14528.1087,213.2226 Q14527.8809,213.2226 14527.7344,213.1087 Q14527.6042,212.9785 14527.5716,212.8808 Q14527.5391,212.7669 14527.5065,212.5553 Q14527.4251,212.1809 14527.0345,211.9531 Q14526.6602,211.7252 14526.3346,211.6601 Q14526.0091,211.595 14525.7324,211.595 Q14524.7884,211.595 14524.1536,212.246 Q14523.5352,212.8808 14523.5352,213.8736 L14523.5352,214.6712 Q14523.5352,215.6152 14524.2025,216.1848 Q14524.8698,216.7382 14525.9928,216.7382 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="38.5417" x="14544.2708" y="218.7499">Options</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14511.9792" x2="14590.1042" y1="231.4582" y2="231.4582"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14511.9792" x2="14590.1042" y1="239.7916" y2="239.7916"/><!--MD5=[469fc0b74922b0055f07cf6ba560ec65]
class zap.SugaredLogger--><rect fill="#2A9FD6" height="51.2499" id="zap.SugaredLogger" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="119.7917" x="13971.3542" y="196.875"/><ellipse cx="13985.9375" cy="214.1666" fill="#777777" rx="10.4167" ry="10.4167" style="stroke:#444444;stroke-width:1.0416666666666667;"/><path d="M13986.4095,216.7382 Q13987.0117,216.7382 13987.4186,216.5917 Q13987.8418,216.4453 13988.0046,216.2825 Q13988.1836,216.1197 13988.3626,215.9733 Q13988.5579,215.8268 13988.7207,215.8268 Q13988.9648,215.8268 13989.1439,216.0221 Q13989.3392,216.2011 13989.3392,216.4453 Q13989.3392,216.9824 13988.4766,217.4869 Q13987.6302,217.9915 13986.377,217.9915 Q13984.7982,217.9915 13983.7402,217.0638 Q13982.6986,216.1197 13982.6986,214.7037 L13982.6986,213.8736 Q13982.6986,212.3763 13983.6751,211.3671 Q13984.6517,210.358 13986.1003,210.358 Q13986.9792,210.358 13987.8743,210.7812 L13988.0046,210.83 Q13988.2161,210.5208 13988.5254,210.5208 Q13988.8997,210.5208 13989.0299,210.7324 Q13989.1602,210.944 13989.1602,211.3509 L13989.1602,212.3925 Q13989.1602,213.2226 13988.5254,213.2226 Q13988.2975,213.2226 13988.151,213.1087 Q13988.0208,212.9785 13987.9883,212.8808 Q13987.9557,212.7669 13987.9232,212.5553 Q13987.8418,212.1809 13987.4512,211.9531 Q13987.0768,211.7252 13986.7513,211.6601 Q13986.4258,211.595 13986.1491,211.595 Q13985.2051,211.595 13984.5703,212.246 Q13983.9518,212.8808 13983.9518,213.8736 L13983.9518,214.6712 Q13983.9518,215.6152 13984.6191,216.1848 Q13985.2865,216.7382 13986.4095,216.7382 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="78.125" x="14004.6875" y="218.7499">SugaredLogger</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13972.3958" x2="14090.1042" y1="231.4582" y2="231.4582"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13972.3958" x2="14090.1042" y1="239.7916" y2="239.7916"/><!--MD5=[943b21b76c80d61e7aa8586f2627d75a]
class base.CollectionDescription--><rect codeLine="103" fill="#2A9FD6" height="206.6659" id="base.CollectionDescription" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="263.5417" x="17958.8542" y="2990.625"/><ellipse cx="18028.6458" cy="3013.1249" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M18030.8431,3009.3164 Q18031.2174,3009.3164 18031.3314,3009.5279 Q18031.4616,3009.7395 18031.4616,3010.1302 L18031.4616,3011.2369 Q18031.4616,3012.067 18030.8431,3012.067 Q18030.7454,3012.067 18030.6641,3012.0507 Q18030.5827,3012.0345 18030.5176,3012.0019 Q18030.4688,3011.9693 18030.4199,3011.9205 Q18030.3711,3011.8554 18030.3385,3011.8229 Q18030.3223,3011.7903 18030.2897,3011.7089 Q18030.2734,3011.6276 18030.2572,3011.6113 Q18030.2572,3011.5787 18030.2409,3011.4973 Q18030.2246,3011.416 18030.2246,3011.3997 Q18030.1432,3011.0253 18029.7363,3010.7975 Q18029.3294,3010.5533 18028.7435,3010.5533 Q18028.1576,3010.5533 18027.7344,3010.83 Q18027.3275,3011.1067 18027.3275,3011.5136 Q18027.3275,3011.9368 18027.7344,3012.1647 Q18028.1576,3012.3925 18028.6947,3012.4739 Q18029.248,3012.539 18029.9154,3012.718 Q18030.599,3012.8971 18030.9896,3013.2063 Q18031.722,3013.7923 18031.722,3014.7688 Q18031.722,3015.7454 18030.9245,3016.3476 Q18030.1432,3016.9498 18028.8574,3016.9498 Q18027.832,3016.9498 18026.9206,3016.4615 Q18026.6602,3016.7545 18026.416,3016.7545 Q18025.7813,3016.7545 18025.7813,3015.9407 L18025.7813,3015.1106 Q18025.7813,3014.7037 18025.9115,3014.4921 Q18026.0579,3014.2805 18026.3997,3014.2805 Q18026.5137,3014.2805 18026.5951,3014.3131 Q18026.6927,3014.3294 18026.7578,3014.3782 Q18026.8229,3014.427 18026.8717,3014.4759 Q18026.9206,3014.5247 18026.9368,3014.6061 Q18026.9694,3014.6712 18026.9857,3014.72 Q18027.002,3014.7526 18027.0182,3014.8177 Q18027.0345,3014.8665 18027.0345,3014.8828 Q18027.1322,3015.2246 18027.6367,3015.4687 Q18028.1576,3015.6966 18028.776,3015.6966 Q18029.4759,3015.6966 18029.9479,3015.4199 Q18030.4199,3015.1432 18030.4199,3014.7526 Q18030.4199,3014.3782 18030.0456,3014.1503 Q18029.6875,3013.9225 18029.1992,3013.8574 Q18028.7272,3013.776 18028.0762,3013.6295 Q18027.4414,3013.4667 18027.0508,3013.2552 Q18026.5788,3012.9785 18026.3021,3012.5227 Q18026.0254,3012.0507 18026.0254,3011.5136 Q18026.0254,3010.5696 18026.7904,3009.9511 Q18027.5716,3009.3164 18028.7435,3009.3164 Q18029.7038,3009.3164 18030.3548,3009.7233 Q18030.4688,3009.4791 18030.5664,3009.3977 Q18030.6641,3009.3164 18030.8431,3009.3164 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="18053.6458" y="3022.9166">CollectionDescription</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17959.8958" x2="18221.3542" y1="3035.6249" y2="3035.6249"/><ellipse cx="17970.3125" cy="3047.0832" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="17983.8542" y="3056.4581">Name string</text><ellipse cx="17970.3125" cy="3071.2498" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="44.7917" x="17983.8542" y="3080.6247">ID uint32</text><ellipse cx="17970.3125" cy="3095.4164" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="142.7083" x="17983.8542" y="3104.7913">Schema SchemaDescription</text><ellipse cx="17970.3125" cy="3119.5829" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="131.25" x="17983.8542" y="3128.9578">Indexes []IndexDescription</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17959.8958" x2="18221.3542" y1="3140.6245" y2="3140.6245"/><ellipse cx="17970.3125" cy="3152.0828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="79.1667" x="17983.8542" y="3161.4577">IDString() string</text><ellipse cx="17970.3125" cy="3176.2494" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="227.0833" x="17983.8542" y="3185.6243">GetField(name string) (FieldDescription, bool)</text><!--MD5=[9d10eb246dffed457133330de1cbb1c0]
class base.FieldDescription--><rect codeLine="113" fill="#2A9FD6" height="254.9991" id="base.FieldDescription" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="137.5" x="18259.375" y="2966.1458"/><ellipse cx="18280.9896" cy="2988.6458" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M18283.1868,2984.8372 Q18283.5612,2984.8372 18283.6751,2985.0488 Q18283.8053,2985.2604 18283.8053,2985.651 L18283.8053,2986.7578 Q18283.8053,2987.5878 18283.1868,2987.5878 Q18283.0892,2987.5878 18283.0078,2987.5716 Q18282.9264,2987.5553 18282.8613,2987.5227 Q18282.8125,2987.4902 18282.7637,2987.4414 Q18282.7148,2987.3763 18282.6823,2987.3437 Q18282.666,2987.3111 18282.6335,2987.2298 Q18282.6172,2987.1484 18282.6009,2987.1321 Q18282.6009,2987.0996 18282.5846,2987.0182 Q18282.5684,2986.9368 18282.5684,2986.9205 Q18282.487,2986.5462 18282.0801,2986.3183 Q18281.6732,2986.0742 18281.0872,2986.0742 Q18280.5013,2986.0742 18280.0781,2986.3509 Q18279.6712,2986.6276 18279.6712,2987.0345 Q18279.6712,2987.4576 18280.0781,2987.6855 Q18280.5013,2987.9134 18281.0384,2987.9947 Q18281.5918,2988.0598 18282.2591,2988.2389 Q18282.9427,2988.4179 18283.3333,2988.7272 Q18284.0658,2989.3131 18284.0658,2990.2897 Q18284.0658,2991.2662 18283.2682,2991.8684 Q18282.487,2992.4707 18281.2012,2992.4707 Q18280.1758,2992.4707 18279.2643,2991.9824 Q18279.0039,2992.2753 18278.7598,2992.2753 Q18278.125,2992.2753 18278.125,2991.4615 L18278.125,2990.6315 Q18278.125,2990.2246 18278.2552,2990.013 Q18278.4017,2989.8014 18278.7435,2989.8014 Q18278.8574,2989.8014 18278.9388,2989.8339 Q18279.0365,2989.8502 18279.1016,2989.899 Q18279.1667,2989.9479 18279.2155,2989.9967 Q18279.2643,2990.0455 18279.2806,2990.1269 Q18279.3132,2990.192 18279.3294,2990.2408 Q18279.3457,2990.2734 18279.362,2990.3385 Q18279.3783,2990.3873 18279.3783,2990.4036 Q18279.4759,2990.7454 18279.9805,2990.9895 Q18280.5013,2991.2174 18281.1198,2991.2174 Q18281.8197,2991.2174 18282.2917,2990.9407 Q18282.7637,2990.664 18282.7637,2990.2734 Q18282.7637,2989.899 18282.3893,2989.6712 Q18282.0313,2989.4433 18281.543,2989.3782 Q18281.071,2989.2968 18280.4199,2989.1503 Q18279.7852,2988.9876 18279.3945,2988.776 Q18278.9225,2988.4993 18278.6458,2988.0436 Q18278.3691,2987.5716 18278.3691,2987.0345 Q18278.3691,2986.0904 18279.1341,2985.472 Q18279.9154,2984.8372 18281.0872,2984.8372 Q18282.0475,2984.8372 18282.6986,2985.2441 Q18282.8125,2984.9999 18282.9102,2984.9186 Q18283.0078,2984.8372 18283.1868,2984.8372 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="80.2083" x="18301.3021" y="2998.4374">FieldDescription</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18260.4167" x2="18395.8333" y1="3011.1457" y2="3011.1457"/><ellipse cx="18270.8333" cy="3022.6041" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="18284.375" y="3031.979">Name string</text><ellipse cx="18270.8333" cy="3046.7706" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="18284.375" y="3056.1455">ID FieldID</text><ellipse cx="18270.8333" cy="3070.9372" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="18284.375" y="3080.3121">Kind FieldKind</text><ellipse cx="18270.8333" cy="3095.1038" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="71.875" x="18284.375" y="3104.4787">Schema string</text><ellipse cx="18270.8333" cy="3119.2703" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="101.0417" x="18284.375" y="3128.6452">RelationName string</text><ellipse cx="18270.8333" cy="3143.4369" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="18284.375" y="3152.8118">Typ core.CType</text><ellipse cx="18270.8333" cy="3167.6034" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="18284.375" y="3176.9784">Meta uint8</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18260.4167" x2="18395.8333" y1="3188.645" y2="3188.645"/><ellipse cx="18270.8333" cy="3200.1033" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="75" x="18284.375" y="3209.4783">IsObject() bool</text><!--MD5=[1aabd94ce8b0768b9c6507bb0681b055]
class base.IndexDescription--><rect codeLine="125" fill="#2A9FD6" height="254.9991" id="base.IndexDescription" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="132.2917" x="18024.4792" y="3827.6042"/><ellipse cx="18042.3438" cy="3850.1041" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M18044.541,3846.2955 Q18044.9154,3846.2955 18045.0293,3846.5071 Q18045.1595,3846.7187 18045.1595,3847.1093 L18045.1595,3848.2161 Q18045.1595,3849.0462 18044.541,3849.0462 Q18044.4434,3849.0462 18044.362,3849.0299 Q18044.2806,3849.0136 18044.2155,3848.9811 Q18044.1667,3848.9485 18044.1178,3848.8997 Q18044.069,3848.8346 18044.0365,3848.802 Q18044.0202,3848.7695 18043.9876,3848.6881 Q18043.9714,3848.6067 18043.9551,3848.5904 Q18043.9551,3848.5579 18043.9388,3848.4765 Q18043.9225,3848.3951 18043.9225,3848.3789 Q18043.8411,3848.0045 18043.4342,3847.7766 Q18043.0273,3847.5325 18042.4414,3847.5325 Q18041.8555,3847.5325 18041.4323,3847.8092 Q18041.0254,3848.0859 18041.0254,3848.4928 Q18041.0254,3848.916 18041.4323,3849.1438 Q18041.8555,3849.3717 18042.3926,3849.4531 Q18042.946,3849.5182 18043.6133,3849.6972 Q18044.2969,3849.8763 18044.6875,3850.1855 Q18045.4199,3850.7714 18045.4199,3851.748 Q18045.4199,3852.7246 18044.6224,3853.3268 Q18043.8411,3853.929 18042.5553,3853.929 Q18041.5299,3853.929 18040.6185,3853.4407 Q18040.3581,3853.7337 18040.1139,3853.7337 Q18039.4792,3853.7337 18039.4792,3852.9199 L18039.4792,3852.0898 Q18039.4792,3851.6829 18039.6094,3851.4713 Q18039.7559,3851.2597 18040.0977,3851.2597 Q18040.2116,3851.2597 18040.293,3851.2923 Q18040.3906,3851.3085 18040.4557,3851.3574 Q18040.5208,3851.4062 18040.5697,3851.455 Q18040.6185,3851.5039 18040.6348,3851.5852 Q18040.6673,3851.6503 18040.6836,3851.6992 Q18040.6999,3851.7317 18040.7161,3851.7968 Q18040.7324,3851.8457 18040.7324,3851.8619 Q18040.8301,3852.2037 18041.3346,3852.4479 Q18041.8555,3852.6757 18042.474,3852.6757 Q18043.1738,3852.6757 18043.6458,3852.399 Q18044.1178,3852.1223 18044.1178,3851.7317 Q18044.1178,3851.3574 18043.7435,3851.1295 Q18043.3854,3850.9016 18042.8971,3850.8365 Q18042.4251,3850.7552 18041.7741,3850.6087 Q18041.1393,3850.4459 18040.7487,3850.2343 Q18040.2767,3849.9576 18040,3849.5019 Q18039.7233,3849.0299 18039.7233,3848.4928 Q18039.7233,3847.5488 18040.4883,3846.9303 Q18041.2695,3846.2955 18042.4414,3846.2955 Q18043.4017,3846.2955 18044.0527,3846.7024 Q18044.1667,3846.4583 18044.2643,3846.3769 Q18044.362,3846.2955 18044.541,3846.2955 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="83.3333" x="18061.8229" y="3859.8957">IndexDescription</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18025.5208" x2="18155.7292" y1="3872.6041" y2="3872.6041"/><ellipse cx="18035.9375" cy="3884.0624" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="18049.4792" y="3893.4373">Name string</text><ellipse cx="18035.9375" cy="3908.229" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="44.7917" x="18049.4792" y="3917.6039">ID uint32</text><ellipse cx="18035.9375" cy="3932.3955" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="18049.4792" y="3941.7704">Primary bool</text><ellipse cx="18035.9375" cy="3956.5621" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="59.375" x="18049.4792" y="3965.937">Unique bool</text><ellipse cx="18035.9375" cy="3980.7287" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="80.2083" x="18049.4792" y="3990.1036">FieldIDs []uint32</text><ellipse cx="18035.9375" cy="4004.8952" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="66.6667" x="18049.4792" y="4014.2701">Junction bool</text><ellipse cx="18035.9375" cy="4029.0618" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="18049.4792" y="4038.4367">RelationType string</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18025.5208" x2="18155.7292" y1="4050.1033" y2="4050.1033"/><ellipse cx="18035.9375" cy="4061.5617" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="79.1667" x="18049.4792" y="4070.9366">IDString() string</text><!--MD5=[4177d992361cb86c404e6c55a6a92b9c]
class base.SchemaDescription--><rect codeLine="137" fill="#2A9FD6" height="206.6659" id="base.SchemaDescription" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="155.2083" x="18193.2292" y="3852.0833"/><ellipse cx="18214.8438" cy="3874.5833" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M18217.041,3870.7747 Q18217.4154,3870.7747 18217.5293,3870.9863 Q18217.6595,3871.1979 18217.6595,3871.5885 L18217.6595,3872.6953 Q18217.6595,3873.5253 18217.041,3873.5253 Q18216.9434,3873.5253 18216.862,3873.5091 Q18216.7806,3873.4928 18216.7155,3873.4602 Q18216.6667,3873.4277 18216.6178,3873.3789 Q18216.569,3873.3138 18216.5365,3873.2812 Q18216.5202,3873.2486 18216.4876,3873.1673 Q18216.4714,3873.0859 18216.4551,3873.0696 Q18216.4551,3873.0371 18216.4388,3872.9557 Q18216.4225,3872.8743 18216.4225,3872.858 Q18216.3411,3872.4837 18215.9342,3872.2558 Q18215.5273,3872.0117 18214.9414,3872.0117 Q18214.3555,3872.0117 18213.9323,3872.2884 Q18213.5254,3872.5651 18213.5254,3872.972 Q18213.5254,3873.3951 18213.9323,3873.623 Q18214.3555,3873.8509 18214.8926,3873.9322 Q18215.446,3873.9973 18216.1133,3874.1764 Q18216.7969,3874.3554 18217.1875,3874.6647 Q18217.9199,3875.2506 18217.9199,3876.2272 Q18217.9199,3877.2037 18217.1224,3877.8059 Q18216.3411,3878.4082 18215.0553,3878.4082 Q18214.0299,3878.4082 18213.1185,3877.9199 Q18212.8581,3878.2128 18212.6139,3878.2128 Q18211.9792,3878.2128 18211.9792,3877.399 L18211.9792,3876.569 Q18211.9792,3876.1621 18212.1094,3875.9505 Q18212.2559,3875.7389 18212.5977,3875.7389 Q18212.7116,3875.7389 18212.793,3875.7714 Q18212.8906,3875.7877 18212.9557,3875.8365 Q18213.0208,3875.8854 18213.0697,3875.9342 Q18213.1185,3875.983 18213.1348,3876.0644 Q18213.1673,3876.1295 18213.1836,3876.1783 Q18213.1999,3876.2109 18213.2161,3876.276 Q18213.2324,3876.3248 18213.2324,3876.3411 Q18213.3301,3876.6829 18213.8346,3876.927 Q18214.3555,3877.1549 18214.974,3877.1549 Q18215.6738,3877.1549 18216.1458,3876.8782 Q18216.6178,3876.6015 18216.6178,3876.2109 Q18216.6178,3875.8365 18216.2435,3875.6087 Q18215.8854,3875.3808 18215.3971,3875.3157 Q18214.9251,3875.2343 18214.2741,3875.0878 Q18213.6393,3874.9251 18213.2487,3874.7135 Q18212.7767,3874.4368 18212.5,3873.9811 Q18212.2233,3873.5091 18212.2233,3872.972 Q18212.2233,3872.0279 18212.9883,3871.4095 Q18213.7695,3870.7747 18214.9414,3870.7747 Q18215.9017,3870.7747 18216.5527,3871.1816 Q18216.6667,3870.9374 18216.7643,3870.8561 Q18216.862,3870.7747 18217.041,3870.7747 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="97.9167" x="18235.1563" y="3884.3749">SchemaDescription</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18194.2708" x2="18347.3958" y1="3897.0832" y2="3897.0832"/><ellipse cx="18204.6875" cy="3908.5416" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="44.7917" x="18218.2292" y="3917.9165">ID uint32</text><ellipse cx="18204.6875" cy="3932.7081" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="18218.2292" y="3942.083">Name string</text><ellipse cx="18204.6875" cy="3956.8747" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="48.9583" x="18218.2292" y="3966.2496">Key []byte</text><ellipse cx="18204.6875" cy="3981.0413" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="80.2083" x="18218.2292" y="3990.4162">FieldIDs []uint32</text><ellipse cx="18204.6875" cy="4005.2078" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="118.75" x="18218.2292" y="4014.5827">Fields []FieldDescription</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18194.2708" x2="18347.3958" y1="4026.2494" y2="4026.2494"/><ellipse cx="18204.6875" cy="4037.7077" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="71.875" x="18218.2292" y="4047.0826">IsEmpty() bool</text><!--MD5=[c134d980af00cf6558ea772c9a88fd8b]
class base.DataEncoding--><rect codeLine="147" fill="#2A9FD6" height="61.6666" id="base.DataEncoding" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="112.5" x="17685.4167" y="3063.0208"/><ellipse cx="17700" cy="3085.5208" fill="#FF7700" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M17701.2858,3088.4342 Q17702.0996,3088.4342 17702.0996,3089.069 Q17702.0996,3089.6874 17701.2858,3089.6874 L17698.3887,3089.6874 Q17697.5749,3089.6874 17697.5749,3089.069 Q17697.5749,3088.6946 17697.7865,3088.5644 Q17697.998,3088.4342 17698.3887,3088.4342 L17699.2025,3088.4342 L17699.2025,3083.649 L17697.8678,3083.649 L17697.8678,3084.8046 Q17697.8678,3085.6347 17697.2331,3085.6347 Q17696.6146,3085.6347 17696.6146,3084.8046 L17696.6146,3082.3958 L17703.0762,3082.3958 L17703.0762,3084.8046 Q17703.0762,3085.2115 17702.9297,3085.4231 Q17702.7995,3085.6347 17702.4414,3085.6347 Q17701.8229,3085.6347 17701.8229,3084.8046 L17701.8229,3083.649 L17700.4557,3083.649 L17700.4557,3088.4342 L17701.2858,3088.4342 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="17718.75" y="3095.3124">DataEncoding</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17686.4583" x2="17796.875" y1="3108.0207" y2="3108.0207"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17686.4583" x2="17796.875" y1="3116.3541" y2="3116.3541"/><!--MD5=[20960c04dc366a0a548d1cec65205e94]
class base.FieldID--><rect codeLine="149" fill="#2A9FD6" height="61.6666" id="base.FieldID" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="77.0833" x="17571.875" y="3063.0208"/><ellipse cx="17586.4583" cy="3085.5208" fill="#FF7700" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M17587.7441,3088.4342 Q17588.5579,3088.4342 17588.5579,3089.069 Q17588.5579,3089.6874 17587.7441,3089.6874 L17584.847,3089.6874 Q17584.0332,3089.6874 17584.0332,3089.069 Q17584.0332,3088.6946 17584.2448,3088.5644 Q17584.4564,3088.4342 17584.847,3088.4342 L17585.6608,3088.4342 L17585.6608,3083.649 L17584.3262,3083.649 L17584.3262,3084.8046 Q17584.3262,3085.6347 17583.6914,3085.6347 Q17583.0729,3085.6347 17583.0729,3084.8046 L17583.0729,3082.3958 L17589.5345,3082.3958 L17589.5345,3084.8046 Q17589.5345,3085.2115 17589.388,3085.4231 Q17589.2578,3085.6347 17588.8997,3085.6347 Q17588.2813,3085.6347 17588.2813,3084.8046 L17588.2813,3083.649 L17586.9141,3083.649 L17586.9141,3088.4342 L17587.7441,3088.4342 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="35.4167" x="17605.2083" y="3095.3124">FieldID</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17572.9167" x2="17647.9167" y1="3108.0207" y2="3108.0207"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17572.9167" x2="17647.9167" y1="3116.3541" y2="3116.3541"/><!--MD5=[38e1d89dcac2d537dce88cfd22f52acd]
class base.FieldKind--><rect codeLine="151" fill="#2A9FD6" height="61.6666" id="base.FieldKind" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="87.5" x="17834.375" y="3063.0208"/><ellipse cx="17848.9583" cy="3085.5208" fill="#FF7700" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M17850.2441,3088.4342 Q17851.0579,3088.4342 17851.0579,3089.069 Q17851.0579,3089.6874 17850.2441,3089.6874 L17847.347,3089.6874 Q17846.5332,3089.6874 17846.5332,3089.069 Q17846.5332,3088.6946 17846.7448,3088.5644 Q17846.9564,3088.4342 17847.347,3088.4342 L17848.1608,3088.4342 L17848.1608,3083.649 L17846.8262,3083.649 L17846.8262,3084.8046 Q17846.8262,3085.6347 17846.1914,3085.6347 Q17845.5729,3085.6347 17845.5729,3084.8046 L17845.5729,3082.3958 L17852.0345,3082.3958 L17852.0345,3084.8046 Q17852.0345,3085.2115 17851.888,3085.4231 Q17851.7578,3085.6347 17851.3997,3085.6347 Q17850.7813,3085.6347 17850.7813,3084.8046 L17850.7813,3083.649 L17849.4141,3083.649 L17849.4141,3088.4342 L17850.2441,3088.4342 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="45.8333" x="17867.7083" y="3095.3124">FieldKind</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17835.4167" x2="17920.8333" y1="3108.0207" y2="3108.0207"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17835.4167" x2="17920.8333" y1="3116.3541" y2="3116.3541"/><!--MD5=[cd1bb60ae4aa932825922b267905d302]
class client.Collection--><rect codeLine="157" fill="#2A9FD6" height="607.0809" id="client.Collection" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="534.375" x="15486.9792" y="2790.1042"/><ellipse cx="15720.3125" cy="2807.3958" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M15722.2982,2809.7884 Q15722.7051,2809.7884 15722.9167,2809.9186 Q15723.1283,2810.0488 15723.1283,2810.4231 Q15723.1283,2811.0416 15722.2982,2811.0416 L15718.5221,2811.0416 Q15717.7083,2811.0416 15717.7083,2810.4231 Q15717.7083,2810.0488 15717.9199,2809.9186 Q15718.1315,2809.7884 15718.5221,2809.7884 L15719.7917,2809.7884 L15719.7917,2805.0032 L15718.5221,2805.0032 Q15717.7083,2805.0032 15717.7083,2804.3847 Q15717.7083,2804.0104 15717.9199,2803.8802 Q15718.1315,2803.7499 15718.5221,2803.7499 L15722.2982,2803.7499 Q15722.7051,2803.7499 15722.9167,2803.8802 Q15723.1283,2804.0104 15723.1283,2804.3847 Q15723.1283,2805.0032 15722.2982,2805.0032 L15721.0449,2805.0032 L15721.0449,2809.7884 L15722.2982,2809.7884 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="48.9583" x="15745.3125" y="2811.9791">Collection</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="15488.0208" x2="16020.3125" y1="2824.6874" y2="2824.6874"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="15488.0208" x2="16020.3125" y1="2833.0207" y2="2833.0207"/><ellipse cx="15498.4375" cy="2844.4791" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="200" x="15511.9792" y="2853.854">Description() base.CollectionDescription</text><ellipse cx="15498.4375" cy="2868.6456" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="68.75" x="15511.9792" y="2878.0205">Name() string</text><ellipse cx="15498.4375" cy="2892.8122" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="178.125" x="15511.9792" y="2902.1871">Schema() base.SchemaDescription</text><ellipse cx="15498.4375" cy="2916.9788" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="15511.9792" y="2926.3537">ID() uint32</text><ellipse cx="15498.4375" cy="2941.1453" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="15511.9792" y="2950.5202">Indexes() []base.IndexDescription</text><ellipse cx="15498.4375" cy="2965.3119" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="15511.9792" y="2974.6868">PrimaryIndex() base.IndexDescription</text><ellipse cx="15498.4375" cy="2989.4784" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="221.875" x="15511.9792" y="2998.8534">Index( uint32) (base.IndexDescription, error)</text><ellipse cx="15498.4375" cy="3013.645" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="211.4583" x="15511.9792" y="3023.0199">CreateIndex( base.IndexDescription) error</text><ellipse cx="15498.4375" cy="3037.8116" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="270.8333" x="15511.9792" y="3047.1865">Create( context.Context,  *document.Document) error</text><ellipse cx="15498.4375" cy="3061.9781" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="304.1667" x="15511.9792" y="3071.3531">CreateMany( context.Context,  []*document.Document) error</text><ellipse cx="15498.4375" cy="3086.1447" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="272.9167" x="15511.9792" y="3095.5196">Update( context.Context,  *document.Document) error</text><ellipse cx="15498.4375" cy="3110.3113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="261.4583" x="15511.9792" y="3119.6862">Save( context.Context,  *document.Document) error</text><ellipse cx="15498.4375" cy="3134.4778" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="255.2083" x="15511.9792" y="3143.8527">Delete( context.Context,  key.DocKey) (bool, error)</text><ellipse cx="15498.4375" cy="3158.6444" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="251.0417" x="15511.9792" y="3168.0193">Exists( context.Context,  key.DocKey) (bool, error)</text><ellipse cx="15498.4375" cy="3182.811" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="146.875" x="15511.9792" y="3192.1859">UpdateWith( context.Context,</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="15665.1042" y="3192.1859">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="11.4583" x="15708.8542" y="3192.1859">{},</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="15726.5625" y="3192.1859">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="114.5833" x="15770.3125" y="3192.1859">{},  ...UpdateOpt) error</text><ellipse cx="15498.4375" cy="3206.9775" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="171.875" x="15511.9792" y="3216.3524">UpdateWithFilter( context.Context,</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="15690.1042" y="3216.3524">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="11.4583" x="15733.8542" y="3216.3524">{},</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="15751.5625" y="3216.3524">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="201.0417" x="15795.3125" y="3216.3524">{},  ...UpdateOpt) (*UpdateResult, error)</text><ellipse cx="15498.4375" cy="3231.1441" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="235.4167" x="15511.9792" y="3240.519">UpdateWithKey( context.Context,  key.DocKey,</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="15753.6458" y="3240.519">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="201.0417" x="15797.3958" y="3240.519">{},  ...UpdateOpt) (*UpdateResult, error)</text><ellipse cx="15498.4375" cy="3255.3107" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="246.875" x="15511.9792" y="3264.6856">UpdateWithKeys( context.Context,  []key.DocKey,</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="15765.1042" y="3264.6856">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="201.0417" x="15808.8542" y="3264.6856">{},  ...UpdateOpt) (*UpdateResult, error)</text><ellipse cx="15498.4375" cy="3279.4772" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="142.7083" x="15511.9792" y="3288.8521">DeleteWith( context.Context,</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="15660.9375" y="3288.8521">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="11.4583" x="15704.6875" y="3288.8521">{},</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="15722.3958" y="3288.8521">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="110.4167" x="15766.1458" y="3288.8521">{},  ...DeleteOpt) error</text><ellipse cx="15498.4375" cy="3303.6438" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="167.7083" x="15511.9792" y="3313.0187">DeleteWithFilter( context.Context,</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="15685.9375" y="3313.0187">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="11.4583" x="15729.6875" y="3313.0187">{},</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="15747.3958" y="3313.0187">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="15791.1458" y="3313.0187">{},  ...DeleteOpt) (*DeleteResult, error)</text><ellipse cx="15498.4375" cy="3327.8103" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="231.25" x="15511.9792" y="3337.1853">DeleteWithKey( context.Context,  key.DocKey,</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="15749.4792" y="3337.1853">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="15793.2292" y="3337.1853">{},  ...DeleteOpt) (*DeleteResult, error)</text><ellipse cx="15498.4375" cy="3351.9769" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="242.7083" x="15511.9792" y="3361.3518">DeleteWithKeys( context.Context,  []key.DocKey,</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="15760.9375" y="3361.3518">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="15804.6875" y="3361.3518">{},  ...DeleteOpt) (*DeleteResult, error)</text><ellipse cx="15498.4375" cy="3376.1435" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="122.9167" x="15511.9792" y="3385.5184">WithTxn( Txn) Collection</text><!--MD5=[868396f1be0edef57de1fb840d73044c]
class client.CreateOpt--><rect codeLine="183" fill="#2A9FD6" height="61.6666" id="client.CreateOpt" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="94.7917" x="16536.9792" y="3063.0208"/><ellipse cx="16551.5625" cy="3085.5208" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M16553.7598,3081.7122 Q16554.1341,3081.7122 16554.248,3081.9238 Q16554.3783,3082.1354 16554.3783,3082.526 L16554.3783,3083.6328 Q16554.3783,3084.4628 16553.7598,3084.4628 Q16553.6621,3084.4628 16553.5807,3084.4466 Q16553.4993,3084.4303 16553.4342,3084.3977 Q16553.3854,3084.3652 16553.3366,3084.3164 Q16553.2878,3084.2513 16553.2552,3084.2187 Q16553.2389,3084.1861 16553.2064,3084.1048 Q16553.1901,3084.0234 16553.1738,3084.0071 Q16553.1738,3083.9746 16553.1576,3083.8932 Q16553.1413,3083.8118 16553.1413,3083.7955 Q16553.0599,3083.4212 16552.653,3083.1933 Q16552.2461,3082.9492 16551.6602,3082.9492 Q16551.0742,3082.9492 16550.651,3083.2259 Q16550.2441,3083.5026 16550.2441,3083.9095 Q16550.2441,3084.3326 16550.651,3084.5605 Q16551.0742,3084.7884 16551.6113,3084.8697 Q16552.1647,3084.9348 16552.832,3085.1139 Q16553.5156,3085.2929 16553.9063,3085.6022 Q16554.6387,3086.1881 16554.6387,3087.1647 Q16554.6387,3088.1412 16553.8411,3088.7434 Q16553.0599,3089.3457 16551.7741,3089.3457 Q16550.7487,3089.3457 16549.8372,3088.8574 Q16549.5768,3089.1503 16549.3327,3089.1503 Q16548.6979,3089.1503 16548.6979,3088.3365 L16548.6979,3087.5065 Q16548.6979,3087.0996 16548.8281,3086.888 Q16548.9746,3086.6764 16549.3164,3086.6764 Q16549.4303,3086.6764 16549.5117,3086.7089 Q16549.6094,3086.7252 16549.6745,3086.774 Q16549.7396,3086.8229 16549.7884,3086.8717 Q16549.8372,3086.9205 16549.8535,3087.0019 Q16549.8861,3087.067 16549.9023,3087.1158 Q16549.9186,3087.1484 16549.9349,3087.2135 Q16549.9512,3087.2623 16549.9512,3087.2786 Q16550.0488,3087.6204 16550.5534,3087.8645 Q16551.0742,3088.0924 16551.6927,3088.0924 Q16552.3926,3088.0924 16552.8646,3087.8157 Q16553.3366,3087.539 16553.3366,3087.1484 Q16553.3366,3086.774 16552.9622,3086.5462 Q16552.6042,3086.3183 16552.1159,3086.2532 Q16551.6439,3086.1718 16550.9928,3086.0253 Q16550.3581,3085.8626 16549.9674,3085.651 Q16549.4954,3085.3743 16549.2188,3084.9186 Q16548.9421,3084.4466 16548.9421,3083.9095 Q16548.9421,3082.9654 16549.707,3082.347 Q16550.4883,3081.7122 16551.6602,3081.7122 Q16552.6204,3081.7122 16553.2715,3082.1191 Q16553.3854,3081.8749 16553.4831,3081.7936 Q16553.5807,3081.7122 16553.7598,3081.7122 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="16570.3125" y="3095.3124">CreateOpt</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16538.0208" x2="16630.7292" y1="3108.0207" y2="3108.0207"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16538.0208" x2="16630.7292" y1="3116.3541" y2="3116.3541"/><!--MD5=[e50d546c7493788154f9dd00b3a42837]
class client.DB--><rect codeLine="185" fill="#2A9FD6" height="220.4158" id="client.DB" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="442.7083" x="16057.8125" y="2983.3333"/><ellipse cx="16261.9792" cy="3000.6249" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M16263.9648,3003.0175 Q16264.3717,3003.0175 16264.5833,3003.1477 Q16264.7949,3003.2779 16264.7949,3003.6523 Q16264.7949,3004.2708 16263.9648,3004.2708 L16260.1888,3004.2708 Q16259.375,3004.2708 16259.375,3003.6523 Q16259.375,3003.2779 16259.5866,3003.1477 Q16259.7982,3003.0175 16260.1888,3003.0175 L16261.4583,3003.0175 L16261.4583,2998.2324 L16260.1888,2998.2324 Q16259.375,2998.2324 16259.375,2997.6139 Q16259.375,2997.2395 16259.5866,2997.1093 Q16259.7982,2996.9791 16260.1888,2996.9791 L16263.9648,2996.9791 Q16264.3717,2996.9791 16264.5833,2997.1093 Q16264.7949,2997.2395 16264.7949,2997.6139 Q16264.7949,2998.2324 16263.9648,2998.2324 L16262.7116,2998.2324 L16262.7116,3003.0175 L16263.9648,3003.0175 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="15.625" x="16286.9792" y="3005.2082">DB</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16058.8542" x2="16499.4792" y1="3017.9166" y2="3017.9166"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16058.8542" x2="16499.4792" y1="3026.2499" y2="3026.2499"/><ellipse cx="16069.2708" cy="3037.7082" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="406.25" x="16082.8125" y="3047.0831">CreateCollection( context.Context,  base.CollectionDescription) (Collection, error)</text><ellipse cx="16069.2708" cy="3061.8748" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="284.375" x="16082.8125" y="3071.2497">GetCollection( context.Context,  string) (Collection, error)</text><ellipse cx="16069.2708" cy="3086.0414" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="252.0833" x="16082.8125" y="3095.4163">ExecQuery( context.Context,  string) *QueryResult</text><ellipse cx="16069.2708" cy="3110.2079" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="231.25" x="16082.8125" y="3119.5828">SchemaManager() *schema.SchemaManager</text><ellipse cx="16069.2708" cy="3134.3745" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="215.625" x="16082.8125" y="3143.7494">AddSchema( context.Context,  string) error</text><ellipse cx="16069.2708" cy="3158.5411" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="157.2917" x="16082.8125" y="3167.916">PrintDump(ctx context.Context)</text><ellipse cx="16069.2708" cy="3182.7076" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="370.8333" x="16082.8125" y="3192.0825">GetBlock(ctx context.Context, c go-cid.Cid) (go-block-format.Block, error)</text><!--MD5=[72671d2d55cd9683d06279cc23261ffa]
class client.DeleteOpt--><rect codeLine="195" fill="#2A9FD6" height="61.6666" id="client.DeleteOpt" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="92.7083" x="16668.2292" y="3063.0208"/><ellipse cx="16682.8125" cy="3085.5208" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M16685.0098,3081.7122 Q16685.3841,3081.7122 16685.498,3081.9238 Q16685.6283,3082.1354 16685.6283,3082.526 L16685.6283,3083.6328 Q16685.6283,3084.4628 16685.0098,3084.4628 Q16684.9121,3084.4628 16684.8307,3084.4466 Q16684.7493,3084.4303 16684.6842,3084.3977 Q16684.6354,3084.3652 16684.5866,3084.3164 Q16684.5378,3084.2513 16684.5052,3084.2187 Q16684.4889,3084.1861 16684.4564,3084.1048 Q16684.4401,3084.0234 16684.4238,3084.0071 Q16684.4238,3083.9746 16684.4076,3083.8932 Q16684.3913,3083.8118 16684.3913,3083.7955 Q16684.3099,3083.4212 16683.903,3083.1933 Q16683.4961,3082.9492 16682.9102,3082.9492 Q16682.3242,3082.9492 16681.901,3083.2259 Q16681.4941,3083.5026 16681.4941,3083.9095 Q16681.4941,3084.3326 16681.901,3084.5605 Q16682.3242,3084.7884 16682.8613,3084.8697 Q16683.4147,3084.9348 16684.082,3085.1139 Q16684.7656,3085.2929 16685.1563,3085.6022 Q16685.8887,3086.1881 16685.8887,3087.1647 Q16685.8887,3088.1412 16685.0911,3088.7434 Q16684.3099,3089.3457 16683.0241,3089.3457 Q16681.9987,3089.3457 16681.0872,3088.8574 Q16680.8268,3089.1503 16680.5827,3089.1503 Q16679.9479,3089.1503 16679.9479,3088.3365 L16679.9479,3087.5065 Q16679.9479,3087.0996 16680.0781,3086.888 Q16680.2246,3086.6764 16680.5664,3086.6764 Q16680.6803,3086.6764 16680.7617,3086.7089 Q16680.8594,3086.7252 16680.9245,3086.774 Q16680.9896,3086.8229 16681.0384,3086.8717 Q16681.0872,3086.9205 16681.1035,3087.0019 Q16681.1361,3087.067 16681.1523,3087.1158 Q16681.1686,3087.1484 16681.1849,3087.2135 Q16681.2012,3087.2623 16681.2012,3087.2786 Q16681.2988,3087.6204 16681.8034,3087.8645 Q16682.3242,3088.0924 16682.9427,3088.0924 Q16683.6426,3088.0924 16684.1146,3087.8157 Q16684.5866,3087.539 16684.5866,3087.1484 Q16684.5866,3086.774 16684.2122,3086.5462 Q16683.8542,3086.3183 16683.3659,3086.2532 Q16682.8939,3086.1718 16682.2428,3086.0253 Q16681.6081,3085.8626 16681.2174,3085.651 Q16680.7454,3085.3743 16680.4688,3084.9186 Q16680.1921,3084.4466 16680.1921,3083.9095 Q16680.1921,3082.9654 16680.957,3082.347 Q16681.7383,3081.7122 16682.9102,3081.7122 Q16683.8704,3081.7122 16684.5215,3082.1191 Q16684.6354,3081.8749 16684.7331,3081.7936 Q16684.8307,3081.7122 16685.0098,3081.7122 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="16701.5625" y="3095.3124">DeleteOpt</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16669.2708" x2="16759.8958" y1="3108.0207" y2="3108.0207"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16669.2708" x2="16759.8958" y1="3116.3541" y2="3116.3541"/><!--MD5=[9c37bbcdd396839d47cc751cd98eb4ce]
class client.DeleteResult--><rect codeLine="197" fill="#2A9FD6" height="109.9997" id="client.DeleteResult" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="117.7083" x="16797.3958" y="3038.5417"/><ellipse cx="16817.6042" cy="3061.0416" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M16819.8014,3057.233 Q16820.1758,3057.233 16820.2897,3057.4446 Q16820.4199,3057.6562 16820.4199,3058.0468 L16820.4199,3059.1536 Q16820.4199,3059.9837 16819.8014,3059.9837 Q16819.7038,3059.9837 16819.6224,3059.9674 Q16819.541,3059.9511 16819.4759,3059.9186 Q16819.4271,3059.886 16819.3783,3059.8372 Q16819.3294,3059.7721 16819.2969,3059.7395 Q16819.2806,3059.707 16819.248,3059.6256 Q16819.2318,3059.5442 16819.2155,3059.5279 Q16819.2155,3059.4954 16819.1992,3059.414 Q16819.1829,3059.3326 16819.1829,3059.3164 Q16819.1016,3058.942 16818.6947,3058.7141 Q16818.2878,3058.47 16817.7018,3058.47 Q16817.1159,3058.47 16816.6927,3058.7467 Q16816.2858,3059.0234 16816.2858,3059.4303 Q16816.2858,3059.8535 16816.6927,3060.0813 Q16817.1159,3060.3092 16817.653,3060.3906 Q16818.2064,3060.4557 16818.8737,3060.6347 Q16819.5573,3060.8138 16819.9479,3061.123 Q16820.6803,3061.7089 16820.6803,3062.6855 Q16820.6803,3063.6621 16819.8828,3064.2643 Q16819.1016,3064.8665 16817.8158,3064.8665 Q16816.7904,3064.8665 16815.8789,3064.3782 Q16815.6185,3064.6712 16815.3743,3064.6712 Q16814.7396,3064.6712 16814.7396,3063.8574 L16814.7396,3063.0273 Q16814.7396,3062.6204 16814.8698,3062.4088 Q16815.0163,3062.1972 16815.3581,3062.1972 Q16815.472,3062.1972 16815.5534,3062.2298 Q16815.651,3062.246 16815.7161,3062.2949 Q16815.7813,3062.3437 16815.8301,3062.3925 Q16815.8789,3062.4414 16815.8952,3062.5227 Q16815.9277,3062.5878 16815.944,3062.6367 Q16815.9603,3062.6692 16815.9766,3062.7343 Q16815.9928,3062.7832 16815.9928,3062.7994 Q16816.0905,3063.1412 16816.5951,3063.3854 Q16817.1159,3063.6132 16817.7344,3063.6132 Q16818.4342,3063.6132 16818.9063,3063.3365 Q16819.3783,3063.0598 16819.3783,3062.6692 Q16819.3783,3062.2949 16819.0039,3062.067 Q16818.6458,3061.8391 16818.1576,3061.774 Q16817.6855,3061.6927 16817.0345,3061.5462 Q16816.3997,3061.3834 16816.0091,3061.1718 Q16815.5371,3060.8951 16815.2604,3060.4394 Q16814.9837,3059.9674 16814.9837,3059.4303 Q16814.9837,3058.4863 16815.7487,3057.8678 Q16816.5299,3057.233 16817.7018,3057.233 Q16818.6621,3057.233 16819.3132,3057.6399 Q16819.4271,3057.3958 16819.5247,3057.3144 Q16819.6224,3057.233 16819.8014,3057.233 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="63.5417" x="16837.6042" y="3070.8332">DeleteResult</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16798.4375" x2="16914.0625" y1="3083.5416" y2="3083.5416"/><ellipse cx="16808.8542" cy="3094.9999" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="16822.3958" y="3104.3748">Count int64</text><ellipse cx="16808.8542" cy="3119.1665" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="16822.3958" y="3128.5414">DocKeys []string</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16798.4375" x2="16914.0625" y1="3140.208" y2="3140.208"/><!--MD5=[62acb0b556bb07c3b36ce3362d193cc0]
class client.QueryResult--><rect codeLine="202" fill="#2A9FD6" height="109.9997" id="client.QueryResult" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="129.1667" x="16519.7917" y="3900"/><ellipse cx="16545.625" cy="3922.4999" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M16547.8223,3918.6914 Q16548.1966,3918.6914 16548.3105,3918.9029 Q16548.4408,3919.1145 16548.4408,3919.5052 L16548.4408,3920.6119 Q16548.4408,3921.442 16547.8223,3921.442 Q16547.7246,3921.442 16547.6432,3921.4257 Q16547.5618,3921.4095 16547.4967,3921.3769 Q16547.4479,3921.3443 16547.3991,3921.2955 Q16547.3503,3921.2304 16547.3177,3921.1979 Q16547.3014,3921.1653 16547.2689,3921.0839 Q16547.2526,3921.0026 16547.2363,3920.9863 Q16547.2363,3920.9537 16547.2201,3920.8723 Q16547.2038,3920.791 16547.2038,3920.7747 Q16547.1224,3920.4003 16546.7155,3920.1725 Q16546.3086,3919.9283 16545.7227,3919.9283 Q16545.1367,3919.9283 16544.7135,3920.205 Q16544.3066,3920.4817 16544.3066,3920.8886 Q16544.3066,3921.3118 16544.7135,3921.5397 Q16545.1367,3921.7675 16545.6738,3921.8489 Q16546.2272,3921.914 16546.8945,3922.093 Q16547.5781,3922.2721 16547.9688,3922.5813 Q16548.7012,3923.1673 16548.7012,3924.1438 Q16548.7012,3925.1204 16547.9036,3925.7226 Q16547.1224,3926.3248 16545.8366,3926.3248 Q16544.8112,3926.3248 16543.8997,3925.8365 Q16543.6393,3926.1295 16543.3952,3926.1295 Q16542.7604,3926.1295 16542.7604,3925.3157 L16542.7604,3924.4856 Q16542.7604,3924.0787 16542.8906,3923.8671 Q16543.0371,3923.6555 16543.3789,3923.6555 Q16543.4928,3923.6555 16543.5742,3923.6881 Q16543.6719,3923.7044 16543.737,3923.7532 Q16543.8021,3923.802 16543.8509,3923.8509 Q16543.8997,3923.8997 16543.916,3923.9811 Q16543.9486,3924.0462 16543.9648,3924.095 Q16543.9811,3924.1276 16543.9974,3924.1927 Q16544.0137,3924.2415 16544.0137,3924.2578 Q16544.1113,3924.5996 16544.6159,3924.8437 Q16545.1367,3925.0716 16545.7552,3925.0716 Q16546.4551,3925.0716 16546.9271,3924.7949 Q16547.3991,3924.5182 16547.3991,3924.1276 Q16547.3991,3923.7532 16547.0247,3923.5253 Q16546.6667,3923.2975 16546.1784,3923.2324 Q16545.7064,3923.151 16545.0553,3923.0045 Q16544.4206,3922.8417 16544.0299,3922.6302 Q16543.5579,3922.3535 16543.2813,3921.8977 Q16543.0046,3921.4257 16543.0046,3920.8886 Q16543.0046,3919.9446 16543.7695,3919.3261 Q16544.5508,3918.6914 16545.7227,3918.6914 Q16546.6829,3918.6914 16547.334,3919.0983 Q16547.4479,3918.8541 16547.5456,3918.7727 Q16547.6432,3918.6914 16547.8223,3918.6914 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="16566.875" y="3932.2916">QueryResult</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16520.8333" x2="16647.9167" y1="3944.9999" y2="3944.9999"/><ellipse cx="16531.25" cy="3956.4582" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="40.625" x="16544.7917" y="3965.8331">Errors []</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="16585.4167" y="3965.8331">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="16629.1667" y="3965.8331">{}</text><ellipse cx="16531.25" cy="3980.6248" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="23.9583" x="16544.7917" y="3989.9997">Data</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="16571.875" y="3989.9997">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="16615.625" y="3989.9997">{}</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16520.8333" x2="16647.9167" y1="4001.6664" y2="4001.6664"/><!--MD5=[9a4f40ce1ffd33d522ce8b1799f237f1]
class client.Sequence--><rect codeLine="207" fill="#2A9FD6" height="51.2499" id="client.Sequence" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="92.7083" x="16685.9375" y="3929.6875"/><ellipse cx="16700.5208" cy="3946.9791" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M16702.5065,3949.3717 Q16702.9134,3949.3717 16703.125,3949.5019 Q16703.3366,3949.6321 16703.3366,3950.0065 Q16703.3366,3950.6249 16702.5065,3950.6249 L16698.7305,3950.6249 Q16697.9167,3950.6249 16697.9167,3950.0065 Q16697.9167,3949.6321 16698.1283,3949.5019 Q16698.3398,3949.3717 16698.7305,3949.3717 L16700,3949.3717 L16700,3944.5865 L16698.7305,3944.5865 Q16697.9167,3944.5865 16697.9167,3943.968 Q16697.9167,3943.5937 16698.1283,3943.4635 Q16698.3398,3943.3333 16698.7305,3943.3333 L16702.5065,3943.3333 Q16702.9134,3943.3333 16703.125,3943.4635 Q16703.3366,3943.5937 16703.3366,3943.968 Q16703.3366,3944.5865 16702.5065,3944.5865 L16701.2533,3944.5865 L16701.2533,3949.3717 L16702.5065,3949.3717 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="51.0417" x="16719.2708" y="3951.5624">Sequence</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16686.9792" x2="16777.6042" y1="3964.2707" y2="3964.2707"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16686.9792" x2="16777.6042" y1="3972.6041" y2="3972.6041"/><!--MD5=[d7460b2db3b0d671e9078c2ac0bc3de7]
class client.Txn--><rect codeLine="209" fill="#2A9FD6" height="99.583" id="client.Txn" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="218.75" x="15231.25" y="3043.75"/><ellipse cx="15321.875" cy="3061.0416" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M15323.8607,3063.4342 Q15324.2676,3063.4342 15324.4792,3063.5644 Q15324.6908,3063.6946 15324.6908,3064.069 Q15324.6908,3064.6874 15323.8607,3064.6874 L15320.0846,3064.6874 Q15319.2708,3064.6874 15319.2708,3064.069 Q15319.2708,3063.6946 15319.4824,3063.5644 Q15319.694,3063.4342 15320.0846,3063.4342 L15321.3542,3063.4342 L15321.3542,3058.649 L15320.0846,3058.649 Q15319.2708,3058.649 15319.2708,3058.0305 Q15319.2708,3057.6562 15319.4824,3057.526 Q15319.694,3057.3958 15320.0846,3057.3958 L15323.8607,3057.3958 Q15324.2676,3057.3958 15324.4792,3057.526 Q15324.6908,3057.6562 15324.6908,3058.0305 Q15324.6908,3058.649 15323.8607,3058.649 L15322.6074,3058.649 L15322.6074,3063.4342 L15323.8607,3063.4342 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="18.75" x="15346.875" y="3065.6249">Txn</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="15232.2917" x2="15448.9583" y1="3078.3332" y2="3078.3332"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="15232.2917" x2="15448.9583" y1="3086.6666" y2="3086.6666"/><ellipse cx="15242.7083" cy="3098.1249" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="15256.25" y="3107.4998">Systemstore() core.DSReaderWriter</text><ellipse cx="15242.7083" cy="3122.2915" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="69.7917" x="15256.25" y="3131.6664">IsBatch() bool</text><!--MD5=[1c012213cf289b7914568168f5ea8da0]
class client.UpdateOpt--><rect codeLine="214" fill="#2A9FD6" height="61.6666" id="client.UpdateOpt" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="96.875" x="16815.1042" y="3924.4792"/><ellipse cx="16829.6875" cy="3946.9791" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M16831.8848,3943.1705 Q16832.2591,3943.1705 16832.373,3943.3821 Q16832.5033,3943.5937 16832.5033,3943.9843 L16832.5033,3945.0911 Q16832.5033,3945.9212 16831.8848,3945.9212 Q16831.7871,3945.9212 16831.7057,3945.9049 Q16831.6243,3945.8886 16831.5592,3945.8561 Q16831.5104,3945.8235 16831.4616,3945.7747 Q16831.4128,3945.7096 16831.3802,3945.677 Q16831.3639,3945.6445 16831.3314,3945.5631 Q16831.3151,3945.4817 16831.2988,3945.4654 Q16831.2988,3945.4329 16831.2826,3945.3515 Q16831.2663,3945.2701 16831.2663,3945.2539 Q16831.1849,3944.8795 16830.778,3944.6516 Q16830.3711,3944.4075 16829.7852,3944.4075 Q16829.1992,3944.4075 16828.776,3944.6842 Q16828.3691,3944.9609 16828.3691,3945.3678 Q16828.3691,3945.791 16828.776,3946.0188 Q16829.1992,3946.2467 16829.7363,3946.3281 Q16830.2897,3946.3932 16830.957,3946.5722 Q16831.6406,3946.7513 16832.0313,3947.0605 Q16832.7637,3947.6464 16832.7637,3948.623 Q16832.7637,3949.5996 16831.9661,3950.2018 Q16831.1849,3950.804 16829.8991,3950.804 Q16828.8737,3950.804 16827.9622,3950.3157 Q16827.7018,3950.6087 16827.4577,3950.6087 Q16826.8229,3950.6087 16826.8229,3949.7949 L16826.8229,3948.9648 Q16826.8229,3948.5579 16826.9531,3948.3463 Q16827.0996,3948.1347 16827.4414,3948.1347 Q16827.5553,3948.1347 16827.6367,3948.1673 Q16827.7344,3948.1835 16827.7995,3948.2324 Q16827.8646,3948.2812 16827.9134,3948.33 Q16827.9622,3948.3789 16827.9785,3948.4602 Q16828.0111,3948.5253 16828.0273,3948.5742 Q16828.0436,3948.6067 16828.0599,3948.6718 Q16828.0762,3948.7207 16828.0762,3948.7369 Q16828.1738,3949.0787 16828.6784,3949.3229 Q16829.1992,3949.5507 16829.8177,3949.5507 Q16830.5176,3949.5507 16830.9896,3949.274 Q16831.4616,3948.9973 16831.4616,3948.6067 Q16831.4616,3948.2324 16831.0872,3948.0045 Q16830.7292,3947.7766 16830.2409,3947.7115 Q16829.7689,3947.6302 16829.1178,3947.4837 Q16828.4831,3947.3209 16828.0924,3947.1093 Q16827.6204,3946.8326 16827.3438,3946.3769 Q16827.0671,3945.9049 16827.0671,3945.3678 Q16827.0671,3944.4238 16827.832,3943.8053 Q16828.6133,3943.1705 16829.7852,3943.1705 Q16830.7454,3943.1705 16831.3965,3943.5774 Q16831.5104,3943.3333 16831.6081,3943.2519 Q16831.7057,3943.1705 16831.8848,3943.1705 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="16848.4375" y="3956.7707">UpdateOpt</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16816.1458" x2="16910.9375" y1="3969.4791" y2="3969.4791"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16816.1458" x2="16910.9375" y1="3977.8124" y2="3977.8124"/><!--MD5=[732ae666b655456a922e023ff8fed382]
class client.UpdateResult--><rect codeLine="216" fill="#2A9FD6" height="109.9997" id="client.UpdateResult" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="117.7083" x="16525.5208" y="5083.8542"/><ellipse cx="16543.8542" cy="5106.3541" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M16546.0514,5102.5455 Q16546.4258,5102.5455 16546.5397,5102.7571 Q16546.6699,5102.9687 16546.6699,5103.3593 L16546.6699,5104.4661 Q16546.6699,5105.2962 16546.0514,5105.2962 Q16545.9538,5105.2962 16545.8724,5105.2799 Q16545.791,5105.2636 16545.7259,5105.2311 Q16545.6771,5105.1985 16545.6283,5105.1497 Q16545.5794,5105.0846 16545.5469,5105.052 Q16545.5306,5105.0195 16545.498,5104.9381 Q16545.4818,5104.8567 16545.4655,5104.8404 Q16545.4655,5104.8079 16545.4492,5104.7265 Q16545.4329,5104.6451 16545.4329,5104.6289 Q16545.3516,5104.2545 16544.9447,5104.0266 Q16544.5378,5103.7825 16543.9518,5103.7825 Q16543.3659,5103.7825 16542.9427,5104.0592 Q16542.5358,5104.3359 16542.5358,5104.7428 Q16542.5358,5105.166 16542.9427,5105.3938 Q16543.3659,5105.6217 16543.903,5105.7031 Q16544.4564,5105.7682 16545.1237,5105.9472 Q16545.8073,5106.1263 16546.1979,5106.4355 Q16546.9303,5107.0214 16546.9303,5107.998 Q16546.9303,5108.9746 16546.1328,5109.5768 Q16545.3516,5110.179 16544.0658,5110.179 Q16543.0404,5110.179 16542.1289,5109.6907 Q16541.8685,5109.9837 16541.6243,5109.9837 Q16540.9896,5109.9837 16540.9896,5109.1699 L16540.9896,5108.3398 Q16540.9896,5107.9329 16541.1198,5107.7213 Q16541.2663,5107.5097 16541.6081,5107.5097 Q16541.722,5107.5097 16541.8034,5107.5423 Q16541.901,5107.5585 16541.9661,5107.6074 Q16542.0313,5107.6562 16542.0801,5107.705 Q16542.1289,5107.7539 16542.1452,5107.8352 Q16542.1777,5107.9003 16542.194,5107.9492 Q16542.2103,5107.9817 16542.2266,5108.0468 Q16542.2428,5108.0957 16542.2428,5108.1119 Q16542.3405,5108.4537 16542.8451,5108.6979 Q16543.3659,5108.9257 16543.9844,5108.9257 Q16544.6842,5108.9257 16545.1563,5108.649 Q16545.6283,5108.3723 16545.6283,5107.9817 Q16545.6283,5107.6074 16545.2539,5107.3795 Q16544.8958,5107.1516 16544.4076,5107.0865 Q16543.9355,5107.0052 16543.2845,5106.8587 Q16542.6497,5106.6959 16542.2591,5106.4843 Q16541.7871,5106.2076 16541.5104,5105.7519 Q16541.2337,5105.2799 16541.2337,5104.7428 Q16541.2337,5103.7988 16541.9987,5103.1803 Q16542.7799,5102.5455 16543.9518,5102.5455 Q16544.9121,5102.5455 16545.5632,5102.9524 Q16545.6771,5102.7083 16545.7747,5102.6269 Q16545.8724,5102.5455 16546.0514,5102.5455 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="67.7083" x="16563.4375" y="5116.1457">UpdateResult</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16526.5625" x2="16642.1875" y1="5128.8541" y2="5128.8541"/><ellipse cx="16536.9792" cy="5140.3124" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="16550.5208" y="5149.6873">Count int64</text><ellipse cx="16536.9792" cy="5164.479" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="16550.5208" y="5173.8539">DocKeys []string</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16526.5625" x2="16642.1875" y1="5185.5205" y2="5185.5205"/><!--MD5=[e96e042869f81bbcd8b91daf703d7d7d]
class clock.MerkleClock--><rect codeLine="225" fill="#2A9FD6" height="279.1656" id="clock.MerkleClock" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="793.75" x="13242.7083" y="3815.625"/><ellipse cx="13598.4375" cy="3838.1249" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M13600.6348,3834.3164 Q13601.0091,3834.3164 13601.123,3834.5279 Q13601.2533,3834.7395 13601.2533,3835.1302 L13601.2533,3836.2369 Q13601.2533,3837.067 13600.6348,3837.067 Q13600.5371,3837.067 13600.4557,3837.0507 Q13600.3743,3837.0345 13600.3092,3837.0019 Q13600.2604,3836.9693 13600.2116,3836.9205 Q13600.1628,3836.8554 13600.1302,3836.8229 Q13600.1139,3836.7903 13600.0814,3836.7089 Q13600.0651,3836.6276 13600.0488,3836.6113 Q13600.0488,3836.5787 13600.0326,3836.4973 Q13600.0163,3836.416 13600.0163,3836.3997 Q13599.9349,3836.0253 13599.528,3835.7975 Q13599.1211,3835.5533 13598.5352,3835.5533 Q13597.9492,3835.5533 13597.526,3835.83 Q13597.1191,3836.1067 13597.1191,3836.5136 Q13597.1191,3836.9368 13597.526,3837.1647 Q13597.9492,3837.3925 13598.4863,3837.4739 Q13599.0397,3837.539 13599.707,3837.718 Q13600.3906,3837.8971 13600.7813,3838.2063 Q13601.5137,3838.7923 13601.5137,3839.7688 Q13601.5137,3840.7454 13600.7161,3841.3476 Q13599.9349,3841.9498 13598.6491,3841.9498 Q13597.6237,3841.9498 13596.7122,3841.4615 Q13596.4518,3841.7545 13596.2077,3841.7545 Q13595.5729,3841.7545 13595.5729,3840.9407 L13595.5729,3840.1106 Q13595.5729,3839.7037 13595.7031,3839.4921 Q13595.8496,3839.2805 13596.1914,3839.2805 Q13596.3053,3839.2805 13596.3867,3839.3131 Q13596.4844,3839.3294 13596.5495,3839.3782 Q13596.6146,3839.427 13596.6634,3839.4759 Q13596.7122,3839.5247 13596.7285,3839.6061 Q13596.7611,3839.6712 13596.7773,3839.72 Q13596.7936,3839.7526 13596.8099,3839.8177 Q13596.8262,3839.8665 13596.8262,3839.8828 Q13596.9238,3840.2246 13597.4284,3840.4687 Q13597.9492,3840.6966 13598.5677,3840.6966 Q13599.2676,3840.6966 13599.7396,3840.4199 Q13600.2116,3840.1432 13600.2116,3839.7526 Q13600.2116,3839.3782 13599.8372,3839.1503 Q13599.4792,3838.9225 13598.9909,3838.8574 Q13598.5189,3838.776 13597.8678,3838.6295 Q13597.2331,3838.4667 13596.8424,3838.2552 Q13596.3704,3837.9785 13596.0938,3837.5227 Q13595.8171,3837.0507 13595.8171,3836.5136 Q13595.8171,3835.5696 13596.582,3834.9511 Q13597.3633,3834.3164 13598.5352,3834.3164 Q13599.4954,3834.3164 13600.1465,3834.7233 Q13600.2604,3834.4791 13600.3581,3834.3977 Q13600.4557,3834.3164 13600.6348,3834.3164 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="63.5417" x="13623.4375" y="3847.9166">MerkleClock</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13243.75" x2="14035.4167" y1="3860.6249" y2="3860.6249"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13251.0417" y="3868.9582"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="162.5" x="13267.7083" y="3881.4581">headstore core.DSReaderWriter</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13251.0417" y="3893.1248"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="13267.7083" y="3905.6247">dagstore core.DAGStore</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13251.0417" y="3917.2914"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="77.0833" x="13267.7083" y="3929.7913">headset *heads</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13251.0417" y="3941.4579"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="126.0417" x="13267.7083" y="3953.9578">crdt core.ReplicatedData</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13243.75" x2="14035.4167" y1="3965.6245" y2="3965.6245"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13251.0417" y="3973.9578"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="542.7083" x="13267.7083" y="3986.4577">putBlock(ctx context.Context, heads []go-cid.Cid, height uint64, delta core.Delta) (go-ipld-format.Node, error)</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="13270.8333" y="4010.6243"/><ellipse cx="13254.1667" cy="4025.4159" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="354.1667" x="13267.7083" y="4034.7909">AddDAGNode(ctx context.Context, delta core.Delta) (go-cid.Cid, error)</text><ellipse cx="13254.1667" cy="4049.5825" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="757.2917" x="13267.7083" y="4058.9574">ProcessNode(ctx context.Context, ng core.NodeGetter, root go-cid.Cid, rootPrio uint64, delta core.Delta, node go-ipld-format.Node) ([]go-cid.Cid, error)</text><ellipse cx="13254.1667" cy="4073.7491" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="78.125" x="13267.7083" y="4083.124">Heads() *heads</text><!--MD5=[9a36bf53514bb9f28f1837d8113426e9]
class clock.crdtNodeGetter--><rect codeLine="238" fill="#2A9FD6" height="182.4994" id="clock.crdtNodeGetter" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="452.0833" x="14302.0833" y="3864.0625"/><ellipse cx="14479.6875" cy="3886.5624" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M14481.8848,3882.7539 Q14482.2591,3882.7539 14482.373,3882.9654 Q14482.5033,3883.177 14482.5033,3883.5677 L14482.5033,3884.6744 Q14482.5033,3885.5045 14481.8848,3885.5045 Q14481.7871,3885.5045 14481.7057,3885.4882 Q14481.6243,3885.472 14481.5592,3885.4394 Q14481.5104,3885.4068 14481.4616,3885.358 Q14481.4128,3885.2929 14481.3802,3885.2604 Q14481.3639,3885.2278 14481.3314,3885.1464 Q14481.3151,3885.0651 14481.2988,3885.0488 Q14481.2988,3885.0162 14481.2826,3884.9348 Q14481.2663,3884.8535 14481.2663,3884.8372 Q14481.1849,3884.4628 14480.778,3884.235 Q14480.3711,3883.9908 14479.7852,3883.9908 Q14479.1992,3883.9908 14478.776,3884.2675 Q14478.3691,3884.5442 14478.3691,3884.9511 Q14478.3691,3885.3743 14478.776,3885.6022 Q14479.1992,3885.83 14479.7363,3885.9114 Q14480.2897,3885.9765 14480.957,3886.1555 Q14481.6406,3886.3346 14482.0313,3886.6438 Q14482.7637,3887.2298 14482.7637,3888.2063 Q14482.7637,3889.1829 14481.9661,3889.7851 Q14481.1849,3890.3873 14479.8991,3890.3873 Q14478.8737,3890.3873 14477.9622,3889.899 Q14477.7018,3890.192 14477.4577,3890.192 Q14476.8229,3890.192 14476.8229,3889.3782 L14476.8229,3888.5481 Q14476.8229,3888.1412 14476.9531,3887.9296 Q14477.0996,3887.718 14477.4414,3887.718 Q14477.5553,3887.718 14477.6367,3887.7506 Q14477.7344,3887.7669 14477.7995,3887.8157 Q14477.8646,3887.8645 14477.9134,3887.9134 Q14477.9622,3887.9622 14477.9785,3888.0436 Q14478.0111,3888.1087 14478.0273,3888.1575 Q14478.0436,3888.1901 14478.0599,3888.2552 Q14478.0762,3888.304 14478.0762,3888.3203 Q14478.1738,3888.6621 14478.6784,3888.9062 Q14479.1992,3889.1341 14479.8177,3889.1341 Q14480.5176,3889.1341 14480.9896,3888.8574 Q14481.4616,3888.5807 14481.4616,3888.1901 Q14481.4616,3887.8157 14481.0872,3887.5878 Q14480.7292,3887.36 14480.2409,3887.2949 Q14479.7689,3887.2135 14479.1178,3887.067 Q14478.4831,3886.9042 14478.0924,3886.6927 Q14477.6204,3886.416 14477.3438,3885.9602 Q14477.0671,3885.4882 14477.0671,3884.9511 Q14477.0671,3884.0071 14477.832,3883.3886 Q14478.6133,3882.7539 14479.7852,3882.7539 Q14480.7454,3882.7539 14481.3965,3883.1608 Q14481.5104,3882.9166 14481.6081,3882.8352 Q14481.7057,3882.7539 14481.8848,3882.7539 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="78.125" x="14504.6875" y="3896.3541">crdtNodeGetter</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14303.125" x2="14753.125" y1="3909.0624" y2="3909.0624"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14303.125" x2="14753.125" y1="3917.3957" y2="3917.3957"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14310.4167" y="3925.7291"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="69.7917" x="14327.0833" y="3938.229">deltaExtractor</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="14400" y="3938.229">func</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="203.125" x="14421.875" y="3938.229">(go-ipld-format.Node) (core.Delta, error)</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="14330.2083" y="3962.3955"/><ellipse cx="14313.5417" cy="3977.1872" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="415.625" x="14327.0833" y="3986.5621">GetDelta(ctx context.Context, c go-cid.Cid) (go-ipld-format.Node, core.Delta, error)</text><ellipse cx="14313.5417" cy="4001.3538" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="295.8333" x="14327.0833" y="4010.7287">GetPriority(ctx context.Context, c go-cid.Cid) (uint64, error)</text><ellipse cx="14313.5417" cy="4025.5203" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="239.5833" x="14327.0833" y="4034.8952">GetDeltas(ctx context.Context, cids []go-cid.Cid)</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="25" x="14569.7917" y="4034.8952">chan</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="98.9583" x="14597.9167" y="4034.8952">core.NodeDeltaPair</text><!--MD5=[025aa8c8e41950fdc5842e8145651d27]
class clock.deltaEntry--><rect codeLine="246" fill="#2A9FD6" height="206.6659" id="clock.deltaEntry" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="192.7083" x="14072.3958" y="3852.0833"/><ellipse cx="14134.375" cy="3874.5833" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M14136.5723,3870.7747 Q14136.9466,3870.7747 14137.0605,3870.9863 Q14137.1908,3871.1979 14137.1908,3871.5885 L14137.1908,3872.6953 Q14137.1908,3873.5253 14136.5723,3873.5253 Q14136.4746,3873.5253 14136.3932,3873.5091 Q14136.3118,3873.4928 14136.2467,3873.4602 Q14136.1979,3873.4277 14136.1491,3873.3789 Q14136.1003,3873.3138 14136.0677,3873.2812 Q14136.0514,3873.2486 14136.0189,3873.1673 Q14136.0026,3873.0859 14135.9863,3873.0696 Q14135.9863,3873.0371 14135.9701,3872.9557 Q14135.9538,3872.8743 14135.9538,3872.858 Q14135.8724,3872.4837 14135.4655,3872.2558 Q14135.0586,3872.0117 14134.4727,3872.0117 Q14133.8867,3872.0117 14133.4635,3872.2884 Q14133.0566,3872.5651 14133.0566,3872.972 Q14133.0566,3873.3951 14133.4635,3873.623 Q14133.8867,3873.8509 14134.4238,3873.9322 Q14134.9772,3873.9973 14135.6445,3874.1764 Q14136.3281,3874.3554 14136.7188,3874.6647 Q14137.4512,3875.2506 14137.4512,3876.2272 Q14137.4512,3877.2037 14136.6536,3877.8059 Q14135.8724,3878.4082 14134.5866,3878.4082 Q14133.5612,3878.4082 14132.6497,3877.9199 Q14132.3893,3878.2128 14132.1452,3878.2128 Q14131.5104,3878.2128 14131.5104,3877.399 L14131.5104,3876.569 Q14131.5104,3876.1621 14131.6406,3875.9505 Q14131.7871,3875.7389 14132.1289,3875.7389 Q14132.2428,3875.7389 14132.3242,3875.7714 Q14132.4219,3875.7877 14132.487,3875.8365 Q14132.5521,3875.8854 14132.6009,3875.9342 Q14132.6497,3875.983 14132.666,3876.0644 Q14132.6986,3876.1295 14132.7148,3876.1783 Q14132.7311,3876.2109 14132.7474,3876.276 Q14132.7637,3876.3248 14132.7637,3876.3411 Q14132.8613,3876.6829 14133.3659,3876.927 Q14133.8867,3877.1549 14134.5052,3877.1549 Q14135.2051,3877.1549 14135.6771,3876.8782 Q14136.1491,3876.6015 14136.1491,3876.2109 Q14136.1491,3875.8365 14135.7747,3875.6087 Q14135.4167,3875.3808 14134.9284,3875.3157 Q14134.4564,3875.2343 14133.8053,3875.0878 Q14133.1706,3874.9251 14132.7799,3874.7135 Q14132.3079,3874.4368 14132.0313,3873.9811 Q14131.7546,3873.5091 14131.7546,3872.972 Q14131.7546,3872.0279 14132.5195,3871.4095 Q14133.3008,3870.7747 14134.4727,3870.7747 Q14135.4329,3870.7747 14136.084,3871.1816 Q14136.1979,3870.9374 14136.2956,3870.8561 Q14136.3932,3870.7747 14136.5723,3870.7747 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="14159.375" y="3884.3749">deltaEntry</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14073.4375" x2="14264.0625" y1="3897.0832" y2="3897.0832"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14080.7292" y="3905.4166"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="79.1667" x="14097.3958" y="3917.9165">delta core.Delta</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14080.7292" y="3929.5831"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="14097.3958" y="3942.083">node go-ipld-format.Node</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14080.7292" y="3953.7497"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="42.7083" x="14097.3958" y="3966.2496">err error</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14073.4375" x2="14264.0625" y1="3977.9163" y2="3977.9163"/><ellipse cx="14083.8542" cy="3989.3746" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="156.25" x="14097.3958" y="3998.7495">GetNode() go-ipld-format.Node</text><ellipse cx="14083.8542" cy="4013.5412" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="107.2917" x="14097.3958" y="4022.9161">GetDelta() core.Delta</text><ellipse cx="14083.8542" cy="4037.7077" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="14097.3958" y="4047.0826">Error() error</text><!--MD5=[8795be46a0798f6aadcf05d630b37f42]
class clock.heads--><rect codeLine="256" fill="#2A9FD6" height="351.6653" id="clock.heads" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="456.25" x="12750" y="3779.1667"/><ellipse cx="12953.6458" cy="3801.6666" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M12955.8431,3797.858 Q12956.2174,3797.858 12956.3314,3798.0696 Q12956.4616,3798.2812 12956.4616,3798.6718 L12956.4616,3799.7786 Q12956.4616,3800.6087 12955.8431,3800.6087 Q12955.7454,3800.6087 12955.6641,3800.5924 Q12955.5827,3800.5761 12955.5176,3800.5436 Q12955.4688,3800.511 12955.4199,3800.4622 Q12955.3711,3800.3971 12955.3385,3800.3645 Q12955.3223,3800.332 12955.2897,3800.2506 Q12955.2734,3800.1692 12955.2572,3800.1529 Q12955.2572,3800.1204 12955.2409,3800.039 Q12955.2246,3799.9576 12955.2246,3799.9414 Q12955.1432,3799.567 12954.7363,3799.3391 Q12954.3294,3799.095 12953.7435,3799.095 Q12953.1576,3799.095 12952.7344,3799.3717 Q12952.3275,3799.6484 12952.3275,3800.0553 Q12952.3275,3800.4785 12952.7344,3800.7063 Q12953.1576,3800.9342 12953.6947,3801.0156 Q12954.248,3801.0807 12954.9154,3801.2597 Q12955.599,3801.4388 12955.9896,3801.748 Q12956.722,3802.3339 12956.722,3803.3105 Q12956.722,3804.2871 12955.9245,3804.8893 Q12955.1432,3805.4915 12953.8574,3805.4915 Q12952.832,3805.4915 12951.9206,3805.0032 Q12951.6602,3805.2962 12951.416,3805.2962 Q12950.7813,3805.2962 12950.7813,3804.4824 L12950.7813,3803.6523 Q12950.7813,3803.2454 12950.9115,3803.0338 Q12951.0579,3802.8222 12951.3997,3802.8222 Q12951.5137,3802.8222 12951.5951,3802.8548 Q12951.6927,3802.871 12951.7578,3802.9199 Q12951.8229,3802.9687 12951.8717,3803.0175 Q12951.9206,3803.0664 12951.9368,3803.1477 Q12951.9694,3803.2128 12951.9857,3803.2617 Q12952.002,3803.2942 12952.0182,3803.3593 Q12952.0345,3803.4082 12952.0345,3803.4244 Q12952.1322,3803.7662 12952.6367,3804.0104 Q12953.1576,3804.2382 12953.776,3804.2382 Q12954.4759,3804.2382 12954.9479,3803.9615 Q12955.4199,3803.6848 12955.4199,3803.2942 Q12955.4199,3802.9199 12955.0456,3802.692 Q12954.6875,3802.4641 12954.1992,3802.399 Q12953.7272,3802.3177 12953.0762,3802.1712 Q12952.4414,3802.0084 12952.0508,3801.7968 Q12951.5788,3801.5201 12951.3021,3801.0644 Q12951.0254,3800.5924 12951.0254,3800.0553 Q12951.0254,3799.1113 12951.7904,3798.4928 Q12952.5716,3797.858 12953.7435,3797.858 Q12954.7038,3797.858 12955.3548,3798.2649 Q12955.4688,3798.0208 12955.5664,3797.9394 Q12955.6641,3797.858 12955.8431,3797.858 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="30.2083" x="12978.6458" y="3811.4582">heads</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="12751.0417" x2="13205.2083" y1="3824.1666" y2="3824.1666"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="12758.3333" y="3832.4999"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="137.5" x="12775" y="3844.9998">store core.DSReaderWriter</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="12758.3333" y="3856.6665"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="146.875" x="12775" y="3869.1664">namespace go-datastore.Key</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="12751.0417" x2="13205.2083" y1="3880.833" y2="3880.833"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="12758.3333" y="3889.1664"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="175" x="12775" y="3901.6663">key(c go-cid.Cid) go-datastore.Key</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="12758.3333" y="3913.3329"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="264.5833" x="12775" y="3925.8328">load(ctx context.Context, c go-cid.Cid) (uint64, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="12758.3333" y="3937.4995"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="419.7917" x="12775" y="3949.9994">write(ctx context.Context, store go-datastore.Write, c go-cid.Cid, height uint64) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="12758.3333" y="3961.6661"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="356.25" x="12775" y="3974.166">delete(ctx context.Context, store go-datastore.Write, c go-cid.Cid) error</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="12778.125" y="3998.3325"/><ellipse cx="12761.4583" cy="4013.1242" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="306.25" x="12775" y="4022.4991">IsHead(ctx context.Context, c go-cid.Cid) (bool, uint64, error)</text><ellipse cx="12761.4583" cy="4037.2907" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="177.0833" x="12775" y="4046.6657">Len(ctx context.Context) (int, error)</text><ellipse cx="12761.4583" cy="4061.4573" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="377.0833" x="12775" y="4070.8322">Replace(ctx context.Context, h go-cid.Cid, c go-cid.Cid, height uint64) error</text><ellipse cx="12761.4583" cy="4085.6239" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="288.5417" x="12775" y="4094.9988">Add(ctx context.Context, c go-cid.Cid, height uint64) error</text><ellipse cx="12761.4583" cy="4109.7904" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="257.2917" x="12775" y="4119.1654">List(ctx context.Context) ([]go-cid.Cid, uint64, error)</text><!--MD5=[b7e115b10d4134245fb7bc0cd87128bb]
class go-ipld-format.NodeGetter--><rect fill="#2A9FD6" height="51.2499" id="go-ipld-format.NodeGetter" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="100" x="17378.125" y="3068.2292"/><ellipse cx="17392.7083" cy="3085.5208" fill="#777777" rx="10.4167" ry="10.4167" style="stroke:#444444;stroke-width:1.0416666666666667;"/><path d="M17393.1803,3088.0924 Q17393.7826,3088.0924 17394.1895,3087.9459 Q17394.6126,3087.7994 17394.7754,3087.6367 Q17394.9544,3087.4739 17395.1335,3087.3274 Q17395.3288,3087.1809 17395.4915,3087.1809 Q17395.7357,3087.1809 17395.9147,3087.3763 Q17396.11,3087.5553 17396.11,3087.7994 Q17396.11,3088.3365 17395.2474,3088.8411 Q17394.401,3089.3457 17393.1478,3089.3457 Q17391.569,3089.3457 17390.5111,3088.4179 Q17389.4694,3087.4739 17389.4694,3086.0579 L17389.4694,3085.2278 Q17389.4694,3083.7304 17390.446,3082.7213 Q17391.4225,3081.7122 17392.8711,3081.7122 Q17393.75,3081.7122 17394.6452,3082.1354 L17394.7754,3082.1842 Q17394.987,3081.8749 17395.2962,3081.8749 Q17395.6706,3081.8749 17395.8008,3082.0865 Q17395.931,3082.2981 17395.931,3082.705 L17395.931,3083.7467 Q17395.931,3084.5768 17395.2962,3084.5768 Q17395.0684,3084.5768 17394.9219,3084.4628 Q17394.7917,3084.3326 17394.7591,3084.235 Q17394.7266,3084.121 17394.694,3083.9095 Q17394.6126,3083.5351 17394.222,3083.3072 Q17393.8477,3083.0794 17393.5221,3083.0143 Q17393.1966,3082.9492 17392.9199,3082.9492 Q17391.9759,3082.9492 17391.3411,3083.6002 Q17390.7227,3084.235 17390.7227,3085.2278 L17390.7227,3086.0253 Q17390.7227,3086.9693 17391.39,3087.539 Q17392.0573,3088.0924 17393.1803,3088.0924 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="58.3333" x="17411.4583" y="3090.1041">NodeGetter</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17379.1667" x2="17477.0833" y1="3102.8124" y2="3102.8124"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17379.1667" x2="17477.0833" y1="3111.1457" y2="3111.1457"/><!--MD5=[373b677d85d9572bbc250d278aadd217]
class core.MerkleClock--><rect codeLine="350" fill="#2A9FD6" height="99.583" id="core.MerkleClock" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="606.25" x="11414.5833" y="3043.75"/><ellipse cx="11676.5625" cy="3061.0416" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M11678.5482,3063.4342 Q11678.9551,3063.4342 11679.1667,3063.5644 Q11679.3783,3063.6946 11679.3783,3064.069 Q11679.3783,3064.6874 11678.5482,3064.6874 L11674.7721,3064.6874 Q11673.9583,3064.6874 11673.9583,3064.069 Q11673.9583,3063.6946 11674.1699,3063.5644 Q11674.3815,3063.4342 11674.7721,3063.4342 L11676.0417,3063.4342 L11676.0417,3058.649 L11674.7721,3058.649 Q11673.9583,3058.649 11673.9583,3058.0305 Q11673.9583,3057.6562 11674.1699,3057.526 Q11674.3815,3057.3958 11674.7721,3057.3958 L11678.5482,3057.3958 Q11678.9551,3057.3958 11679.1667,3057.526 Q11679.3783,3057.6562 11679.3783,3058.0305 Q11679.3783,3058.649 11678.5482,3058.649 L11677.2949,3058.649 L11677.2949,3063.4342 L11678.5482,3063.4342 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="63.5417" x="11701.5625" y="3065.6249">MerkleClock</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11415.625" x2="12019.7917" y1="3078.3332" y2="3078.3332"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11415.625" x2="12019.7917" y1="3086.6666" y2="3086.6666"/><ellipse cx="11426.0417" cy="3098.1249" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="328.125" x="11439.5833" y="3107.4998">AddDAGNode(ctx context.Context, delta Delta) (go-cid.Cid, error)</text><ellipse cx="11426.0417" cy="3122.2915" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="569.7917" x="11439.5833" y="3131.6664">ProcessNode( context.Context,  NodeGetter,  go-cid.Cid,  uint64,  Delta,  go-ipld-format.Node) ([]go-cid.Cid, error)</text><!--MD5=[7328ff36ac3161861867a1b8fd3d0943]
class core.NodeGetter--><rect codeLine="367" fill="#2A9FD6" height="123.7496" id="core.NodeGetter" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="405.2083" x="12285.9375" y="3031.7708"/><ellipse cx="12449.4792" cy="3049.0624" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M12451.4648,3051.455 Q12451.8717,3051.455 12452.0833,3051.5852 Q12452.2949,3051.7154 12452.2949,3052.0898 Q12452.2949,3052.7083 12451.4648,3052.7083 L12447.6888,3052.7083 Q12446.875,3052.7083 12446.875,3052.0898 Q12446.875,3051.7154 12447.0866,3051.5852 Q12447.2982,3051.455 12447.6888,3051.455 L12448.9583,3051.455 L12448.9583,3046.6699 L12447.6888,3046.6699 Q12446.875,3046.6699 12446.875,3046.0514 Q12446.875,3045.677 12447.0866,3045.5468 Q12447.2982,3045.4166 12447.6888,3045.4166 L12451.4648,3045.4166 Q12451.8717,3045.4166 12452.0833,3045.5468 Q12452.2949,3045.677 12452.2949,3046.0514 Q12452.2949,3046.6699 12451.4648,3046.6699 L12450.2116,3046.6699 L12450.2116,3051.455 L12451.4648,3051.455 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="59.375" x="12474.4792" y="3053.6457">NodeGetter</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="12286.9792" x2="12690.1042" y1="3066.3541" y2="3066.3541"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="12286.9792" x2="12690.1042" y1="3074.6874" y2="3074.6874"/><ellipse cx="12297.3958" cy="3086.1457" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="368.75" x="12310.9375" y="3095.5206">GetDelta( context.Context,  go-cid.Cid) (go-ipld-format.Node, Delta, error)</text><ellipse cx="12297.3958" cy="3110.3123" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="205.2083" x="12310.9375" y="3119.6872">GetDeltas( context.Context,  []go-cid.Cid)</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="25" x="12519.2708" y="3119.6872">chan</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="72.9167" x="12547.3958" y="3119.6872">NodeDeltaPair</text><ellipse cx="12297.3958" cy="3134.4789" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="275" x="12310.9375" y="3143.8538">GetPriority( context.Context,  go-cid.Cid) (uint64, error)</text><!--MD5=[f6d884dabeda9699cd4ba3dc11f35d03]
class core.NodeDeltaPair--><rect codeLine="361" fill="#2A9FD6" height="123.7496" id="core.NodeDeltaPair" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="192.7083" x="12056.7708" y="3031.7708"/><ellipse cx="12107.2917" cy="3049.0624" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M12109.2773,3051.455 Q12109.6842,3051.455 12109.8958,3051.5852 Q12110.1074,3051.7154 12110.1074,3052.0898 Q12110.1074,3052.7083 12109.2773,3052.7083 L12105.5013,3052.7083 Q12104.6875,3052.7083 12104.6875,3052.0898 Q12104.6875,3051.7154 12104.8991,3051.5852 Q12105.1107,3051.455 12105.5013,3051.455 L12106.7708,3051.455 L12106.7708,3046.6699 L12105.5013,3046.6699 Q12104.6875,3046.6699 12104.6875,3046.0514 Q12104.6875,3045.677 12104.8991,3045.5468 Q12105.1107,3045.4166 12105.5013,3045.4166 L12109.2773,3045.4166 Q12109.6842,3045.4166 12109.8958,3045.5468 Q12110.1074,3045.677 12110.1074,3046.0514 Q12110.1074,3046.6699 12109.2773,3046.6699 L12108.0241,3046.6699 L12108.0241,3051.455 L12109.2773,3051.455 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="72.9167" x="12132.2917" y="3053.6457">NodeDeltaPair</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="12057.8125" x2="12248.4375" y1="3066.3541" y2="3066.3541"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="12057.8125" x2="12248.4375" y1="3074.6874" y2="3074.6874"/><ellipse cx="12068.2292" cy="3086.1457" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="156.25" x="12081.7708" y="3095.5206">GetNode() go-ipld-format.Node</text><ellipse cx="12068.2292" cy="3110.3123" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="12081.7708" y="3119.6872">GetDelta() Delta</text><ellipse cx="12068.2292" cy="3134.4789" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="12081.7708" y="3143.8538">Error() error</text><!--MD5=[9dd22d662fe333f5b815e6a5a4e65c01]
class core.CompositeDelta--><rect codeLine="319" fill="#2A9FD6" height="75.4165" id="core.CompositeDelta" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="125" x="10734.375" y="3917.7083"/><ellipse cx="10750.3646" cy="3934.9999" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M10752.3503,3937.3925 Q10752.7572,3937.3925 10752.9688,3937.5227 Q10753.1803,3937.6529 10753.1803,3938.0273 Q10753.1803,3938.6458 10752.3503,3938.6458 L10748.5742,3938.6458 Q10747.7604,3938.6458 10747.7604,3938.0273 Q10747.7604,3937.6529 10747.972,3937.5227 Q10748.1836,3937.3925 10748.5742,3937.3925 L10749.8438,3937.3925 L10749.8438,3932.6074 L10748.5742,3932.6074 Q10747.7604,3932.6074 10747.7604,3931.9889 Q10747.7604,3931.6145 10747.972,3931.4843 Q10748.1836,3931.3541 10748.5742,3931.3541 L10752.3503,3931.3541 Q10752.7572,3931.3541 10752.9688,3931.4843 Q10753.1803,3931.6145 10753.1803,3931.9889 Q10753.1803,3932.6074 10752.3503,3932.6074 L10751.097,3932.6074 L10751.097,3937.3925 L10752.3503,3937.3925 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="80.2083" x="10769.4271" y="3939.5832">CompositeDelta</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="10735.4167" x2="10858.3333" y1="3952.2916" y2="3952.2916"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="10735.4167" x2="10858.3333" y1="3960.6249" y2="3960.6249"/><ellipse cx="10745.8333" cy="3972.0832" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="88.5417" x="10759.375" y="3981.4581">Links() []DAGLink</text><!--MD5=[fae357d7b3f77263431d61c677e982fb]
class core.DAGLink--><rect codeLine="323" fill="#2A9FD6" height="109.9997" id="core.DAGLink" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="107.2917" x="11140.1042" y="3038.5417"/><ellipse cx="11164.0625" cy="3061.0416" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M11166.2598,3057.233 Q11166.6341,3057.233 11166.748,3057.4446 Q11166.8783,3057.6562 11166.8783,3058.0468 L11166.8783,3059.1536 Q11166.8783,3059.9837 11166.2598,3059.9837 Q11166.1621,3059.9837 11166.0807,3059.9674 Q11165.9993,3059.9511 11165.9342,3059.9186 Q11165.8854,3059.886 11165.8366,3059.8372 Q11165.7878,3059.7721 11165.7552,3059.7395 Q11165.7389,3059.707 11165.7064,3059.6256 Q11165.6901,3059.5442 11165.6738,3059.5279 Q11165.6738,3059.4954 11165.6576,3059.414 Q11165.6413,3059.3326 11165.6413,3059.3164 Q11165.5599,3058.942 11165.153,3058.7141 Q11164.7461,3058.47 11164.1602,3058.47 Q11163.5742,3058.47 11163.151,3058.7467 Q11162.7441,3059.0234 11162.7441,3059.4303 Q11162.7441,3059.8535 11163.151,3060.0813 Q11163.5742,3060.3092 11164.1113,3060.3906 Q11164.6647,3060.4557 11165.332,3060.6347 Q11166.0156,3060.8138 11166.4063,3061.123 Q11167.1387,3061.7089 11167.1387,3062.6855 Q11167.1387,3063.6621 11166.3411,3064.2643 Q11165.5599,3064.8665 11164.2741,3064.8665 Q11163.2487,3064.8665 11162.3372,3064.3782 Q11162.0768,3064.6712 11161.8327,3064.6712 Q11161.1979,3064.6712 11161.1979,3063.8574 L11161.1979,3063.0273 Q11161.1979,3062.6204 11161.3281,3062.4088 Q11161.4746,3062.1972 11161.8164,3062.1972 Q11161.9303,3062.1972 11162.0117,3062.2298 Q11162.1094,3062.246 11162.1745,3062.2949 Q11162.2396,3062.3437 11162.2884,3062.3925 Q11162.3372,3062.4414 11162.3535,3062.5227 Q11162.3861,3062.5878 11162.4023,3062.6367 Q11162.4186,3062.6692 11162.4349,3062.7343 Q11162.4512,3062.7832 11162.4512,3062.7994 Q11162.5488,3063.1412 11163.0534,3063.3854 Q11163.5742,3063.6132 11164.1927,3063.6132 Q11164.8926,3063.6132 11165.3646,3063.3365 Q11165.8366,3063.0598 11165.8366,3062.6692 Q11165.8366,3062.2949 11165.4622,3062.067 Q11165.1042,3061.8391 11164.6159,3061.774 Q11164.1439,3061.6927 11163.4928,3061.5462 Q11162.8581,3061.3834 11162.4674,3061.1718 Q11161.9954,3060.8951 11161.7188,3060.4394 Q11161.4421,3059.9674 11161.4421,3059.4303 Q11161.4421,3058.4863 11162.207,3057.8678 Q11162.9883,3057.233 11164.1602,3057.233 Q11165.1204,3057.233 11165.7715,3057.6399 Q11165.8854,3057.3958 11165.9831,3057.3144 Q11166.0807,3057.233 11166.2598,3057.233 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="44.7917" x="11184.8958" y="3070.8332">DAGLink</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11141.1458" x2="11246.3542" y1="3083.5416" y2="3083.5416"/><ellipse cx="11151.5625" cy="3094.9999" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="11165.1042" y="3104.3748">Name string</text><ellipse cx="11151.5625" cy="3119.1665" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="11165.1042" y="3128.5414">Cid go-cid.Cid</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11141.1458" x2="11246.3542" y1="3140.208" y2="3140.208"/><!--MD5=[de759601773dcc54aa83d0a7f97398f2]
class core.DAGStore--><rect codeLine="328" fill="#2A9FD6" height="51.2499" id="core.DAGStore" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="93.75" x="11284.375" y="3068.2292"/><ellipse cx="11298.9583" cy="3085.5208" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M11300.944,3087.9134 Q11301.3509,3087.9134 11301.5625,3088.0436 Q11301.7741,3088.1738 11301.7741,3088.5481 Q11301.7741,3089.1666 11300.944,3089.1666 L11297.168,3089.1666 Q11296.3542,3089.1666 11296.3542,3088.5481 Q11296.3542,3088.1738 11296.5658,3088.0436 Q11296.7773,3087.9134 11297.168,3087.9134 L11298.4375,3087.9134 L11298.4375,3083.1282 L11297.168,3083.1282 Q11296.3542,3083.1282 11296.3542,3082.5097 Q11296.3542,3082.1354 11296.5658,3082.0052 Q11296.7773,3081.8749 11297.168,3081.8749 L11300.944,3081.8749 Q11301.3509,3081.8749 11301.5625,3082.0052 Q11301.7741,3082.1354 11301.7741,3082.5097 Q11301.7741,3083.1282 11300.944,3083.1282 L11299.6908,3083.1282 L11299.6908,3087.9134 L11300.944,3087.9134 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="52.0833" x="11317.7083" y="3090.1041">DAGStore</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11285.4167" x2="11377.0833" y1="3102.8124" y2="3102.8124"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11285.4167" x2="11377.0833" y1="3111.1457" y2="3111.1457"/><!--MD5=[ff2257ed347b9c53534f975dcc1d5fae]
class core.DSReaderWriter--><rect codeLine="330" fill="#2A9FD6" height="51.2499" id="core.DSReaderWriter" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="125" x="11663.5417" y="3929.6875"/><ellipse cx="11678.125" cy="3946.9791" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M11680.1107,3949.3717 Q11680.5176,3949.3717 11680.7292,3949.5019 Q11680.9408,3949.6321 11680.9408,3950.0065 Q11680.9408,3950.6249 11680.1107,3950.6249 L11676.3346,3950.6249 Q11675.5208,3950.6249 11675.5208,3950.0065 Q11675.5208,3949.6321 11675.7324,3949.5019 Q11675.944,3949.3717 11676.3346,3949.3717 L11677.6042,3949.3717 L11677.6042,3944.5865 L11676.3346,3944.5865 Q11675.5208,3944.5865 11675.5208,3943.968 Q11675.5208,3943.5937 11675.7324,3943.4635 Q11675.944,3943.3333 11676.3346,3943.3333 L11680.1107,3943.3333 Q11680.5176,3943.3333 11680.7292,3943.4635 Q11680.9408,3943.5937 11680.9408,3943.968 Q11680.9408,3944.5865 11680.1107,3944.5865 L11678.8574,3944.5865 L11678.8574,3949.3717 L11680.1107,3949.3717 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="83.3333" x="11696.875" y="3951.5624">DSReaderWriter</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11664.5833" x2="11787.5" y1="3964.2707" y2="3964.2707"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11664.5833" x2="11787.5" y1="3972.6041" y2="3972.6041"/><!--MD5=[50ed1b1f66b17d87623e1fb9b204c76f]
class core.Delta--><rect codeLine="332" fill="#2A9FD6" height="147.9162" id="core.Delta" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="154.1667" x="9785.4167" y="3019.7917"/><ellipse cx="9840.1042" cy="3037.0833" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M9842.0898,3039.4759 Q9842.4967,3039.4759 9842.7083,3039.6061 Q9842.9199,3039.7363 9842.9199,3040.1106 Q9842.9199,3040.7291 9842.0898,3040.7291 L9838.3138,3040.7291 Q9837.5,3040.7291 9837.5,3040.1106 Q9837.5,3039.7363 9837.7116,3039.6061 Q9837.9232,3039.4759 9838.3138,3039.4759 L9839.5833,3039.4759 L9839.5833,3034.6907 L9838.3138,3034.6907 Q9837.5,3034.6907 9837.5,3034.0722 Q9837.5,3033.6979 9837.7116,3033.5677 Q9837.9232,3033.4374 9838.3138,3033.4374 L9842.0898,3033.4374 Q9842.4967,3033.4374 9842.7083,3033.5677 Q9842.9199,3033.6979 9842.9199,3034.0722 Q9842.9199,3034.6907 9842.0898,3034.6907 L9840.8366,3034.6907 L9840.8366,3039.4759 L9842.0898,3039.4759 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="26.0417" x="9865.1042" y="3041.6666">Delta</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="9786.4583" x2="9938.5417" y1="3054.3749" y2="3054.3749"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="9786.4583" x2="9938.5417" y1="3062.7082" y2="3062.7082"/><ellipse cx="9796.875" cy="3074.1666" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="93.75" x="9810.4167" y="3083.5415">GetPriority() uint64</text><ellipse cx="9796.875" cy="3098.3331" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="9810.4167" y="3107.708">SetPriority( uint64)</text><ellipse cx="9796.875" cy="3122.4997" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="117.7083" x="9810.4167" y="3131.8746">Marshal() ([]byte, error)</text><ellipse cx="9796.875" cy="3146.6663" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="9810.4167" y="3156.0412">Value()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="9850" y="3156.0412">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="9893.75" y="3156.0412">{}</text><!--MD5=[2b954a1f2d46147727b5f37f1e1082df]
class core.Key--><rect codeLine="339" fill="#2A9FD6" height="134.1663" id="core.Key" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="162.5" x="10720.8333" y="3026.5625"/><ellipse cx="10783.3333" cy="3049.0624" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M10785.5306,3045.2539 Q10785.9049,3045.2539 10786.0189,3045.4654 Q10786.1491,3045.677 10786.1491,3046.0677 L10786.1491,3047.1744 Q10786.1491,3048.0045 10785.5306,3048.0045 Q10785.4329,3048.0045 10785.3516,3047.9882 Q10785.2702,3047.972 10785.2051,3047.9394 Q10785.1563,3047.9068 10785.1074,3047.858 Q10785.0586,3047.7929 10785.026,3047.7604 Q10785.0098,3047.7278 10784.9772,3047.6464 Q10784.9609,3047.5651 10784.9447,3047.5488 Q10784.9447,3047.5162 10784.9284,3047.4348 Q10784.9121,3047.3535 10784.9121,3047.3372 Q10784.8307,3046.9628 10784.4238,3046.735 Q10784.0169,3046.4908 10783.431,3046.4908 Q10782.8451,3046.4908 10782.4219,3046.7675 Q10782.015,3047.0442 10782.015,3047.4511 Q10782.015,3047.8743 10782.4219,3048.1022 Q10782.8451,3048.33 10783.3822,3048.4114 Q10783.9355,3048.4765 10784.6029,3048.6555 Q10785.2865,3048.8346 10785.6771,3049.1438 Q10786.4095,3049.7298 10786.4095,3050.7063 Q10786.4095,3051.6829 10785.612,3052.2851 Q10784.8307,3052.8873 10783.5449,3052.8873 Q10782.5195,3052.8873 10781.6081,3052.399 Q10781.3477,3052.692 10781.1035,3052.692 Q10780.4688,3052.692 10780.4688,3051.8782 L10780.4688,3051.0481 Q10780.4688,3050.6412 10780.599,3050.4296 Q10780.7454,3050.218 10781.0872,3050.218 Q10781.2012,3050.218 10781.2826,3050.2506 Q10781.3802,3050.2669 10781.4453,3050.3157 Q10781.5104,3050.3645 10781.5592,3050.4134 Q10781.6081,3050.4622 10781.6243,3050.5436 Q10781.6569,3050.6087 10781.6732,3050.6575 Q10781.6895,3050.6901 10781.7057,3050.7552 Q10781.722,3050.804 10781.722,3050.8203 Q10781.8197,3051.1621 10782.3242,3051.4062 Q10782.8451,3051.6341 10783.4635,3051.6341 Q10784.1634,3051.6341 10784.6354,3051.3574 Q10785.1074,3051.0807 10785.1074,3050.6901 Q10785.1074,3050.3157 10784.7331,3050.0878 Q10784.375,3049.86 10783.8867,3049.7949 Q10783.4147,3049.7135 10782.7637,3049.567 Q10782.1289,3049.4042 10781.7383,3049.1927 Q10781.2663,3048.916 10780.9896,3048.4602 Q10780.7129,3047.9882 10780.7129,3047.4511 Q10780.7129,3046.5071 10781.4779,3045.8886 Q10782.2591,3045.2539 10783.431,3045.2539 Q10784.3913,3045.2539 10785.0423,3045.6608 Q10785.1563,3045.4166 10785.2539,3045.3352 Q10785.3516,3045.2539 10785.5306,3045.2539 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="18.75" x="10808.3333" y="3058.8541">Key</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="10721.875" x2="10882.2917" y1="3071.5624" y2="3071.5624"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="10721.875" x2="10882.2917" y1="3079.8957" y2="3079.8957"/><ellipse cx="10732.2917" cy="3091.3541" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="126.0417" x="10745.8333" y="3100.729">ToDS() go-datastore.Key</text><ellipse cx="10732.2917" cy="3115.5206" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="78.125" x="10745.8333" y="3124.8955">PrefixEnd() Key</text><ellipse cx="10732.2917" cy="3139.6872" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="116.6667" x="10745.8333" y="3149.0621">FieldID() (uint32, error)</text><!--MD5=[d4b935f658a91dacbf3fe1a01198fb43]
class core.KeyValue--><rect codeLine="345" fill="#2A9FD6" height="109.9997" id="core.KeyValue" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="94.7917" x="11825.5208" y="3900"/><ellipse cx="11842.9167" cy="3922.4999" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M11845.1139,3918.6914 Q11845.4883,3918.6914 11845.6022,3918.9029 Q11845.7324,3919.1145 11845.7324,3919.5052 L11845.7324,3920.6119 Q11845.7324,3921.442 11845.1139,3921.442 Q11845.0163,3921.442 11844.9349,3921.4257 Q11844.8535,3921.4095 11844.7884,3921.3769 Q11844.7396,3921.3443 11844.6908,3921.2955 Q11844.6419,3921.2304 11844.6094,3921.1979 Q11844.5931,3921.1653 11844.5605,3921.0839 Q11844.5443,3921.0026 11844.528,3920.9863 Q11844.528,3920.9537 11844.5117,3920.8723 Q11844.4954,3920.791 11844.4954,3920.7747 Q11844.4141,3920.4003 11844.0072,3920.1725 Q11843.6003,3919.9283 11843.0143,3919.9283 Q11842.4284,3919.9283 11842.0052,3920.205 Q11841.5983,3920.4817 11841.5983,3920.8886 Q11841.5983,3921.3118 11842.0052,3921.5397 Q11842.4284,3921.7675 11842.9655,3921.8489 Q11843.5189,3921.914 11844.1862,3922.093 Q11844.8698,3922.2721 11845.2604,3922.5813 Q11845.9928,3923.1673 11845.9928,3924.1438 Q11845.9928,3925.1204 11845.1953,3925.7226 Q11844.4141,3926.3248 11843.1283,3926.3248 Q11842.1029,3926.3248 11841.1914,3925.8365 Q11840.931,3926.1295 11840.6868,3926.1295 Q11840.0521,3926.1295 11840.0521,3925.3157 L11840.0521,3924.4856 Q11840.0521,3924.0787 11840.1823,3923.8671 Q11840.3288,3923.6555 11840.6706,3923.6555 Q11840.7845,3923.6555 11840.8659,3923.6881 Q11840.9635,3923.7044 11841.0286,3923.7532 Q11841.0938,3923.802 11841.1426,3923.8509 Q11841.1914,3923.8997 11841.2077,3923.9811 Q11841.2402,3924.0462 11841.2565,3924.095 Q11841.2728,3924.1276 11841.2891,3924.1927 Q11841.3053,3924.2415 11841.3053,3924.2578 Q11841.403,3924.5996 11841.9076,3924.8437 Q11842.4284,3925.0716 11843.0469,3925.0716 Q11843.7467,3925.0716 11844.2188,3924.7949 Q11844.6908,3924.5182 11844.6908,3924.1276 Q11844.6908,3923.7532 11844.3164,3923.5253 Q11843.9583,3923.2975 11843.4701,3923.2324 Q11842.998,3923.151 11842.347,3923.0045 Q11841.7122,3922.8417 11841.3216,3922.6302 Q11840.8496,3922.3535 11840.5729,3921.8977 Q11840.2962,3921.4257 11840.2962,3920.8886 Q11840.2962,3919.9446 11841.0612,3919.3261 Q11841.8424,3918.6914 11843.0143,3918.6914 Q11843.9746,3918.6914 11844.6257,3919.0983 Q11844.7396,3918.8541 11844.8372,3918.7727 Q11844.9349,3918.6914 11845.1139,3918.6914 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="11862.2917" y="3932.2916">KeyValue</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11826.5625" x2="11919.2708" y1="3944.9999" y2="3944.9999"/><ellipse cx="11836.9792" cy="3956.4582" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="40.625" x="11850.5208" y="3965.8331">Key Key</text><ellipse cx="11836.9792" cy="3980.6248" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="58.3333" x="11850.5208" y="3989.9997">Value []byte</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11826.5625" x2="11919.2708" y1="4001.6664" y2="4001.6664"/><!--MD5=[0495cca2b18fb6b253c2b86d70c48363]
class core.MultiStore--><rect codeLine="355" fill="#2A9FD6" height="123.7496" id="core.MultiStore" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="183.3333" x="10919.7917" y="3031.7708"/><ellipse cx="10977.0833" cy="3049.0624" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M10979.069,3051.455 Q10979.4759,3051.455 10979.6875,3051.5852 Q10979.8991,3051.7154 10979.8991,3052.0898 Q10979.8991,3052.7083 10979.069,3052.7083 L10975.293,3052.7083 Q10974.4792,3052.7083 10974.4792,3052.0898 Q10974.4792,3051.7154 10974.6908,3051.5852 Q10974.9023,3051.455 10975.293,3051.455 L10976.5625,3051.455 L10976.5625,3046.6699 L10975.293,3046.6699 Q10974.4792,3046.6699 10974.4792,3046.0514 Q10974.4792,3045.677 10974.6908,3045.5468 Q10974.9023,3045.4166 10975.293,3045.4166 L10979.069,3045.4166 Q10979.4759,3045.4166 10979.6875,3045.5468 Q10979.8991,3045.677 10979.8991,3046.0514 Q10979.8991,3046.6699 10979.069,3046.6699 L10977.8158,3046.6699 L10977.8158,3051.455 L10979.069,3051.455 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="50" x="11002.0833" y="3053.6457">MultiStore</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="10920.8333" x2="11102.0833" y1="3066.3541" y2="3066.3541"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="10920.8333" x2="11102.0833" y1="3074.6874" y2="3074.6874"/><ellipse cx="10931.25" cy="3086.1457" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="10944.7917" y="3095.5206">Datastore() DSReaderWriter</text><ellipse cx="10931.25" cy="3110.3123" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="146.875" x="10944.7917" y="3119.6872">Headstore() DSReaderWriter</text><ellipse cx="10931.25" cy="3134.4789" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="10944.7917" y="3143.8538">DAGstore() DAGStore</text><!--MD5=[4f0de1e1e3b9dee8ff9f8d5f46a4e300]
class core.PersistedReplicatedData--><rect codeLine="373" fill="#2A9FD6" height="75.4165" id="core.PersistedReplicatedData" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="203.125" x="10895.3125" y="3917.7083"/><ellipse cx="10926.3021" cy="3934.9999" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M10928.2878,3937.3925 Q10928.6947,3937.3925 10928.9063,3937.5227 Q10929.1178,3937.6529 10929.1178,3938.0273 Q10929.1178,3938.6458 10928.2878,3938.6458 L10924.5117,3938.6458 Q10923.6979,3938.6458 10923.6979,3938.0273 Q10923.6979,3937.6529 10923.9095,3937.5227 Q10924.1211,3937.3925 10924.5117,3937.3925 L10925.7813,3937.3925 L10925.7813,3932.6074 L10924.5117,3932.6074 Q10923.6979,3932.6074 10923.6979,3931.9889 Q10923.6979,3931.6145 10923.9095,3931.4843 Q10924.1211,3931.3541 10924.5117,3931.3541 L10928.2878,3931.3541 Q10928.6947,3931.3541 10928.9063,3931.4843 Q10929.1178,3931.6145 10929.1178,3931.9889 Q10929.1178,3932.6074 10928.2878,3932.6074 L10927.0345,3932.6074 L10927.0345,3937.3925 L10928.2878,3937.3925 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="125" x="10948.6979" y="3939.5832">PersistedReplicatedData</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="10896.3542" x2="11097.3958" y1="3952.2916" y2="3952.2916"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="10896.3542" x2="11097.3958" y1="3960.6249" y2="3960.6249"/><ellipse cx="10906.7708" cy="3972.0832" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="10920.3125" y="3981.4581">Publish( Delta) (go-cid.Cid, error)</text><!--MD5=[debeec6bc6e47936b1747edfedb079b3]
class core.ReplicatedData--><rect codeLine="377" fill="#2A9FD6" height="123.7496" id="core.ReplicatedData" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="307.2917" x="10088.0208" y="3031.7708"/><ellipse cx="10193.75" cy="3049.0624" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M10195.7357,3051.455 Q10196.1426,3051.455 10196.3542,3051.5852 Q10196.5658,3051.7154 10196.5658,3052.0898 Q10196.5658,3052.7083 10195.7357,3052.7083 L10191.9596,3052.7083 Q10191.1458,3052.7083 10191.1458,3052.0898 Q10191.1458,3051.7154 10191.3574,3051.5852 Q10191.569,3051.455 10191.9596,3051.455 L10193.2292,3051.455 L10193.2292,3046.6699 L10191.9596,3046.6699 Q10191.1458,3046.6699 10191.1458,3046.0514 Q10191.1458,3045.677 10191.3574,3045.5468 Q10191.569,3045.4166 10191.9596,3045.4166 L10195.7357,3045.4166 Q10196.1426,3045.4166 10196.3542,3045.5468 Q10196.5658,3045.677 10196.5658,3046.0514 Q10196.5658,3046.6699 10195.7357,3046.6699 L10194.4824,3046.6699 L10194.4824,3051.455 L10195.7357,3051.455 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="77.0833" x="10218.75" y="3053.6457">ReplicatedData</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="10089.0625" x2="10394.2708" y1="3066.3541" y2="3066.3541"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="10089.0625" x2="10394.2708" y1="3074.6874" y2="3074.6874"/><ellipse cx="10099.4792" cy="3086.1457" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="270.8333" x="10113.0208" y="3095.5206">Merge(ctx context.Context, other Delta, id string) error</text><ellipse cx="10099.4792" cy="3110.3123" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="270.8333" x="10113.0208" y="3119.6872">DeltaDecode(node go-ipld-format.Node) (Delta, error)</text><ellipse cx="10099.4792" cy="3134.4789" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="202.0833" x="10113.0208" y="3143.8538">Value(ctx context.Context) ([]byte, error)</text><!--MD5=[e3b7e4ae36314c3abd25cfb2f0c415eb]
class core.Span--><rect codeLine="383" fill="#2A9FD6" height="172.0827" id="core.Span" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="141.6667" x="10542.7083" y="3007.8125"/><ellipse cx="10591.1458" cy="3025.1041" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M10593.1315,3027.4967 Q10593.5384,3027.4967 10593.75,3027.6269 Q10593.9616,3027.7571 10593.9616,3028.1315 Q10593.9616,3028.7499 10593.1315,3028.7499 L10589.3555,3028.7499 Q10588.5417,3028.7499 10588.5417,3028.1315 Q10588.5417,3027.7571 10588.7533,3027.6269 Q10588.9648,3027.4967 10589.3555,3027.4967 L10590.625,3027.4967 L10590.625,3022.7115 L10589.3555,3022.7115 Q10588.5417,3022.7115 10588.5417,3022.093 Q10588.5417,3021.7187 10588.7533,3021.5885 Q10588.9648,3021.4583 10589.3555,3021.4583 L10593.1315,3021.4583 Q10593.5384,3021.4583 10593.75,3021.5885 Q10593.9616,3021.7187 10593.9616,3022.093 Q10593.9616,3022.7115 10593.1315,3022.7115 L10591.8783,3022.7115 L10591.8783,3027.4967 L10593.1315,3027.4967 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="26.0417" x="10616.1458" y="3029.6874">Span</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="10543.75" x2="10683.3333" y1="3042.3957" y2="3042.3957"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="10543.75" x2="10683.3333" y1="3050.7291" y2="3050.7291"/><ellipse cx="10554.1667" cy="3062.1874" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="54.1667" x="10567.7083" y="3071.5623">Start() Key</text><ellipse cx="10554.1667" cy="3086.354" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="10567.7083" y="3095.7289">End() Key</text><ellipse cx="10554.1667" cy="3110.5205" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="10567.7083" y="3119.8954">Contains( Span) bool</text><ellipse cx="10554.1667" cy="3134.6871" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="89.5833" x="10567.7083" y="3144.062">Equal( Span) bool</text><ellipse cx="10554.1667" cy="3158.8537" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="98.9583" x="10567.7083" y="3168.2286">Compare( Span) int</text><!--MD5=[1a76abed476fb986b44021fde9c4dfb6]
class core.Txn--><rect codeLine="391" fill="#2A9FD6" height="75.4165" id="core.Txn" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="192.7083" x="11434.8958" y="3917.7083"/><ellipse cx="11512.5" cy="3934.9999" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M11514.4857,3937.3925 Q11514.8926,3937.3925 11515.1042,3937.5227 Q11515.3158,3937.6529 11515.3158,3938.0273 Q11515.3158,3938.6458 11514.4857,3938.6458 L11510.7096,3938.6458 Q11509.8958,3938.6458 11509.8958,3938.0273 Q11509.8958,3937.6529 11510.1074,3937.5227 Q11510.319,3937.3925 11510.7096,3937.3925 L11511.9792,3937.3925 L11511.9792,3932.6074 L11510.7096,3932.6074 Q11509.8958,3932.6074 11509.8958,3931.9889 Q11509.8958,3931.6145 11510.1074,3931.4843 Q11510.319,3931.3541 11510.7096,3931.3541 L11514.4857,3931.3541 Q11514.8926,3931.3541 11515.1042,3931.4843 Q11515.3158,3931.6145 11515.3158,3931.9889 Q11515.3158,3932.6074 11514.4857,3932.6074 L11513.2324,3932.6074 L11513.2324,3937.3925 L11514.4857,3937.3925 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="18.75" x="11537.5" y="3939.5832">Txn</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11435.9375" x2="11626.5625" y1="3952.2916" y2="3952.2916"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11435.9375" x2="11626.5625" y1="3960.6249" y2="3960.6249"/><ellipse cx="11446.3542" cy="3972.0832" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="156.25" x="11459.8958" y="3981.4581">Systemstore() DSReaderWriter</text><!--MD5=[fd96e58a92a691e6c4392aad56c4ffe2]
class core.CType--><rect codeLine="395" fill="#2A9FD6" height="61.6666" id="core.CType" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="75" x="9976.0417" y="3063.0208"/><ellipse cx="9990.625" cy="3085.5208" fill="#FF7700" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M9991.9108,3088.4342 Q9992.7246,3088.4342 9992.7246,3089.069 Q9992.7246,3089.6874 9991.9108,3089.6874 L9989.0137,3089.6874 Q9988.1999,3089.6874 9988.1999,3089.069 Q9988.1999,3088.6946 9988.4115,3088.5644 Q9988.623,3088.4342 9989.0137,3088.4342 L9989.8275,3088.4342 L9989.8275,3083.649 L9988.4928,3083.649 L9988.4928,3084.8046 Q9988.4928,3085.6347 9987.8581,3085.6347 Q9987.2396,3085.6347 9987.2396,3084.8046 L9987.2396,3082.3958 L9993.7012,3082.3958 L9993.7012,3084.8046 Q9993.7012,3085.2115 9993.5547,3085.4231 Q9993.4245,3085.6347 9993.0664,3085.6347 Q9992.4479,3085.6347 9992.4479,3084.8046 L9992.4479,3083.649 L9991.0807,3083.649 L9991.0807,3088.4342 L9991.9108,3088.4342 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="10009.375" y="3095.3124">CType</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="9977.0833" x2="10050" y1="3108.0207" y2="3108.0207"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="9977.0833" x2="10050" y1="3116.3541" y2="3116.3541"/><!--MD5=[6fc50ddcee8ffff4f988e308f2aafca0]
class core.Spans--><rect codeLine="397" fill="#2A9FD6" height="61.6666" id="core.Spans" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="72.9167" x="11135.4167" y="3924.4792"/><ellipse cx="11150" cy="3946.9791" fill="#FF7700" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M11151.2858,3949.8925 Q11152.0996,3949.8925 11152.0996,3950.5273 Q11152.0996,3951.1458 11151.2858,3951.1458 L11148.3887,3951.1458 Q11147.5749,3951.1458 11147.5749,3950.5273 Q11147.5749,3950.1529 11147.7865,3950.0227 Q11147.998,3949.8925 11148.3887,3949.8925 L11149.2025,3949.8925 L11149.2025,3945.1074 L11147.8678,3945.1074 L11147.8678,3946.263 Q11147.8678,3947.093 11147.2331,3947.093 Q11146.6146,3947.093 11146.6146,3946.263 L11146.6146,3943.8541 L11153.0762,3943.8541 L11153.0762,3946.263 Q11153.0762,3946.6699 11152.9297,3946.8815 Q11152.7995,3947.093 11152.4414,3947.093 Q11151.8229,3947.093 11151.8229,3946.263 L11151.8229,3945.1074 L11150.4557,3945.1074 L11150.4557,3949.8925 L11151.2858,3949.8925 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="31.25" x="11168.75" y="3956.7707">Spans</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11136.4583" x2="11207.2917" y1="3969.4791" y2="3969.4791"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11136.4583" x2="11207.2917" y1="3977.8124" y2="3977.8124"/><!--MD5=[cc54d8bfe8e93b4b932d61a228e9df4c]
class core.span--><rect codeLine="399" fill="#2A9FD6" height="230.8325" id="core.span" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="153.125" x="11245.3125" y="3839.5833"/><ellipse cx="11300.5208" cy="3862.0833" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M11302.7181,3858.2747 Q11303.0924,3858.2747 11303.2064,3858.4863 Q11303.3366,3858.6979 11303.3366,3859.0885 L11303.3366,3860.1953 Q11303.3366,3861.0253 11302.7181,3861.0253 Q11302.6204,3861.0253 11302.5391,3861.0091 Q11302.4577,3860.9928 11302.3926,3860.9602 Q11302.3438,3860.9277 11302.2949,3860.8789 Q11302.2461,3860.8138 11302.2135,3860.7812 Q11302.1973,3860.7486 11302.1647,3860.6673 Q11302.1484,3860.5859 11302.1322,3860.5696 Q11302.1322,3860.5371 11302.1159,3860.4557 Q11302.0996,3860.3743 11302.0996,3860.358 Q11302.0182,3859.9837 11301.6113,3859.7558 Q11301.2044,3859.5117 11300.6185,3859.5117 Q11300.0326,3859.5117 11299.6094,3859.7884 Q11299.2025,3860.0651 11299.2025,3860.472 Q11299.2025,3860.8951 11299.6094,3861.123 Q11300.0326,3861.3509 11300.5697,3861.4322 Q11301.123,3861.4973 11301.7904,3861.6764 Q11302.474,3861.8554 11302.8646,3862.1647 Q11303.597,3862.7506 11303.597,3863.7272 Q11303.597,3864.7037 11302.7995,3865.3059 Q11302.0182,3865.9082 11300.7324,3865.9082 Q11299.707,3865.9082 11298.7956,3865.4199 Q11298.5352,3865.7128 11298.291,3865.7128 Q11297.6563,3865.7128 11297.6563,3864.899 L11297.6563,3864.069 Q11297.6563,3863.6621 11297.7865,3863.4505 Q11297.9329,3863.2389 11298.2747,3863.2389 Q11298.3887,3863.2389 11298.4701,3863.2714 Q11298.5677,3863.2877 11298.6328,3863.3365 Q11298.6979,3863.3854 11298.7467,3863.4342 Q11298.7956,3863.483 11298.8118,3863.5644 Q11298.8444,3863.6295 11298.8607,3863.6783 Q11298.877,3863.7109 11298.8932,3863.776 Q11298.9095,3863.8248 11298.9095,3863.8411 Q11299.0072,3864.1829 11299.5117,3864.427 Q11300.0326,3864.6549 11300.651,3864.6549 Q11301.3509,3864.6549 11301.8229,3864.3782 Q11302.2949,3864.1015 11302.2949,3863.7109 Q11302.2949,3863.3365 11301.9206,3863.1087 Q11301.5625,3862.8808 11301.0742,3862.8157 Q11300.6022,3862.7343 11299.9512,3862.5878 Q11299.3164,3862.4251 11298.9258,3862.2135 Q11298.4538,3861.9368 11298.1771,3861.4811 Q11297.9004,3861.0091 11297.9004,3860.472 Q11297.9004,3859.5279 11298.6654,3858.9095 Q11299.4466,3858.2747 11300.6185,3858.2747 Q11301.5788,3858.2747 11302.2298,3858.6816 Q11302.3438,3858.4374 11302.4414,3858.3561 Q11302.5391,3858.2747 11302.7181,3858.2747 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="23.9583" x="11325.5208" y="3871.8749">span</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11246.3542" x2="11397.3958" y1="3884.5832" y2="3884.5832"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="11253.6458" y="3892.9166"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="11270.3125" y="3905.4165">start Key</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="11253.6458" y="3917.0831"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="40.625" x="11270.3125" y="3929.583">end Key</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11246.3542" x2="11397.3958" y1="3941.2497" y2="3941.2497"/><ellipse cx="11256.7708" cy="3952.708" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="54.1667" x="11270.3125" y="3962.0829">Start() Key</text><ellipse cx="11256.7708" cy="3976.8746" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="11270.3125" y="3986.2495">End() Key</text><ellipse cx="11256.7708" cy="4001.0412" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="116.6667" x="11270.3125" y="4010.4161">Contains(s2 Span) bool</text><ellipse cx="11256.7708" cy="4025.2077" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="101.0417" x="11270.3125" y="4034.5826">Equal(s2 Span) bool</text><ellipse cx="11256.7708" cy="4049.3743" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="110.4167" x="11270.3125" y="4058.7492">Compare(s2 Span) int</text><!--MD5=[8adde798e58e1102774a1440f3bebd02]
class core.[]Span--><rect fill="#2A9FD6" height="51.2499" id="core.[]Span" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="73.9583" x="10431.7708" y="3068.2292"/><ellipse cx="10446.3542" cy="3085.5208" fill="#777777" rx="10.4167" ry="10.4167" style="stroke:#444444;stroke-width:1.0416666666666667;"/><path d="M10446.8262,3088.0924 Q10447.4284,3088.0924 10447.8353,3087.9459 Q10448.2585,3087.7994 10448.4212,3087.6367 Q10448.6003,3087.4739 10448.7793,3087.3274 Q10448.9746,3087.1809 10449.1374,3087.1809 Q10449.3815,3087.1809 10449.5605,3087.3763 Q10449.7559,3087.5553 10449.7559,3087.7994 Q10449.7559,3088.3365 10448.8932,3088.8411 Q10448.0469,3089.3457 10446.7936,3089.3457 Q10445.2148,3089.3457 10444.1569,3088.4179 Q10443.1152,3087.4739 10443.1152,3086.0579 L10443.1152,3085.2278 Q10443.1152,3083.7304 10444.0918,3082.7213 Q10445.0684,3081.7122 10446.5169,3081.7122 Q10447.3958,3081.7122 10448.291,3082.1354 L10448.4212,3082.1842 Q10448.6328,3081.8749 10448.9421,3081.8749 Q10449.3164,3081.8749 10449.4466,3082.0865 Q10449.5768,3082.2981 10449.5768,3082.705 L10449.5768,3083.7467 Q10449.5768,3084.5768 10448.9421,3084.5768 Q10448.7142,3084.5768 10448.5677,3084.4628 Q10448.4375,3084.3326 10448.4049,3084.235 Q10448.3724,3084.121 10448.3398,3083.9095 Q10448.2585,3083.5351 10447.8678,3083.3072 Q10447.4935,3083.0794 10447.168,3083.0143 Q10446.8424,3082.9492 10446.5658,3082.9492 Q10445.6217,3082.9492 10444.987,3083.6002 Q10444.3685,3084.235 10444.3685,3085.2278 L10444.3685,3086.0253 Q10444.3685,3086.9693 10445.0358,3087.539 Q10445.7031,3088.0924 10446.8262,3088.0924 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="32.2917" x="10465.1042" y="3090.1041">[]Span</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="10432.8125" x2="10504.6875" y1="3102.8124" y2="3102.8124"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="10432.8125" x2="10504.6875" y1="3111.1457" y2="3111.1457"/><!--MD5=[a186f852486ee5fbd721347c84e158ec]
class cmd.BadgerOptions--><rect codeLine="280" fill="#2A9FD6" height="85.8331" id="cmd.BadgerOptions" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="116.6667" x="11660.4167" y="2153.125"/><ellipse cx="11675" cy="2175.6249" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M11677.1973,2171.8164 Q11677.5716,2171.8164 11677.6855,2172.0279 Q11677.8158,2172.2395 11677.8158,2172.6302 L11677.8158,2173.7369 Q11677.8158,2174.567 11677.1973,2174.567 Q11677.0996,2174.567 11677.0182,2174.5507 Q11676.9368,2174.5345 11676.8717,2174.5019 Q11676.8229,2174.4693 11676.7741,2174.4205 Q11676.7253,2174.3554 11676.6927,2174.3229 Q11676.6764,2174.2903 11676.6439,2174.2089 Q11676.6276,2174.1276 11676.6113,2174.1113 Q11676.6113,2174.0787 11676.5951,2173.9973 Q11676.5788,2173.916 11676.5788,2173.8997 Q11676.4974,2173.5253 11676.0905,2173.2975 Q11675.6836,2173.0533 11675.0977,2173.0533 Q11674.5117,2173.0533 11674.0885,2173.33 Q11673.6816,2173.6067 11673.6816,2174.0136 Q11673.6816,2174.4368 11674.0885,2174.6647 Q11674.5117,2174.8925 11675.0488,2174.9739 Q11675.6022,2175.039 11676.2695,2175.218 Q11676.9531,2175.3971 11677.3438,2175.7063 Q11678.0762,2176.2923 11678.0762,2177.2688 Q11678.0762,2178.2454 11677.2786,2178.8476 Q11676.4974,2179.4498 11675.2116,2179.4498 Q11674.1862,2179.4498 11673.2747,2178.9615 Q11673.0143,2179.2545 11672.7702,2179.2545 Q11672.1354,2179.2545 11672.1354,2178.4407 L11672.1354,2177.6106 Q11672.1354,2177.2037 11672.2656,2176.9921 Q11672.4121,2176.7805 11672.7539,2176.7805 Q11672.8678,2176.7805 11672.9492,2176.8131 Q11673.0469,2176.8294 11673.112,2176.8782 Q11673.1771,2176.927 11673.2259,2176.9759 Q11673.2747,2177.0247 11673.291,2177.1061 Q11673.3236,2177.1712 11673.3398,2177.22 Q11673.3561,2177.2526 11673.3724,2177.3177 Q11673.3887,2177.3665 11673.3887,2177.3828 Q11673.4863,2177.7246 11673.9909,2177.9687 Q11674.5117,2178.1966 11675.1302,2178.1966 Q11675.8301,2178.1966 11676.3021,2177.9199 Q11676.7741,2177.6432 11676.7741,2177.2526 Q11676.7741,2176.8782 11676.3997,2176.6503 Q11676.0417,2176.4225 11675.5534,2176.3574 Q11675.0814,2176.276 11674.4303,2176.1295 Q11673.7956,2175.9667 11673.4049,2175.7552 Q11672.9329,2175.4785 11672.6563,2175.0227 Q11672.3796,2174.5507 11672.3796,2174.0136 Q11672.3796,2173.0696 11673.1445,2172.4511 Q11673.9258,2171.8164 11675.0977,2171.8164 Q11676.0579,2171.8164 11676.709,2172.2233 Q11676.8229,2171.9791 11676.9206,2171.8977 Q11677.0182,2171.8164 11677.1973,2171.8164 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="75" x="11693.75" y="2185.4166">BadgerOptions</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11661.4583" x2="11776.0417" y1="2198.1249" y2="2198.1249"/><ellipse cx="11671.875" cy="2209.5832" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="11685.4167" y="2218.9581">Path string</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11661.4583" x2="11776.0417" y1="2230.6248" y2="2230.6248"/><!--MD5=[f107aa2983bb6015c18eb3a156b2230c]
class cmd.Config--><rect codeLine="284" fill="#2A9FD6" height="85.8331" id="cmd.Config" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="126.0417" x="11497.3958" y="2153.125"/><ellipse cx="11535.4167" cy="2175.6249" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M11537.6139,2171.8164 Q11537.9883,2171.8164 11538.1022,2172.0279 Q11538.2324,2172.2395 11538.2324,2172.6302 L11538.2324,2173.7369 Q11538.2324,2174.567 11537.6139,2174.567 Q11537.5163,2174.567 11537.4349,2174.5507 Q11537.3535,2174.5345 11537.2884,2174.5019 Q11537.2396,2174.4693 11537.1908,2174.4205 Q11537.1419,2174.3554 11537.1094,2174.3229 Q11537.0931,2174.2903 11537.0605,2174.2089 Q11537.0443,2174.1276 11537.028,2174.1113 Q11537.028,2174.0787 11537.0117,2173.9973 Q11536.9954,2173.916 11536.9954,2173.8997 Q11536.9141,2173.5253 11536.5072,2173.2975 Q11536.1003,2173.0533 11535.5143,2173.0533 Q11534.9284,2173.0533 11534.5052,2173.33 Q11534.0983,2173.6067 11534.0983,2174.0136 Q11534.0983,2174.4368 11534.5052,2174.6647 Q11534.9284,2174.8925 11535.4655,2174.9739 Q11536.0189,2175.039 11536.6862,2175.218 Q11537.3698,2175.3971 11537.7604,2175.7063 Q11538.4928,2176.2923 11538.4928,2177.2688 Q11538.4928,2178.2454 11537.6953,2178.8476 Q11536.9141,2179.4498 11535.6283,2179.4498 Q11534.6029,2179.4498 11533.6914,2178.9615 Q11533.431,2179.2545 11533.1868,2179.2545 Q11532.5521,2179.2545 11532.5521,2178.4407 L11532.5521,2177.6106 Q11532.5521,2177.2037 11532.6823,2176.9921 Q11532.8288,2176.7805 11533.1706,2176.7805 Q11533.2845,2176.7805 11533.3659,2176.8131 Q11533.4635,2176.8294 11533.5286,2176.8782 Q11533.5938,2176.927 11533.6426,2176.9759 Q11533.6914,2177.0247 11533.7077,2177.1061 Q11533.7402,2177.1712 11533.7565,2177.22 Q11533.7728,2177.2526 11533.7891,2177.3177 Q11533.8053,2177.3665 11533.8053,2177.3828 Q11533.903,2177.7246 11534.4076,2177.9687 Q11534.9284,2178.1966 11535.5469,2178.1966 Q11536.2467,2178.1966 11536.7188,2177.9199 Q11537.1908,2177.6432 11537.1908,2177.2526 Q11537.1908,2176.8782 11536.8164,2176.6503 Q11536.4583,2176.4225 11535.9701,2176.3574 Q11535.498,2176.276 11534.847,2176.1295 Q11534.2122,2175.9667 11533.8216,2175.7552 Q11533.3496,2175.4785 11533.0729,2175.0227 Q11532.7962,2174.5507 11532.7962,2174.0136 Q11532.7962,2173.0696 11533.5612,2172.4511 Q11534.3424,2171.8164 11535.5143,2171.8164 Q11536.4746,2171.8164 11537.1257,2172.2233 Q11537.2396,2171.9791 11537.3372,2171.8977 Q11537.4349,2171.8164 11537.6139,2171.8164 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="32.2917" x="11559.375" y="2185.4166">Config</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11498.4375" x2="11622.3958" y1="2198.1249" y2="2198.1249"/><ellipse cx="11508.8542" cy="2209.5832" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="89.5833" x="11522.3958" y="2218.9581">Database Options</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11498.4375" x2="11622.3958" y1="2230.6248" y2="2230.6248"/><!--MD5=[62d51a71a4878fccce1fadb30ec48901]
class cmd.MemoryOptions--><rect codeLine="288" fill="#2A9FD6" height="85.8331" id="cmd.MemoryOptions" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="120.8333" x="11813.5417" y="2153.125"/><ellipse cx="11828.125" cy="2175.6249" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M11830.3223,2171.8164 Q11830.6966,2171.8164 11830.8105,2172.0279 Q11830.9408,2172.2395 11830.9408,2172.6302 L11830.9408,2173.7369 Q11830.9408,2174.567 11830.3223,2174.567 Q11830.2246,2174.567 11830.1432,2174.5507 Q11830.0618,2174.5345 11829.9967,2174.5019 Q11829.9479,2174.4693 11829.8991,2174.4205 Q11829.8503,2174.3554 11829.8177,2174.3229 Q11829.8014,2174.2903 11829.7689,2174.2089 Q11829.7526,2174.1276 11829.7363,2174.1113 Q11829.7363,2174.0787 11829.7201,2173.9973 Q11829.7038,2173.916 11829.7038,2173.8997 Q11829.6224,2173.5253 11829.2155,2173.2975 Q11828.8086,2173.0533 11828.2227,2173.0533 Q11827.6367,2173.0533 11827.2135,2173.33 Q11826.8066,2173.6067 11826.8066,2174.0136 Q11826.8066,2174.4368 11827.2135,2174.6647 Q11827.6367,2174.8925 11828.1738,2174.9739 Q11828.7272,2175.039 11829.3945,2175.218 Q11830.0781,2175.3971 11830.4688,2175.7063 Q11831.2012,2176.2923 11831.2012,2177.2688 Q11831.2012,2178.2454 11830.4036,2178.8476 Q11829.6224,2179.4498 11828.3366,2179.4498 Q11827.3112,2179.4498 11826.3997,2178.9615 Q11826.1393,2179.2545 11825.8952,2179.2545 Q11825.2604,2179.2545 11825.2604,2178.4407 L11825.2604,2177.6106 Q11825.2604,2177.2037 11825.3906,2176.9921 Q11825.5371,2176.7805 11825.8789,2176.7805 Q11825.9928,2176.7805 11826.0742,2176.8131 Q11826.1719,2176.8294 11826.237,2176.8782 Q11826.3021,2176.927 11826.3509,2176.9759 Q11826.3997,2177.0247 11826.416,2177.1061 Q11826.4486,2177.1712 11826.4648,2177.22 Q11826.4811,2177.2526 11826.4974,2177.3177 Q11826.5137,2177.3665 11826.5137,2177.3828 Q11826.6113,2177.7246 11827.1159,2177.9687 Q11827.6367,2178.1966 11828.2552,2178.1966 Q11828.9551,2178.1966 11829.4271,2177.9199 Q11829.8991,2177.6432 11829.8991,2177.2526 Q11829.8991,2176.8782 11829.5247,2176.6503 Q11829.1667,2176.4225 11828.6784,2176.3574 Q11828.2064,2176.276 11827.5553,2176.1295 Q11826.9206,2175.9667 11826.5299,2175.7552 Q11826.0579,2175.4785 11825.7813,2175.0227 Q11825.5046,2174.5507 11825.5046,2174.0136 Q11825.5046,2173.0696 11826.2695,2172.4511 Q11827.0508,2171.8164 11828.2227,2171.8164 Q11829.1829,2171.8164 11829.834,2172.2233 Q11829.9479,2171.9791 11830.0456,2171.8977 Q11830.1432,2171.8164 11830.3223,2171.8164 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="79.1667" x="11846.875" y="2185.4166">MemoryOptions</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11814.5833" x2="11933.3333" y1="2198.1249" y2="2198.1249"/><ellipse cx="11825" cy="2209.5832" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="54.1667" x="11838.5417" y="2218.9581">Size uint64</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11814.5833" x2="11933.3333" y1="2230.6248" y2="2230.6248"/><!--MD5=[c6d58b1ff67e7eaff707534e00a6a0f9]
class cmd.Options--><rect codeLine="292" fill="#2A9FD6" height="158.3328" id="cmd.Options" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="159.375" x="11497.3958" y="2301.0417"/><ellipse cx="11548.4375" cy="2323.5416" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M11550.6348,2319.733 Q11551.0091,2319.733 11551.123,2319.9446 Q11551.2533,2320.1562 11551.2533,2320.5468 L11551.2533,2321.6536 Q11551.2533,2322.4837 11550.6348,2322.4837 Q11550.5371,2322.4837 11550.4557,2322.4674 Q11550.3743,2322.4511 11550.3092,2322.4186 Q11550.2604,2322.386 11550.2116,2322.3372 Q11550.1628,2322.2721 11550.1302,2322.2395 Q11550.1139,2322.207 11550.0814,2322.1256 Q11550.0651,2322.0442 11550.0488,2322.0279 Q11550.0488,2321.9954 11550.0326,2321.914 Q11550.0163,2321.8326 11550.0163,2321.8164 Q11549.9349,2321.442 11549.528,2321.2141 Q11549.1211,2320.97 11548.5352,2320.97 Q11547.9492,2320.97 11547.526,2321.2467 Q11547.1191,2321.5234 11547.1191,2321.9303 Q11547.1191,2322.3535 11547.526,2322.5813 Q11547.9492,2322.8092 11548.4863,2322.8906 Q11549.0397,2322.9557 11549.707,2323.1347 Q11550.3906,2323.3138 11550.7813,2323.623 Q11551.5137,2324.2089 11551.5137,2325.1855 Q11551.5137,2326.1621 11550.7161,2326.7643 Q11549.9349,2327.3665 11548.6491,2327.3665 Q11547.6237,2327.3665 11546.7122,2326.8782 Q11546.4518,2327.1712 11546.2077,2327.1712 Q11545.5729,2327.1712 11545.5729,2326.3574 L11545.5729,2325.5273 Q11545.5729,2325.1204 11545.7031,2324.9088 Q11545.8496,2324.6972 11546.1914,2324.6972 Q11546.3053,2324.6972 11546.3867,2324.7298 Q11546.4844,2324.746 11546.5495,2324.7949 Q11546.6146,2324.8437 11546.6634,2324.8925 Q11546.7122,2324.9414 11546.7285,2325.0227 Q11546.7611,2325.0878 11546.7773,2325.1367 Q11546.7936,2325.1692 11546.8099,2325.2343 Q11546.8262,2325.2832 11546.8262,2325.2994 Q11546.9238,2325.6412 11547.4284,2325.8854 Q11547.9492,2326.1132 11548.5677,2326.1132 Q11549.2676,2326.1132 11549.7396,2325.8365 Q11550.2116,2325.5598 11550.2116,2325.1692 Q11550.2116,2324.7949 11549.8372,2324.567 Q11549.4792,2324.3391 11548.9909,2324.274 Q11548.5189,2324.1927 11547.8678,2324.0462 Q11547.2331,2323.8834 11546.8424,2323.6718 Q11546.3704,2323.3951 11546.0938,2322.9394 Q11545.8171,2322.4674 11545.8171,2321.9303 Q11545.8171,2320.9863 11546.582,2320.3678 Q11547.3633,2319.733 11548.5352,2319.733 Q11549.4954,2319.733 11550.1465,2320.1399 Q11550.2604,2319.8958 11550.3581,2319.8144 Q11550.4557,2319.733 11550.6348,2319.733 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="38.5417" x="11573.4375" y="2333.3332">Options</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11498.4375" x2="11655.7292" y1="2346.0416" y2="2346.0416"/><ellipse cx="11508.8542" cy="2357.4999" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="11522.3958" y="2366.8748">Address string</text><ellipse cx="11508.8542" cy="2381.6665" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="11522.3958" y="2391.0414">Store string</text><ellipse cx="11508.8542" cy="2405.833" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="122.9167" x="11522.3958" y="2415.2079">Memory MemoryOptions</text><ellipse cx="11508.8542" cy="2429.9996" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="114.5833" x="11522.3958" y="2439.3745">Badger BadgerOptions</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11498.4375" x2="11655.7292" y1="2451.0412" y2="2451.0412"/><!--MD5=[0752e0d335cce109485d555232e09697]
class container.DocumentContainer--><rect codeLine="304" fill="#2A9FD6" height="230.8325" id="container.DocumentContainer" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="242.7083" x="14931.7708" y="106.7708"/><ellipse cx="14993.2292" cy="129.2708" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M14995.4264,125.4622 Q14995.8008,125.4622 14995.9147,125.6738 Q14996.0449,125.8854 14996.0449,126.276 L14996.0449,127.3828 Q14996.0449,128.2128 14995.4264,128.2128 Q14995.3288,128.2128 14995.2474,128.1966 Q14995.166,128.1803 14995.1009,128.1477 Q14995.0521,128.1152 14995.0033,128.0664 Q14994.9544,128.0013 14994.9219,127.9687 Q14994.9056,127.9361 14994.873,127.8548 Q14994.8568,127.7734 14994.8405,127.7571 Q14994.8405,127.7246 14994.8242,127.6432 Q14994.8079,127.5618 14994.8079,127.5455 Q14994.7266,127.1712 14994.3197,126.9433 Q14993.9128,126.6992 14993.3268,126.6992 Q14992.7409,126.6992 14992.3177,126.9759 Q14991.9108,127.2526 14991.9108,127.6595 Q14991.9108,128.0826 14992.3177,128.3105 Q14992.7409,128.5384 14993.278,128.6197 Q14993.8314,128.6848 14994.4987,128.8639 Q14995.1823,129.0429 14995.5729,129.3522 Q14996.3053,129.9381 14996.3053,130.9147 Q14996.3053,131.8912 14995.5078,132.4934 Q14994.7266,133.0957 14993.4408,133.0957 Q14992.4154,133.0957 14991.5039,132.6074 Q14991.2435,132.9003 14990.9993,132.9003 Q14990.3646,132.9003 14990.3646,132.0865 L14990.3646,131.2565 Q14990.3646,130.8496 14990.4948,130.638 Q14990.6413,130.4264 14990.9831,130.4264 Q14991.097,130.4264 14991.1784,130.4589 Q14991.276,130.4752 14991.3411,130.524 Q14991.4063,130.5729 14991.4551,130.6217 Q14991.5039,130.6705 14991.5202,130.7519 Q14991.5527,130.817 14991.569,130.8658 Q14991.5853,130.8984 14991.6016,130.9635 Q14991.6178,131.0123 14991.6178,131.0286 Q14991.7155,131.3704 14992.2201,131.6145 Q14992.7409,131.8424 14993.3594,131.8424 Q14994.0592,131.8424 14994.5313,131.5657 Q14995.0033,131.289 14995.0033,130.8984 Q14995.0033,130.524 14994.6289,130.2962 Q14994.2708,130.0683 14993.7826,130.0032 Q14993.3105,129.9218 14992.6595,129.7753 Q14992.0247,129.6126 14991.6341,129.401 Q14991.1621,129.1243 14990.8854,128.6686 Q14990.6087,128.1966 14990.6087,127.6595 Q14990.6087,126.7154 14991.3737,126.097 Q14992.1549,125.4622 14993.3268,125.4622 Q14994.2871,125.4622 14994.9382,125.8691 Q14995.0521,125.6249 14995.1497,125.5436 Q14995.2474,125.4622 14995.4264,125.4622 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="101.0417" x="15018.2292" y="139.0624">DocumentContainer</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14932.8125" x2="15173.4375" y1="151.7707" y2="151.7707"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14940.1042" y="160.1041"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="14956.7708" y="172.604">docs []</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="14990.1042" y="172.604">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="15011.9792" y="172.604">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="15045.3125" y="172.604">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="15089.0625" y="172.604">{}</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14940.1042" y="184.2706"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="14956.7708" y="196.7705">numDocs int</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14932.8125" x2="15173.4375" y1="208.4372" y2="208.4372"/><ellipse cx="14943.2292" cy="219.8955" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="59.375" x="14956.7708" y="229.2704">At(index int)</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="15019.2708" y="229.2704">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="15041.1458" y="229.2704">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="15074.4792" y="229.2704">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="15118.2292" y="229.2704">{}</text><ellipse cx="14943.2292" cy="244.0621" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="14956.7708" y="253.437">Len() int</text><ellipse cx="14943.2292" cy="268.2287" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="63.5417" x="14956.7708" y="277.6036">AddDoc(doc</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="15023.4375" y="277.6036">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="15045.3125" y="277.6036">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="15078.6458" y="277.6036">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="40.625" x="15122.3958" y="277.6036">{}) error</text><ellipse cx="14943.2292" cy="292.3952" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="77.0833" x="14956.7708" y="301.7701">Swap(i int, j int)</text><ellipse cx="14943.2292" cy="316.5618" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="14956.7708" y="325.9367">Close() error</text><!--MD5=[5c940895c855012f78565a80b8effb11]
class go-datastore.Key--><rect fill="#2A9FD6" height="51.2499" id="go-datastore.Key" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="60.4167" x="14739.5833" y="2354.6875"/><ellipse cx="14754.1667" cy="2371.9791" fill="#777777" rx="10.4167" ry="10.4167" style="stroke:#444444;stroke-width:1.0416666666666667;"/><path d="M14754.6387,2374.5507 Q14755.2409,2374.5507 14755.6478,2374.4042 Q14756.071,2374.2578 14756.2337,2374.095 Q14756.4128,2373.9322 14756.5918,2373.7858 Q14756.7871,2373.6393 14756.9499,2373.6393 Q14757.194,2373.6393 14757.373,2373.8346 Q14757.5684,2374.0136 14757.5684,2374.2578 Q14757.5684,2374.7949 14756.7057,2375.2994 Q14755.8594,2375.804 14754.6061,2375.804 Q14753.0273,2375.804 14751.9694,2374.8763 Q14750.9277,2373.9322 14750.9277,2372.5162 L14750.9277,2371.6861 Q14750.9277,2370.1888 14751.9043,2369.1796 Q14752.8809,2368.1705 14754.3294,2368.1705 Q14755.2083,2368.1705 14756.1035,2368.5937 L14756.2337,2368.6425 Q14756.4453,2368.3333 14756.7546,2368.3333 Q14757.1289,2368.3333 14757.2591,2368.5449 Q14757.3893,2368.7565 14757.3893,2369.1634 L14757.3893,2370.205 Q14757.3893,2371.0351 14756.7546,2371.0351 Q14756.5267,2371.0351 14756.3802,2370.9212 Q14756.25,2370.791 14756.2174,2370.6933 Q14756.1849,2370.5794 14756.1523,2370.3678 Q14756.071,2369.9934 14755.6803,2369.7656 Q14755.306,2369.5377 14754.9805,2369.4726 Q14754.6549,2369.4075 14754.3783,2369.4075 Q14753.4342,2369.4075 14752.7995,2370.0585 Q14752.181,2370.6933 14752.181,2371.6861 L14752.181,2372.4837 Q14752.181,2373.4277 14752.8483,2373.9973 Q14753.5156,2374.5507 14754.6387,2374.5507 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="18.75" x="14772.9167" y="2376.5624">Key</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14740.625" x2="14798.9583" y1="2389.2707" y2="2389.2707"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14740.625" x2="14798.9583" y1="2397.6041" y2="2397.6041"/><!--MD5=[541cf80743b91be102f98fd44bf85d66]
class go-datastore.Txn--><rect fill="#2A9FD6" height="51.2499" id="go-datastore.Txn" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="60.4167" x="14836.4583" y="2354.6875"/><ellipse cx="14851.0417" cy="2371.9791" fill="#777777" rx="10.4167" ry="10.4167" style="stroke:#444444;stroke-width:1.0416666666666667;"/><path d="M14851.5137,2374.5507 Q14852.1159,2374.5507 14852.5228,2374.4042 Q14852.946,2374.2578 14853.1087,2374.095 Q14853.2878,2373.9322 14853.4668,2373.7858 Q14853.6621,2373.6393 14853.8249,2373.6393 Q14854.069,2373.6393 14854.248,2373.8346 Q14854.4434,2374.0136 14854.4434,2374.2578 Q14854.4434,2374.7949 14853.5807,2375.2994 Q14852.7344,2375.804 14851.4811,2375.804 Q14849.9023,2375.804 14848.8444,2374.8763 Q14847.8027,2373.9322 14847.8027,2372.5162 L14847.8027,2371.6861 Q14847.8027,2370.1888 14848.7793,2369.1796 Q14849.7559,2368.1705 14851.2044,2368.1705 Q14852.0833,2368.1705 14852.9785,2368.5937 L14853.1087,2368.6425 Q14853.3203,2368.3333 14853.6296,2368.3333 Q14854.0039,2368.3333 14854.1341,2368.5449 Q14854.2643,2368.7565 14854.2643,2369.1634 L14854.2643,2370.205 Q14854.2643,2371.0351 14853.6296,2371.0351 Q14853.4017,2371.0351 14853.2552,2370.9212 Q14853.125,2370.791 14853.0924,2370.6933 Q14853.0599,2370.5794 14853.0273,2370.3678 Q14852.946,2369.9934 14852.5553,2369.7656 Q14852.181,2369.5377 14851.8555,2369.4726 Q14851.5299,2369.4075 14851.2533,2369.4075 Q14850.3092,2369.4075 14849.6745,2370.0585 Q14849.056,2370.6933 14849.056,2371.6861 L14849.056,2372.4837 Q14849.056,2373.4277 14849.7233,2373.9973 Q14850.3906,2374.5507 14851.5137,2374.5507 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="18.75" x="14869.7917" y="2376.5624">Txn</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14837.5" x2="14895.8333" y1="2389.2707" y2="2389.2707"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14837.5" x2="14895.8333" y1="2397.6041" y2="2397.6041"/><!--MD5=[20457d2dc775303ccc2e45c44542a8d2]
class go-datastore.Batch--><rect fill="#2A9FD6" height="51.2499" id="go-datastore.Batch" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="70.8333" x="14933.3333" y="2354.6875"/><ellipse cx="14947.9167" cy="2371.9791" fill="#777777" rx="10.4167" ry="10.4167" style="stroke:#444444;stroke-width:1.0416666666666667;"/><path d="M14948.3887,2374.5507 Q14948.9909,2374.5507 14949.3978,2374.4042 Q14949.821,2374.2578 14949.9837,2374.095 Q14950.1628,2373.9322 14950.3418,2373.7858 Q14950.5371,2373.6393 14950.6999,2373.6393 Q14950.944,2373.6393 14951.123,2373.8346 Q14951.3184,2374.0136 14951.3184,2374.2578 Q14951.3184,2374.7949 14950.4557,2375.2994 Q14949.6094,2375.804 14948.3561,2375.804 Q14946.7773,2375.804 14945.7194,2374.8763 Q14944.6777,2373.9322 14944.6777,2372.5162 L14944.6777,2371.6861 Q14944.6777,2370.1888 14945.6543,2369.1796 Q14946.6309,2368.1705 14948.0794,2368.1705 Q14948.9583,2368.1705 14949.8535,2368.5937 L14949.9837,2368.6425 Q14950.1953,2368.3333 14950.5046,2368.3333 Q14950.8789,2368.3333 14951.0091,2368.5449 Q14951.1393,2368.7565 14951.1393,2369.1634 L14951.1393,2370.205 Q14951.1393,2371.0351 14950.5046,2371.0351 Q14950.2767,2371.0351 14950.1302,2370.9212 Q14950,2370.791 14949.9674,2370.6933 Q14949.9349,2370.5794 14949.9023,2370.3678 Q14949.821,2369.9934 14949.4303,2369.7656 Q14949.056,2369.5377 14948.7305,2369.4726 Q14948.4049,2369.4075 14948.1283,2369.4075 Q14947.1842,2369.4075 14946.5495,2370.0585 Q14945.931,2370.6933 14945.931,2371.6861 L14945.931,2372.4837 Q14945.931,2373.4277 14946.5983,2373.9973 Q14947.2656,2374.5507 14948.3887,2374.5507 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="29.1667" x="14966.6667" y="2376.5624">Batch</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14934.375" x2="15003.125" y1="2389.2707" y2="2389.2707"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14934.375" x2="15003.125" y1="2397.6041" y2="2397.6041"/><!--MD5=[da319569f74a44a917d3d4f42d4e8b7d]
class go-datastore.Read--><rect fill="#2A9FD6" height="51.2499" id="go-datastore.Read" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="68.75" x="15040.625" y="2354.6875"/><ellipse cx="15055.2083" cy="2371.9791" fill="#777777" rx="10.4167" ry="10.4167" style="stroke:#444444;stroke-width:1.0416666666666667;"/><path d="M15055.6803,2374.5507 Q15056.2826,2374.5507 15056.6895,2374.4042 Q15057.1126,2374.2578 15057.2754,2374.095 Q15057.4544,2373.9322 15057.6335,2373.7858 Q15057.8288,2373.6393 15057.9915,2373.6393 Q15058.2357,2373.6393 15058.4147,2373.8346 Q15058.61,2374.0136 15058.61,2374.2578 Q15058.61,2374.7949 15057.7474,2375.2994 Q15056.901,2375.804 15055.6478,2375.804 Q15054.069,2375.804 15053.0111,2374.8763 Q15051.9694,2373.9322 15051.9694,2372.5162 L15051.9694,2371.6861 Q15051.9694,2370.1888 15052.946,2369.1796 Q15053.9225,2368.1705 15055.3711,2368.1705 Q15056.25,2368.1705 15057.1452,2368.5937 L15057.2754,2368.6425 Q15057.487,2368.3333 15057.7962,2368.3333 Q15058.1706,2368.3333 15058.3008,2368.5449 Q15058.431,2368.7565 15058.431,2369.1634 L15058.431,2370.205 Q15058.431,2371.0351 15057.7962,2371.0351 Q15057.5684,2371.0351 15057.4219,2370.9212 Q15057.2917,2370.791 15057.2591,2370.6933 Q15057.2266,2370.5794 15057.194,2370.3678 Q15057.1126,2369.9934 15056.722,2369.7656 Q15056.3477,2369.5377 15056.0221,2369.4726 Q15055.6966,2369.4075 15055.4199,2369.4075 Q15054.4759,2369.4075 15053.8411,2370.0585 Q15053.2227,2370.6933 15053.2227,2371.6861 L15053.2227,2372.4837 Q15053.2227,2373.4277 15053.89,2373.9973 Q15054.5573,2374.5507 15055.6803,2374.5507 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="27.0833" x="15073.9583" y="2376.5624">Read</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="15041.6667" x2="15108.3333" y1="2389.2707" y2="2389.2707"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="15041.6667" x2="15108.3333" y1="2397.6041" y2="2397.6041"/><!--MD5=[fc79118c2d3b18d880581dbfa94b982c]
class crdt.CompositeDAG--><rect codeLine="420" fill="#2A9FD6" height="158.3328" id="crdt.CompositeDAG" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="338.5417" x="10072.3958" y="5059.8958"/><ellipse cx="10193.75" cy="5082.3958" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M10195.9473,5078.5872 Q10196.3216,5078.5872 10196.4355,5078.7988 Q10196.5658,5079.0104 10196.5658,5079.401 L10196.5658,5080.5078 Q10196.5658,5081.3378 10195.9473,5081.3378 Q10195.8496,5081.3378 10195.7682,5081.3216 Q10195.6868,5081.3053 10195.6217,5081.2727 Q10195.5729,5081.2402 10195.5241,5081.1914 Q10195.4753,5081.1263 10195.4427,5081.0937 Q10195.4264,5081.0611 10195.3939,5080.9798 Q10195.3776,5080.8984 10195.3613,5080.8821 Q10195.3613,5080.8496 10195.3451,5080.7682 Q10195.3288,5080.6868 10195.3288,5080.6705 Q10195.2474,5080.2962 10194.8405,5080.0683 Q10194.4336,5079.8242 10193.8477,5079.8242 Q10193.2617,5079.8242 10192.8385,5080.1009 Q10192.4316,5080.3776 10192.4316,5080.7845 Q10192.4316,5081.2076 10192.8385,5081.4355 Q10193.2617,5081.6634 10193.7988,5081.7447 Q10194.3522,5081.8098 10195.0195,5081.9889 Q10195.7031,5082.1679 10196.0938,5082.4772 Q10196.8262,5083.0631 10196.8262,5084.0397 Q10196.8262,5085.0162 10196.0286,5085.6184 Q10195.2474,5086.2207 10193.9616,5086.2207 Q10192.9362,5086.2207 10192.0247,5085.7324 Q10191.7643,5086.0253 10191.5202,5086.0253 Q10190.8854,5086.0253 10190.8854,5085.2115 L10190.8854,5084.3815 Q10190.8854,5083.9746 10191.0156,5083.763 Q10191.1621,5083.5514 10191.5039,5083.5514 Q10191.6178,5083.5514 10191.6992,5083.5839 Q10191.7969,5083.6002 10191.862,5083.649 Q10191.9271,5083.6979 10191.9759,5083.7467 Q10192.0247,5083.7955 10192.041,5083.8769 Q10192.0736,5083.942 10192.0898,5083.9908 Q10192.1061,5084.0234 10192.1224,5084.0885 Q10192.1387,5084.1373 10192.1387,5084.1536 Q10192.2363,5084.4954 10192.7409,5084.7395 Q10193.2617,5084.9674 10193.8802,5084.9674 Q10194.5801,5084.9674 10195.0521,5084.6907 Q10195.5241,5084.414 10195.5241,5084.0234 Q10195.5241,5083.649 10195.1497,5083.4212 Q10194.7917,5083.1933 10194.3034,5083.1282 Q10193.8314,5083.0468 10193.1803,5082.9003 Q10192.5456,5082.7376 10192.1549,5082.526 Q10191.6829,5082.2493 10191.4063,5081.7936 Q10191.1296,5081.3216 10191.1296,5080.7845 Q10191.1296,5079.8404 10191.8945,5079.222 Q10192.6758,5078.5872 10193.8477,5078.5872 Q10194.8079,5078.5872 10195.459,5078.9941 Q10195.5729,5078.7499 10195.6706,5078.6686 Q10195.7682,5078.5872 10195.9473,5078.5872 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="77.0833" x="10218.75" y="5092.1874">CompositeDAG</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="10073.4375" x2="10409.8958" y1="5104.8957" y2="5104.8957"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="10073.4375" x2="10409.8958" y1="5113.2291" y2="5113.2291"/><ellipse cx="10083.8542" cy="5124.6874" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="202.0833" x="10097.3958" y="5134.0623">Value(ctx context.Context) ([]byte, error)</text><ellipse cx="10083.8542" cy="5148.854" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="302.0833" x="10097.3958" y="5158.2289">Set(patch []byte, links []core.DAGLink) *CompositeDAGDelta</text><ellipse cx="10083.8542" cy="5173.0205" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="294.7917" x="10097.3958" y="5182.3954">Merge(ctx context.Context, delta core.Delta, id string) error</text><ellipse cx="10083.8542" cy="5197.1871" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="296.875" x="10097.3958" y="5206.562">DeltaDecode(node go-ipld-format.Node) (core.Delta, error)</text><!--MD5=[785cbb63077dbb22a912e38a7501e442]
class crdt.CompositeDAGDelta--><rect codeLine="427" fill="#2A9FD6" height="254.9991" id="crdt.CompositeDAGDelta" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="165.625" x="11082.8125" y="5011.4583"/><ellipse cx="11106.7708" cy="5033.9583" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M11108.9681,5030.1497 Q11109.3424,5030.1497 11109.4564,5030.3613 Q11109.5866,5030.5729 11109.5866,5030.9635 L11109.5866,5032.0703 Q11109.5866,5032.9003 11108.9681,5032.9003 Q11108.8704,5032.9003 11108.7891,5032.8841 Q11108.7077,5032.8678 11108.6426,5032.8352 Q11108.5938,5032.8027 11108.5449,5032.7539 Q11108.4961,5032.6888 11108.4635,5032.6562 Q11108.4473,5032.6236 11108.4147,5032.5423 Q11108.3984,5032.4609 11108.3822,5032.4446 Q11108.3822,5032.4121 11108.3659,5032.3307 Q11108.3496,5032.2493 11108.3496,5032.233 Q11108.2682,5031.8587 11107.8613,5031.6308 Q11107.4544,5031.3867 11106.8685,5031.3867 Q11106.2826,5031.3867 11105.8594,5031.6634 Q11105.4525,5031.9401 11105.4525,5032.347 Q11105.4525,5032.7701 11105.8594,5032.998 Q11106.2826,5033.2259 11106.8197,5033.3072 Q11107.373,5033.3723 11108.0404,5033.5514 Q11108.724,5033.7304 11109.1146,5034.0397 Q11109.847,5034.6256 11109.847,5035.6022 Q11109.847,5036.5787 11109.0495,5037.1809 Q11108.2682,5037.7832 11106.9824,5037.7832 Q11105.957,5037.7832 11105.0456,5037.2949 Q11104.7852,5037.5878 11104.541,5037.5878 Q11103.9063,5037.5878 11103.9063,5036.774 L11103.9063,5035.944 Q11103.9063,5035.5371 11104.0365,5035.3255 Q11104.1829,5035.1139 11104.5247,5035.1139 Q11104.6387,5035.1139 11104.7201,5035.1464 Q11104.8177,5035.1627 11104.8828,5035.2115 Q11104.9479,5035.2604 11104.9967,5035.3092 Q11105.0456,5035.358 11105.0618,5035.4394 Q11105.0944,5035.5045 11105.1107,5035.5533 Q11105.127,5035.5859 11105.1432,5035.651 Q11105.1595,5035.6998 11105.1595,5035.7161 Q11105.2572,5036.0579 11105.7617,5036.302 Q11106.2826,5036.5299 11106.901,5036.5299 Q11107.6009,5036.5299 11108.0729,5036.2532 Q11108.5449,5035.9765 11108.5449,5035.5859 Q11108.5449,5035.2115 11108.1706,5034.9837 Q11107.8125,5034.7558 11107.3242,5034.6907 Q11106.8522,5034.6093 11106.2012,5034.4628 Q11105.5664,5034.3001 11105.1758,5034.0885 Q11104.7038,5033.8118 11104.4271,5033.3561 Q11104.1504,5032.8841 11104.1504,5032.347 Q11104.1504,5031.4029 11104.9154,5030.7845 Q11105.6966,5030.1497 11106.8685,5030.1497 Q11107.8288,5030.1497 11108.4798,5030.5566 Q11108.5938,5030.3124 11108.6914,5030.2311 Q11108.7891,5030.1497 11108.9681,5030.1497 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="11127.6042" y="5043.7499">CompositeDAGDelta</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11083.8542" x2="11247.3958" y1="5056.4582" y2="5056.4582"/><ellipse cx="11094.2708" cy="5067.9166" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="67.7083" x="11107.8125" y="5077.2915">Priority uint64</text><ellipse cx="11094.2708" cy="5092.0831" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="54.1667" x="11107.8125" y="5101.458">Data []byte</text><ellipse cx="11094.2708" cy="5116.2497" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="11107.8125" y="5125.6246">SubDAGs []core.DAGLink</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11083.8542" x2="11247.3958" y1="5137.2913" y2="5137.2913"/><ellipse cx="11094.2708" cy="5148.7496" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="93.75" x="11107.8125" y="5158.1245">GetPriority() uint64</text><ellipse cx="11094.2708" cy="5172.9162" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="11107.8125" y="5182.2911">SetPriority(prio uint64)</text><ellipse cx="11094.2708" cy="5197.0827" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="117.7083" x="11107.8125" y="5206.4576">Marshal() ([]byte, error)</text><ellipse cx="11094.2708" cy="5221.2493" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="11107.8125" y="5230.6242">Value()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="11147.3958" y="5230.6242">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="11191.1458" y="5230.6242">{}</text><ellipse cx="11094.2708" cy="5245.4158" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="114.5833" x="11107.8125" y="5254.7908">Links() []core.DAGLink</text><!--MD5=[fa3858883c242218c1b6e7499590f2ab]
class crdt.Factory--><rect codeLine="439" fill="#2A9FD6" height="544.9978" id="crdt.Factory" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="598.9583" x="10447.3958" y="4866.6667"/><ellipse cx="10718.2292" cy="4889.1666" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M10720.4264,4885.358 Q10720.8008,4885.358 10720.9147,4885.5696 Q10721.0449,4885.7812 10721.0449,4886.1718 L10721.0449,4887.2786 Q10721.0449,4888.1087 10720.4264,4888.1087 Q10720.3288,4888.1087 10720.2474,4888.0924 Q10720.166,4888.0761 10720.1009,4888.0436 Q10720.0521,4888.011 10720.0033,4887.9622 Q10719.9544,4887.8971 10719.9219,4887.8645 Q10719.9056,4887.832 10719.873,4887.7506 Q10719.8568,4887.6692 10719.8405,4887.6529 Q10719.8405,4887.6204 10719.8242,4887.539 Q10719.8079,4887.4576 10719.8079,4887.4414 Q10719.7266,4887.067 10719.3197,4886.8391 Q10718.9128,4886.595 10718.3268,4886.595 Q10717.7409,4886.595 10717.3177,4886.8717 Q10716.9108,4887.1484 10716.9108,4887.5553 Q10716.9108,4887.9785 10717.3177,4888.2063 Q10717.7409,4888.4342 10718.278,4888.5156 Q10718.8314,4888.5807 10719.4987,4888.7597 Q10720.1823,4888.9388 10720.5729,4889.248 Q10721.3053,4889.8339 10721.3053,4890.8105 Q10721.3053,4891.7871 10720.5078,4892.3893 Q10719.7266,4892.9915 10718.4408,4892.9915 Q10717.4154,4892.9915 10716.5039,4892.5032 Q10716.2435,4892.7962 10715.9993,4892.7962 Q10715.3646,4892.7962 10715.3646,4891.9824 L10715.3646,4891.1523 Q10715.3646,4890.7454 10715.4948,4890.5338 Q10715.6413,4890.3222 10715.9831,4890.3222 Q10716.097,4890.3222 10716.1784,4890.3548 Q10716.276,4890.371 10716.3411,4890.4199 Q10716.4063,4890.4687 10716.4551,4890.5175 Q10716.5039,4890.5664 10716.5202,4890.6477 Q10716.5527,4890.7128 10716.569,4890.7617 Q10716.5853,4890.7942 10716.6016,4890.8593 Q10716.6178,4890.9082 10716.6178,4890.9244 Q10716.7155,4891.2662 10717.2201,4891.5104 Q10717.7409,4891.7382 10718.3594,4891.7382 Q10719.0592,4891.7382 10719.5313,4891.4615 Q10720.0033,4891.1848 10720.0033,4890.7942 Q10720.0033,4890.4199 10719.6289,4890.192 Q10719.2708,4889.9641 10718.7826,4889.899 Q10718.3105,4889.8177 10717.6595,4889.6712 Q10717.0247,4889.5084 10716.6341,4889.2968 Q10716.1621,4889.0201 10715.8854,4888.5644 Q10715.6087,4888.0924 10715.6087,4887.5553 Q10715.6087,4886.6113 10716.3737,4885.9928 Q10717.1549,4885.358 10718.3268,4885.358 Q10719.2871,4885.358 10719.9382,4885.7649 Q10720.0521,4885.5208 10720.1497,4885.4394 Q10720.2474,4885.358 10720.4264,4885.358 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="38.5417" x="10743.2292" y="4898.9582">Factory</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="10448.4375" x2="11045.3125" y1="4911.6666" y2="4911.6666"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="10455.7292" y="4919.9999"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="25" x="10472.3958" y="4932.4998">crdts</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="10500.5208" y="4932.4998">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="175" x="10522.3958" y="4932.4998">[core.CType]*MerkleCRDTFactory</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="10455.7292" y="4944.1665"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="159.375" x="10472.3958" y="4956.6664">datastore core.DSReaderWriter</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="10455.7292" y="4968.333"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="162.5" x="10472.3958" y="4980.8329">headstore core.DSReaderWriter</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="10455.7292" y="4992.4996"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="10472.3958" y="5004.9995">dagstore core.DAGStore</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="10448.4375" x2="11045.3125" y1="5016.6662" y2="5016.6662"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="10455.7292" y="5024.9995"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="334.375" x="10472.3958" y="5037.4994">getRegisteredFactory(t core.CType) (*MerkleCRDTFactory, error)</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="10475.5208" y="5061.666"/><ellipse cx="10458.8542" cy="5076.4576" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="271.875" x="10472.3958" y="5085.8325">Register(t core.CType, fn *MerkleCRDTFactory) error</text><ellipse cx="10458.8542" cy="5100.6242" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="338.5417" x="10472.3958" y="5109.9991">Instance(t core.CType, key go-datastore.Key) (MerkleCRDT, error)</text><ellipse cx="10458.8542" cy="5124.7907" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="503.125" x="10472.3958" y="5134.1657">InstanceWithStores(store core.MultiStore, t core.CType, key go-datastore.Key) (MerkleCRDT, error)</text><ellipse cx="10458.8542" cy="5148.9573" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="543.75" x="10472.3958" y="5158.3322">SetStores(datastore core.DSReaderWriter, headstore core.DSReaderWriter, dagstore core.DAGStore) error</text><ellipse cx="10458.8542" cy="5173.1239" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="562.5" x="10472.3958" y="5182.4988">WithStores(datastore core.DSReaderWriter, headstore core.DSReaderWriter, dagstore core.DAGStore) Factory</text><ellipse cx="10458.8542" cy="5197.2904" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="261.4583" x="10472.3958" y="5206.6654">SetDatastore(datastore core.DSReaderWriter) error</text><ellipse cx="10458.8542" cy="5221.457" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="280.2083" x="10472.3958" y="5230.8319">WithDatastore(datastore core.DSReaderWriter) Factory</text><ellipse cx="10458.8542" cy="5245.6236" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="267.7083" x="10472.3958" y="5254.9985">SetHeadstore(headstore core.DSReaderWriter) error</text><ellipse cx="10458.8542" cy="5269.7901" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="286.4583" x="10472.3958" y="5279.165">WithHeadstore(headstore core.DSReaderWriter) Factory</text><ellipse cx="10458.8542" cy="5293.9567" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="222.9167" x="10472.3958" y="5303.3316">SetDagstore(dagstore core.DAGStore) error</text><ellipse cx="10458.8542" cy="5318.1233" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="241.6667" x="10472.3958" y="5327.4982">WithDagstore(dagstore core.DAGStore) Factory</text><ellipse cx="10458.8542" cy="5342.2898" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="169.7917" x="10472.3958" y="5351.6647">Datastore() core.DSReaderWriter</text><ellipse cx="10458.8542" cy="5366.4564" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="172.9167" x="10472.3958" y="5375.8313">Headstore() core.DSReaderWriter</text><ellipse cx="10458.8542" cy="5390.6229" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="137.5" x="10472.3958" y="5399.9979">DAGstore() core.DAGStore</text><!--MD5=[8538f4bcfec6665a02f7e9c2ce19f78e]
class crdt.LWWRegDelta--><rect codeLine="463" fill="#2A9FD6" height="206.6659" id="crdt.LWWRegDelta" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="154.1667" x="9881.25" y="5035.9375"/><ellipse cx="9913.1771" cy="5058.4374" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M9915.3743,5054.6289 Q9915.7487,5054.6289 9915.8626,5054.8404 Q9915.9928,5055.052 9915.9928,5055.4427 L9915.9928,5056.5494 Q9915.9928,5057.3795 9915.3743,5057.3795 Q9915.2767,5057.3795 9915.1953,5057.3632 Q9915.1139,5057.347 9915.0488,5057.3144 Q9915,5057.2818 9914.9512,5057.233 Q9914.9023,5057.1679 9914.8698,5057.1354 Q9914.8535,5057.1028 9914.821,5057.0214 Q9914.8047,5056.9401 9914.7884,5056.9238 Q9914.7884,5056.8912 9914.7721,5056.8098 Q9914.7559,5056.7285 9914.7559,5056.7122 Q9914.6745,5056.3378 9914.2676,5056.11 Q9913.8607,5055.8658 9913.2747,5055.8658 Q9912.6888,5055.8658 9912.2656,5056.1425 Q9911.8587,5056.4192 9911.8587,5056.8261 Q9911.8587,5057.2493 9912.2656,5057.4772 Q9912.6888,5057.705 9913.2259,5057.7864 Q9913.7793,5057.8515 9914.4466,5058.0305 Q9915.1302,5058.2096 9915.5208,5058.5188 Q9916.2533,5059.1048 9916.2533,5060.0813 Q9916.2533,5061.0579 9915.4557,5061.6601 Q9914.6745,5062.2623 9913.3887,5062.2623 Q9912.3633,5062.2623 9911.4518,5061.774 Q9911.1914,5062.067 9910.9473,5062.067 Q9910.3125,5062.067 9910.3125,5061.2532 L9910.3125,5060.4231 Q9910.3125,5060.0162 9910.4427,5059.8046 Q9910.5892,5059.593 9910.931,5059.593 Q9911.0449,5059.593 9911.1263,5059.6256 Q9911.224,5059.6419 9911.2891,5059.6907 Q9911.3542,5059.7395 9911.403,5059.7884 Q9911.4518,5059.8372 9911.4681,5059.9186 Q9911.5007,5059.9837 9911.5169,5060.0325 Q9911.5332,5060.0651 9911.5495,5060.1302 Q9911.5658,5060.179 9911.5658,5060.1953 Q9911.6634,5060.5371 9912.168,5060.7812 Q9912.6888,5061.0091 9913.3073,5061.0091 Q9914.0072,5061.0091 9914.4792,5060.7324 Q9914.9512,5060.4557 9914.9512,5060.0651 Q9914.9512,5059.6907 9914.5768,5059.4628 Q9914.2188,5059.235 9913.7305,5059.1699 Q9913.2585,5059.0885 9912.6074,5058.942 Q9911.9727,5058.7792 9911.582,5058.5677 Q9911.11,5058.291 9910.8333,5057.8352 Q9910.5566,5057.3632 9910.5566,5056.8261 Q9910.5566,5055.8821 9911.3216,5055.2636 Q9912.1029,5054.6289 9913.2747,5054.6289 Q9914.235,5054.6289 9914.8861,5055.0358 Q9915,5054.7916 9915.0977,5054.7102 Q9915.1953,5054.6289 9915.3743,5054.6289 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="73.9583" x="9935.7813" y="5068.2291">LWWRegDelta</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="9882.2917" x2="10034.375" y1="5080.9374" y2="5080.9374"/><ellipse cx="9892.7083" cy="5092.3957" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="67.7083" x="9906.25" y="5101.7706">Priority uint64</text><ellipse cx="9892.7083" cy="5116.5623" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="54.1667" x="9906.25" y="5125.9372">Data []byte</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="9882.2917" x2="10034.375" y1="5137.6039" y2="5137.6039"/><ellipse cx="9892.7083" cy="5149.0622" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="93.75" x="9906.25" y="5158.4371">GetPriority() uint64</text><ellipse cx="9892.7083" cy="5173.2288" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="9906.25" y="5182.6037">SetPriority(prio uint64)</text><ellipse cx="9892.7083" cy="5197.3953" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="117.7083" x="9906.25" y="5206.7702">Marshal() ([]byte, error)</text><ellipse cx="9892.7083" cy="5221.5619" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="9906.25" y="5230.9368">Value()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="9945.8333" y="5230.9368">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="9989.5833" y="5230.9368">{}</text><!--MD5=[ff75ce9ce1bbf52324e3624bd82d6ae8]
class crdt.LWWRegister--><rect codeLine="473" fill="#2A9FD6" height="230.8325" id="crdt.LWWRegister" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="334.375" x="10331.7708" y="6102.0833"/><ellipse cx="10455.2083" cy="6124.5833" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M10457.4056,6120.7747 Q10457.7799,6120.7747 10457.8939,6120.9863 Q10458.0241,6121.1979 10458.0241,6121.5885 L10458.0241,6122.6953 Q10458.0241,6123.5253 10457.4056,6123.5253 Q10457.3079,6123.5253 10457.2266,6123.5091 Q10457.1452,6123.4928 10457.0801,6123.4602 Q10457.0313,6123.4277 10456.9824,6123.3789 Q10456.9336,6123.3138 10456.901,6123.2812 Q10456.8848,6123.2486 10456.8522,6123.1673 Q10456.8359,6123.0859 10456.8197,6123.0696 Q10456.8197,6123.0371 10456.8034,6122.9557 Q10456.7871,6122.8743 10456.7871,6122.858 Q10456.7057,6122.4837 10456.2988,6122.2558 Q10455.8919,6122.0117 10455.306,6122.0117 Q10454.7201,6122.0117 10454.2969,6122.2884 Q10453.89,6122.5651 10453.89,6122.972 Q10453.89,6123.3951 10454.2969,6123.623 Q10454.7201,6123.8509 10455.2572,6123.9322 Q10455.8105,6123.9973 10456.4779,6124.1764 Q10457.1615,6124.3554 10457.5521,6124.6647 Q10458.2845,6125.2506 10458.2845,6126.2272 Q10458.2845,6127.2037 10457.487,6127.8059 Q10456.7057,6128.4082 10455.4199,6128.4082 Q10454.3945,6128.4082 10453.4831,6127.9199 Q10453.2227,6128.2128 10452.9785,6128.2128 Q10452.3438,6128.2128 10452.3438,6127.399 L10452.3438,6126.569 Q10452.3438,6126.1621 10452.474,6125.9505 Q10452.6204,6125.7389 10452.9622,6125.7389 Q10453.0762,6125.7389 10453.1576,6125.7714 Q10453.2552,6125.7877 10453.3203,6125.8365 Q10453.3854,6125.8854 10453.4342,6125.9342 Q10453.4831,6125.983 10453.4993,6126.0644 Q10453.5319,6126.1295 10453.5482,6126.1783 Q10453.5645,6126.2109 10453.5807,6126.276 Q10453.597,6126.3248 10453.597,6126.3411 Q10453.6947,6126.6829 10454.1992,6126.927 Q10454.7201,6127.1549 10455.3385,6127.1549 Q10456.0384,6127.1549 10456.5104,6126.8782 Q10456.9824,6126.6015 10456.9824,6126.2109 Q10456.9824,6125.8365 10456.6081,6125.6087 Q10456.25,6125.3808 10455.7617,6125.3157 Q10455.2897,6125.2343 10454.6387,6125.0878 Q10454.0039,6124.9251 10453.6133,6124.7135 Q10453.1413,6124.4368 10452.8646,6123.9811 Q10452.5879,6123.5091 10452.5879,6122.972 Q10452.5879,6122.0279 10453.3529,6121.4095 Q10454.1341,6120.7747 10455.306,6120.7747 Q10456.2663,6120.7747 10456.9173,6121.1816 Q10457.0313,6120.9374 10457.1289,6120.8561 Q10457.2266,6120.7747 10457.4056,6120.7747 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="68.75" x="10480.2083" y="6134.3749">LWWRegister</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="10332.8125" x2="10665.1042" y1="6147.0832" y2="6147.0832"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="10340.1042" y="6155.4166"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="47.9167" x="10356.7708" y="6167.9165">key string</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="10332.8125" x2="10665.1042" y1="6179.5831" y2="6179.5831"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="10340.1042" y="6187.9165"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="297.9167" x="10356.7708" y="6200.4164">setValue(ctx context.Context, val []byte, priority uint64) error</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="10359.8958" y="6224.5829"/><ellipse cx="10343.2292" cy="6239.3746" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="202.0833" x="10356.7708" y="6248.7495">Value(ctx context.Context) ([]byte, error)</text><ellipse cx="10343.2292" cy="6263.5412" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="162.5" x="10356.7708" y="6272.9161">Set(value []byte) *LWWRegDelta</text><ellipse cx="10343.2292" cy="6287.7077" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="294.7917" x="10356.7708" y="6297.0826">Merge(ctx context.Context, delta core.Delta, id string) error</text><ellipse cx="10343.2292" cy="6311.8743" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="296.875" x="10356.7708" y="6321.2492">DeltaDecode(node go-ipld-format.Node) (core.Delta, error)</text><!--MD5=[70cc84be7d2506af7b84d31811c3b4aa]
class crdt.MerkleCRDT--><rect codeLine="484" fill="#2A9FD6" height="51.2499" id="crdt.MerkleCRDT" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="108.3333" x="9736.4583" y="5113.5417"/><ellipse cx="9751.0417" cy="5130.8333" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M9753.0273,5133.2259 Q9753.4342,5133.2259 9753.6458,5133.3561 Q9753.8574,5133.4863 9753.8574,5133.8606 Q9753.8574,5134.4791 9753.0273,5134.4791 L9749.2513,5134.4791 Q9748.4375,5134.4791 9748.4375,5133.8606 Q9748.4375,5133.4863 9748.6491,5133.3561 Q9748.8607,5133.2259 9749.2513,5133.2259 L9750.5208,5133.2259 L9750.5208,5128.4407 L9749.2513,5128.4407 Q9748.4375,5128.4407 9748.4375,5127.8222 Q9748.4375,5127.4479 9748.6491,5127.3177 Q9748.8607,5127.1874 9749.2513,5127.1874 L9753.0273,5127.1874 Q9753.4342,5127.1874 9753.6458,5127.3177 Q9753.8574,5127.4479 9753.8574,5127.8222 Q9753.8574,5128.4407 9753.0273,5128.4407 L9751.7741,5128.4407 L9751.7741,5133.2259 L9753.0273,5133.2259 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="66.6667" x="9769.7917" y="5135.4166">MerkleCRDT</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="9737.5" x2="9843.75" y1="5148.1249" y2="5148.1249"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="9737.5" x2="9843.75" y1="5156.4582" y2="5156.4582"/><!--MD5=[a2d959e6102df4e1b2da9016cf1e1d04]
class crdt.MerkleCompositeDAG--><rect codeLine="486" fill="#2A9FD6" height="158.3328" id="crdt.MerkleCompositeDAG" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="423.9583" x="8920.3125" y="6138.5417"/><ellipse cx="9067.1875" cy="6161.0416" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M9069.3848,6157.233 Q9069.7591,6157.233 9069.873,6157.4446 Q9070.0033,6157.6562 9070.0033,6158.0468 L9070.0033,6159.1536 Q9070.0033,6159.9837 9069.3848,6159.9837 Q9069.2871,6159.9837 9069.2057,6159.9674 Q9069.1243,6159.9511 9069.0592,6159.9186 Q9069.0104,6159.886 9068.9616,6159.8372 Q9068.9128,6159.7721 9068.8802,6159.7395 Q9068.8639,6159.707 9068.8314,6159.6256 Q9068.8151,6159.5442 9068.7988,6159.5279 Q9068.7988,6159.4954 9068.7826,6159.414 Q9068.7663,6159.3326 9068.7663,6159.3164 Q9068.6849,6158.942 9068.278,6158.7141 Q9067.8711,6158.47 9067.2852,6158.47 Q9066.6992,6158.47 9066.276,6158.7467 Q9065.8691,6159.0234 9065.8691,6159.4303 Q9065.8691,6159.8535 9066.276,6160.0813 Q9066.6992,6160.3092 9067.2363,6160.3906 Q9067.7897,6160.4557 9068.457,6160.6347 Q9069.1406,6160.8138 9069.5313,6161.123 Q9070.2637,6161.7089 9070.2637,6162.6855 Q9070.2637,6163.6621 9069.4661,6164.2643 Q9068.6849,6164.8665 9067.3991,6164.8665 Q9066.3737,6164.8665 9065.4622,6164.3782 Q9065.2018,6164.6712 9064.9577,6164.6712 Q9064.3229,6164.6712 9064.3229,6163.8574 L9064.3229,6163.0273 Q9064.3229,6162.6204 9064.4531,6162.4088 Q9064.5996,6162.1972 9064.9414,6162.1972 Q9065.0553,6162.1972 9065.1367,6162.2298 Q9065.2344,6162.246 9065.2995,6162.2949 Q9065.3646,6162.3437 9065.4134,6162.3925 Q9065.4622,6162.4414 9065.4785,6162.5227 Q9065.5111,6162.5878 9065.5273,6162.6367 Q9065.5436,6162.6692 9065.5599,6162.7343 Q9065.5762,6162.7832 9065.5762,6162.7994 Q9065.6738,6163.1412 9066.1784,6163.3854 Q9066.6992,6163.6132 9067.3177,6163.6132 Q9068.0176,6163.6132 9068.4896,6163.3365 Q9068.9616,6163.0598 9068.9616,6162.6692 Q9068.9616,6162.2949 9068.5872,6162.067 Q9068.2292,6161.8391 9067.7409,6161.774 Q9067.2689,6161.6927 9066.6178,6161.5462 Q9065.9831,6161.3834 9065.5924,6161.1718 Q9065.1204,6160.8951 9064.8438,6160.4394 Q9064.5671,6159.9674 9064.5671,6159.4303 Q9064.5671,6158.4863 9065.332,6157.8678 Q9066.1133,6157.233 9067.2852,6157.233 Q9068.2454,6157.233 9068.8965,6157.6399 Q9069.0104,6157.3958 9069.1081,6157.3144 Q9069.2057,6157.233 9069.3848,6157.233 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="9092.1875" y="6170.8332">MerkleCompositeDAG</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="8921.3542" x2="9343.2292" y1="6183.5416" y2="6183.5416"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="8928.6458" y="6191.8749"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="119.7917" x="8945.3125" y="6204.3748">reg crdt.CompositeDAG</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="8921.3542" x2="9343.2292" y1="6216.0415" y2="6216.0415"/><ellipse cx="8931.7708" cy="6227.4998" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="387.5" x="8945.3125" y="6236.8747">Set(ctx context.Context, patch []byte, links []core.DAGLink) (go-cid.Cid, error)</text><ellipse cx="8931.7708" cy="6251.6664" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="202.0833" x="8945.3125" y="6261.0413">Value(ctx context.Context) ([]byte, error)</text><ellipse cx="8931.7708" cy="6275.8329" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="296.875" x="8945.3125" y="6285.2078">Merge(ctx context.Context, other core.Delta, id string) error</text><!--MD5=[cb2520a77d98552e4d3b7f8f624297dc]
class crdt.MerkleLWWRegister--><rect codeLine="494" fill="#2A9FD6" height="158.3328" id="crdt.MerkleLWWRegister" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="333.3333" x="9381.25" y="6138.5417"/><ellipse cx="9486.9792" cy="6161.0416" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M9489.1764,6157.233 Q9489.5508,6157.233 9489.6647,6157.4446 Q9489.7949,6157.6562 9489.7949,6158.0468 L9489.7949,6159.1536 Q9489.7949,6159.9837 9489.1764,6159.9837 Q9489.0788,6159.9837 9488.9974,6159.9674 Q9488.916,6159.9511 9488.8509,6159.9186 Q9488.8021,6159.886 9488.7533,6159.8372 Q9488.7044,6159.7721 9488.6719,6159.7395 Q9488.6556,6159.707 9488.623,6159.6256 Q9488.6068,6159.5442 9488.5905,6159.5279 Q9488.5905,6159.4954 9488.5742,6159.414 Q9488.5579,6159.3326 9488.5579,6159.3164 Q9488.4766,6158.942 9488.0697,6158.7141 Q9487.6628,6158.47 9487.0768,6158.47 Q9486.4909,6158.47 9486.0677,6158.7467 Q9485.6608,6159.0234 9485.6608,6159.4303 Q9485.6608,6159.8535 9486.0677,6160.0813 Q9486.4909,6160.3092 9487.028,6160.3906 Q9487.5814,6160.4557 9488.2487,6160.6347 Q9488.9323,6160.8138 9489.3229,6161.123 Q9490.0553,6161.7089 9490.0553,6162.6855 Q9490.0553,6163.6621 9489.2578,6164.2643 Q9488.4766,6164.8665 9487.1908,6164.8665 Q9486.1654,6164.8665 9485.2539,6164.3782 Q9484.9935,6164.6712 9484.7493,6164.6712 Q9484.1146,6164.6712 9484.1146,6163.8574 L9484.1146,6163.0273 Q9484.1146,6162.6204 9484.2448,6162.4088 Q9484.3913,6162.1972 9484.7331,6162.1972 Q9484.847,6162.1972 9484.9284,6162.2298 Q9485.026,6162.246 9485.0911,6162.2949 Q9485.1563,6162.3437 9485.2051,6162.3925 Q9485.2539,6162.4414 9485.2702,6162.5227 Q9485.3027,6162.5878 9485.319,6162.6367 Q9485.3353,6162.6692 9485.3516,6162.7343 Q9485.3678,6162.7832 9485.3678,6162.7994 Q9485.4655,6163.1412 9485.9701,6163.3854 Q9486.4909,6163.6132 9487.1094,6163.6132 Q9487.8092,6163.6132 9488.2813,6163.3365 Q9488.7533,6163.0598 9488.7533,6162.6692 Q9488.7533,6162.2949 9488.3789,6162.067 Q9488.0208,6161.8391 9487.5326,6161.774 Q9487.0605,6161.6927 9486.4095,6161.5462 Q9485.7747,6161.3834 9485.3841,6161.1718 Q9484.9121,6160.8951 9484.6354,6160.4394 Q9484.3587,6159.9674 9484.3587,6159.4303 Q9484.3587,6158.4863 9485.1237,6157.8678 Q9485.9049,6157.233 9487.0768,6157.233 Q9488.0371,6157.233 9488.6882,6157.6399 Q9488.8021,6157.3958 9488.8997,6157.3144 Q9488.9974,6157.233 9489.1764,6157.233 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="9511.9792" y="6170.8332">MerkleLWWRegister</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="9382.2917" x2="9713.5417" y1="6183.5416" y2="6183.5416"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="9389.5833" y="6191.8749"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="9406.25" y="6204.3748">reg crdt.LWWRegister</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="9382.2917" x2="9713.5417" y1="6216.0415" y2="6216.0415"/><ellipse cx="9392.7083" cy="6227.4998" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="277.0833" x="9406.25" y="6236.8747">Set(ctx context.Context, value []byte) (go-cid.Cid, error)</text><ellipse cx="9392.7083" cy="6251.6664" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="202.0833" x="9406.25" y="6261.0413">Value(ctx context.Context) ([]byte, error)</text><ellipse cx="9392.7083" cy="6275.8329" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="296.875" x="9406.25" y="6285.2078">Merge(ctx context.Context, other core.Delta, id string) error</text><!--MD5=[d2691381dc5d8b038cd7d6360cc06fbf]
class crdt.baseCRDT--><rect codeLine="502" fill="#2A9FD6" height="303.3322" id="crdt.baseCRDT" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="344.7917" x="9354.6875" y="4987.5"/><ellipse cx="9489.5833" cy="5009.9999" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M9491.7806,5006.1914 Q9492.1549,5006.1914 9492.2689,5006.4029 Q9492.3991,5006.6145 9492.3991,5007.0052 L9492.3991,5008.1119 Q9492.3991,5008.942 9491.7806,5008.942 Q9491.6829,5008.942 9491.6016,5008.9257 Q9491.5202,5008.9095 9491.4551,5008.8769 Q9491.4063,5008.8443 9491.3574,5008.7955 Q9491.3086,5008.7304 9491.276,5008.6979 Q9491.2598,5008.6653 9491.2272,5008.5839 Q9491.2109,5008.5026 9491.1947,5008.4863 Q9491.1947,5008.4537 9491.1784,5008.3723 Q9491.1621,5008.291 9491.1621,5008.2747 Q9491.0807,5007.9003 9490.6738,5007.6725 Q9490.2669,5007.4283 9489.681,5007.4283 Q9489.0951,5007.4283 9488.6719,5007.705 Q9488.265,5007.9817 9488.265,5008.3886 Q9488.265,5008.8118 9488.6719,5009.0397 Q9489.0951,5009.2675 9489.6322,5009.3489 Q9490.1855,5009.414 9490.8529,5009.593 Q9491.5365,5009.7721 9491.9271,5010.0813 Q9492.6595,5010.6673 9492.6595,5011.6438 Q9492.6595,5012.6204 9491.862,5013.2226 Q9491.0807,5013.8248 9489.7949,5013.8248 Q9488.7695,5013.8248 9487.8581,5013.3365 Q9487.5977,5013.6295 9487.3535,5013.6295 Q9486.7188,5013.6295 9486.7188,5012.8157 L9486.7188,5011.9856 Q9486.7188,5011.5787 9486.849,5011.3671 Q9486.9954,5011.1555 9487.3372,5011.1555 Q9487.4512,5011.1555 9487.5326,5011.1881 Q9487.6302,5011.2044 9487.6953,5011.2532 Q9487.7604,5011.302 9487.8092,5011.3509 Q9487.8581,5011.3997 9487.8743,5011.4811 Q9487.9069,5011.5462 9487.9232,5011.595 Q9487.9395,5011.6276 9487.9557,5011.6927 Q9487.972,5011.7415 9487.972,5011.7578 Q9488.0697,5012.0996 9488.5742,5012.3437 Q9489.0951,5012.5716 9489.7135,5012.5716 Q9490.4134,5012.5716 9490.8854,5012.2949 Q9491.3574,5012.0182 9491.3574,5011.6276 Q9491.3574,5011.2532 9490.9831,5011.0253 Q9490.625,5010.7975 9490.1367,5010.7324 Q9489.6647,5010.651 9489.0137,5010.5045 Q9488.3789,5010.3417 9487.9883,5010.1302 Q9487.5163,5009.8535 9487.2396,5009.3977 Q9486.9629,5008.9257 9486.9629,5008.3886 Q9486.9629,5007.4446 9487.7279,5006.8261 Q9488.5091,5006.1914 9489.681,5006.1914 Q9490.6413,5006.1914 9491.2923,5006.5983 Q9491.4063,5006.3541 9491.5039,5006.2727 Q9491.6016,5006.1914 9491.7806,5006.1914 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="56.25" x="9514.5833" y="5019.7916">baseCRDT</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="9355.7292" x2="9698.4375" y1="5032.4999" y2="5032.4999"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="9363.0208" y="5040.8332"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="137.5" x="9379.6875" y="5053.3331">store core.DSReaderWriter</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="9363.0208" y="5064.9998"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="146.875" x="9379.6875" y="5077.4997">namespace go-datastore.Key</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="9363.0208" y="5089.1664"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="66.6667" x="9379.6875" y="5101.6663">keysNs string</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="9363.0208" y="5113.3329"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="83.3333" x="9379.6875" y="5125.8328">valueSuffix string</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="9363.0208" y="5137.4995"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="90.625" x="9379.6875" y="5149.9994">prioritySuffix string</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="9355.7292" x2="9698.4375" y1="5161.6661" y2="5161.6661"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="9363.0208" y="5169.9994"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="190.625" x="9379.6875" y="5182.4993">keyPrefix(key string) go-datastore.Key</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="9363.0208" y="5194.1659"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="189.5833" x="9379.6875" y="5206.6659">valueKey(key string) go-datastore.Key</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="9363.0208" y="5218.3325"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="196.875" x="9379.6875" y="5230.8324">priorityKey(key string) go-datastore.Key</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="9363.0208" y="5242.4991"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="308.3333" x="9379.6875" y="5254.999">setPriority(ctx context.Context, key string, priority uint64) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="9363.0208" y="5266.6656"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="281.25" x="9379.6875" y="5279.1656">getPriority(ctx context.Context, key string) (uint64, error)</text><!--MD5=[10bcd2d6451157b89b852c83a4967a41]
class crdt.baseMerkleCRDT--><rect codeLine="516" fill="#2A9FD6" height="206.6659" id="crdt.baseMerkleCRDT" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="355.2083" x="8963.0208" y="5035.9375"/><ellipse cx="9085.9375" cy="5058.4374" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M9088.1348,5054.6289 Q9088.5091,5054.6289 9088.623,5054.8404 Q9088.7533,5055.052 9088.7533,5055.4427 L9088.7533,5056.5494 Q9088.7533,5057.3795 9088.1348,5057.3795 Q9088.0371,5057.3795 9087.9557,5057.3632 Q9087.8743,5057.347 9087.8092,5057.3144 Q9087.7604,5057.2818 9087.7116,5057.233 Q9087.6628,5057.1679 9087.6302,5057.1354 Q9087.6139,5057.1028 9087.5814,5057.0214 Q9087.5651,5056.9401 9087.5488,5056.9238 Q9087.5488,5056.8912 9087.5326,5056.8098 Q9087.5163,5056.7285 9087.5163,5056.7122 Q9087.4349,5056.3378 9087.028,5056.11 Q9086.6211,5055.8658 9086.0352,5055.8658 Q9085.4492,5055.8658 9085.026,5056.1425 Q9084.6191,5056.4192 9084.6191,5056.8261 Q9084.6191,5057.2493 9085.026,5057.4772 Q9085.4492,5057.705 9085.9863,5057.7864 Q9086.5397,5057.8515 9087.207,5058.0305 Q9087.8906,5058.2096 9088.2813,5058.5188 Q9089.0137,5059.1048 9089.0137,5060.0813 Q9089.0137,5061.0579 9088.2161,5061.6601 Q9087.4349,5062.2623 9086.1491,5062.2623 Q9085.1237,5062.2623 9084.2122,5061.774 Q9083.9518,5062.067 9083.7077,5062.067 Q9083.0729,5062.067 9083.0729,5061.2532 L9083.0729,5060.4231 Q9083.0729,5060.0162 9083.2031,5059.8046 Q9083.3496,5059.593 9083.6914,5059.593 Q9083.8053,5059.593 9083.8867,5059.6256 Q9083.9844,5059.6419 9084.0495,5059.6907 Q9084.1146,5059.7395 9084.1634,5059.7884 Q9084.2122,5059.8372 9084.2285,5059.9186 Q9084.2611,5059.9837 9084.2773,5060.0325 Q9084.2936,5060.0651 9084.3099,5060.1302 Q9084.3262,5060.179 9084.3262,5060.1953 Q9084.4238,5060.5371 9084.9284,5060.7812 Q9085.4492,5061.0091 9086.0677,5061.0091 Q9086.7676,5061.0091 9087.2396,5060.7324 Q9087.7116,5060.4557 9087.7116,5060.0651 Q9087.7116,5059.6907 9087.3372,5059.4628 Q9086.9792,5059.235 9086.4909,5059.1699 Q9086.0189,5059.0885 9085.3678,5058.942 Q9084.7331,5058.7792 9084.3424,5058.5677 Q9083.8704,5058.291 9083.5938,5057.8352 Q9083.3171,5057.3632 9083.3171,5056.8261 Q9083.3171,5055.8821 9084.082,5055.2636 Q9084.8633,5054.6289 9086.0352,5054.6289 Q9086.9954,5054.6289 9087.6465,5055.0358 Q9087.7604,5054.7916 9087.8581,5054.7102 Q9087.9557,5054.6289 9088.1348,5054.6289 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="90.625" x="9110.9375" y="5068.2291">baseMerkleCRDT</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="8964.0625" x2="9317.1875" y1="5080.9374" y2="5080.9374"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="8971.3542" y="5089.2707"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="119.7917" x="8988.0208" y="5101.7706">clock core.MerkleClock</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="8971.3542" y="5113.4373"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="126.0417" x="8988.0208" y="5125.9372">crdt core.ReplicatedData</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="8964.0625" x2="9317.1875" y1="5137.6039" y2="5137.6039"/><ellipse cx="8974.4792" cy="5149.0622" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="296.875" x="8988.0208" y="5158.4371">Merge(ctx context.Context, other core.Delta, id string) error</text><ellipse cx="8974.4792" cy="5173.2288" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="296.875" x="8988.0208" y="5182.6037">DeltaDecode(node go-ipld-format.Node) (core.Delta, error)</text><ellipse cx="8974.4792" cy="5197.3953" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="202.0833" x="8988.0208" y="5206.7702">Value(ctx context.Context) ([]byte, error)</text><ellipse cx="8974.4792" cy="5221.5619" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="318.75" x="8988.0208" y="5230.9368">Publish(ctx context.Context, delta core.Delta) (go-cid.Cid, error)</text><!--MD5=[9eafa35cf9ce6da2eb8990c73cc86540]
class crdt.MerkleCRDTFactory--><rect codeLine="526" fill="#2A9FD6" height="61.6666" id="crdt.MerkleCRDTFactory" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="146.875" x="8729.6875" y="6186.9792"/><ellipse cx="8744.2708" cy="6209.4791" fill="#FF7700" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M8745.5566,6212.3925 Q8746.3704,6212.3925 8746.3704,6213.0273 Q8746.3704,6213.6458 8745.5566,6213.6458 L8742.6595,6213.6458 Q8741.8457,6213.6458 8741.8457,6213.0273 Q8741.8457,6212.6529 8742.0573,6212.5227 Q8742.2689,6212.3925 8742.6595,6212.3925 L8743.4733,6212.3925 L8743.4733,6207.6074 L8742.1387,6207.6074 L8742.1387,6208.763 Q8742.1387,6209.593 8741.5039,6209.593 Q8740.8854,6209.593 8740.8854,6208.763 L8740.8854,6206.3541 L8747.347,6206.3541 L8747.347,6208.763 Q8747.347,6209.1699 8747.2005,6209.3815 Q8747.0703,6209.593 8746.7122,6209.593 Q8746.0938,6209.593 8746.0938,6208.763 L8746.0938,6207.6074 L8744.7266,6207.6074 L8744.7266,6212.3925 L8745.5566,6212.3925 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="8763.0208" y="6219.2707">MerkleCRDTFactory</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="8730.7292" x2="8875.5208" y1="6231.9791" y2="6231.9791"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="8730.7292" x2="8875.5208" y1="6240.3124" y2="6240.3124"/><!--MD5=[6d45466c5348bc89b17e1de20050c191]
class crdt.MerkleCRDTInitFn--><rect codeLine="528" fill="#2A9FD6" height="61.6666" id="crdt.MerkleCRDTInitFn" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="136.4583" x="8461.9792" y="6186.9792"/><ellipse cx="8476.5625" cy="6209.4791" fill="#FF7700" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M8477.8483,6212.3925 Q8478.6621,6212.3925 8478.6621,6213.0273 Q8478.6621,6213.6458 8477.8483,6213.6458 L8474.9512,6213.6458 Q8474.1374,6213.6458 8474.1374,6213.0273 Q8474.1374,6212.6529 8474.349,6212.5227 Q8474.5605,6212.3925 8474.9512,6212.3925 L8475.765,6212.3925 L8475.765,6207.6074 L8474.4303,6207.6074 L8474.4303,6208.763 Q8474.4303,6209.593 8473.7956,6209.593 Q8473.1771,6209.593 8473.1771,6208.763 L8473.1771,6206.3541 L8479.6387,6206.3541 L8479.6387,6208.763 Q8479.6387,6209.1699 8479.4922,6209.3815 Q8479.362,6209.593 8479.0039,6209.593 Q8478.3854,6209.593 8478.3854,6208.763 L8478.3854,6207.6074 L8477.0182,6207.6074 L8477.0182,6212.3925 L8477.8483,6212.3925 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="8495.3125" y="6219.2707">MerkleCRDTInitFn</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="8463.0208" x2="8597.3958" y1="6231.9791" y2="6231.9791"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="8463.0208" x2="8597.3958" y1="6240.3124" y2="6240.3124"/><!--MD5=[4ce9ad968d6bc8f990c190a927c5d6aa]
class crdt.fontcolorbluefuncfontcoreMultiStoreMerkleCRDTInitFn--><rect codeLine="530" fill="#2A9FD6" height="51.2499" id="crdt.fontcolorbluefuncfontcoreMultiStoreMerkleCRDTInitFn" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="245.8333" x="8680.2083" y="5113.5417"/><ellipse cx="8694.7917" cy="5130.8333" fill="#777777" rx="10.4167" ry="10.4167" style="stroke:#444444;stroke-width:1.0416666666666667;"/><path d="M8695.2637,5133.4049 Q8695.8659,5133.4049 8696.2728,5133.2584 Q8696.696,5133.1119 8696.8587,5132.9492 Q8697.0378,5132.7864 8697.2168,5132.6399 Q8697.4121,5132.4934 8697.5749,5132.4934 Q8697.819,5132.4934 8697.998,5132.6888 Q8698.1934,5132.8678 8698.1934,5133.1119 Q8698.1934,5133.649 8697.3307,5134.1536 Q8696.4844,5134.6582 8695.2311,5134.6582 Q8693.6523,5134.6582 8692.5944,5133.7304 Q8691.5527,5132.7864 8691.5527,5131.3704 L8691.5527,5130.5403 Q8691.5527,5129.0429 8692.5293,5128.0338 Q8693.5059,5127.0247 8694.9544,5127.0247 Q8695.8333,5127.0247 8696.7285,5127.4479 L8696.8587,5127.4967 Q8697.0703,5127.1874 8697.3796,5127.1874 Q8697.7539,5127.1874 8697.8841,5127.399 Q8698.0143,5127.6106 8698.0143,5128.0175 L8698.0143,5129.0592 Q8698.0143,5129.8893 8697.3796,5129.8893 Q8697.1517,5129.8893 8697.0052,5129.7753 Q8696.875,5129.6451 8696.8424,5129.5475 Q8696.8099,5129.4335 8696.7773,5129.222 Q8696.696,5128.8476 8696.3053,5128.6197 Q8695.931,5128.3919 8695.6055,5128.3268 Q8695.2799,5128.2617 8695.0033,5128.2617 Q8694.0592,5128.2617 8693.4245,5128.9127 Q8692.806,5129.5475 8692.806,5130.5403 L8692.806,5131.3378 Q8692.806,5132.2818 8693.4733,5132.8515 Q8694.1406,5133.4049 8695.2637,5133.4049 Z " fill="#000000"/><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="8713.5417" y="5135.4166">func</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="8735.4167" y="5135.4166">(core.MultiStore) MerkleCRDTInitFn</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="8681.25" x2="8925" y1="5148.1249" y2="5148.1249"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="8681.25" x2="8925" y1="5156.4582" y2="5156.4582"/><!--MD5=[e97a9fdf9132de2003518fd0201e7527]
class crdt.fontcolorbluefuncfontgodatastoreKeyMerkleCRDT--><rect codeLine="533" fill="#2A9FD6" height="51.2499" id="crdt.fontcolorbluefuncfontgodatastoreKeyMerkleCRDT" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="227.0833" x="8416.6667" y="5113.5417"/><ellipse cx="8431.25" cy="5130.8333" fill="#777777" rx="10.4167" ry="10.4167" style="stroke:#444444;stroke-width:1.0416666666666667;"/><path d="M8431.722,5133.4049 Q8432.3242,5133.4049 8432.7311,5133.2584 Q8433.1543,5133.1119 8433.3171,5132.9492 Q8433.4961,5132.7864 8433.6751,5132.6399 Q8433.8704,5132.4934 8434.0332,5132.4934 Q8434.2773,5132.4934 8434.4564,5132.6888 Q8434.6517,5132.8678 8434.6517,5133.1119 Q8434.6517,5133.649 8433.7891,5134.1536 Q8432.9427,5134.6582 8431.6895,5134.6582 Q8430.1107,5134.6582 8429.0527,5133.7304 Q8428.0111,5132.7864 8428.0111,5131.3704 L8428.0111,5130.5403 Q8428.0111,5129.0429 8428.9876,5128.0338 Q8429.9642,5127.0247 8431.4128,5127.0247 Q8432.2917,5127.0247 8433.1868,5127.4479 L8433.3171,5127.4967 Q8433.5286,5127.1874 8433.8379,5127.1874 Q8434.2122,5127.1874 8434.3424,5127.399 Q8434.4727,5127.6106 8434.4727,5128.0175 L8434.4727,5129.0592 Q8434.4727,5129.8893 8433.8379,5129.8893 Q8433.61,5129.8893 8433.4635,5129.7753 Q8433.3333,5129.6451 8433.3008,5129.5475 Q8433.2682,5129.4335 8433.2357,5129.222 Q8433.1543,5128.8476 8432.7637,5128.6197 Q8432.3893,5128.3919 8432.0638,5128.3268 Q8431.7383,5128.2617 8431.4616,5128.2617 Q8430.5176,5128.2617 8429.8828,5128.9127 Q8429.2643,5129.5475 8429.2643,5130.5403 L8429.2643,5131.3378 Q8429.2643,5132.2818 8429.9316,5132.8515 Q8430.599,5133.4049 8431.722,5133.4049 Z " fill="#000000"/><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="8450" y="5135.4166">func</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="163.5417" x="8471.875" y="5135.4166">(go-datastore.Key) MerkleCRDT</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="8417.7083" x2="8642.7083" y1="5148.1249" y2="5148.1249"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="8417.7083" x2="8642.7083" y1="5156.4582" y2="5156.4582"/><!--MD5=[c58af3cb1dc52f6568de1ede2f1d8e35]
class db.Collection--><rect codeLine="550" fill="#2A9FD6" height="1704.9929" id="db.Collection" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="734.375" x="13891.1458" y="4286.4583"/><ellipse cx="14224.4792" cy="4308.9583" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M14226.6764,4305.1497 Q14227.0508,4305.1497 14227.1647,4305.3613 Q14227.2949,4305.5729 14227.2949,4305.9635 L14227.2949,4307.0703 Q14227.2949,4307.9003 14226.6764,4307.9003 Q14226.5788,4307.9003 14226.4974,4307.8841 Q14226.416,4307.8678 14226.3509,4307.8352 Q14226.3021,4307.8027 14226.2533,4307.7539 Q14226.2044,4307.6888 14226.1719,4307.6562 Q14226.1556,4307.6236 14226.123,4307.5423 Q14226.1068,4307.4609 14226.0905,4307.4446 Q14226.0905,4307.4121 14226.0742,4307.3307 Q14226.0579,4307.2493 14226.0579,4307.233 Q14225.9766,4306.8587 14225.5697,4306.6308 Q14225.1628,4306.3867 14224.5768,4306.3867 Q14223.9909,4306.3867 14223.5677,4306.6634 Q14223.1608,4306.9401 14223.1608,4307.347 Q14223.1608,4307.7701 14223.5677,4307.998 Q14223.9909,4308.2259 14224.528,4308.3072 Q14225.0814,4308.3723 14225.7487,4308.5514 Q14226.4323,4308.7304 14226.8229,4309.0397 Q14227.5553,4309.6256 14227.5553,4310.6022 Q14227.5553,4311.5787 14226.7578,4312.1809 Q14225.9766,4312.7832 14224.6908,4312.7832 Q14223.6654,4312.7832 14222.7539,4312.2949 Q14222.4935,4312.5878 14222.2493,4312.5878 Q14221.6146,4312.5878 14221.6146,4311.774 L14221.6146,4310.944 Q14221.6146,4310.5371 14221.7448,4310.3255 Q14221.8913,4310.1139 14222.2331,4310.1139 Q14222.347,4310.1139 14222.4284,4310.1464 Q14222.526,4310.1627 14222.5911,4310.2115 Q14222.6563,4310.2604 14222.7051,4310.3092 Q14222.7539,4310.358 14222.7702,4310.4394 Q14222.8027,4310.5045 14222.819,4310.5533 Q14222.8353,4310.5859 14222.8516,4310.651 Q14222.8678,4310.6998 14222.8678,4310.7161 Q14222.9655,4311.0579 14223.4701,4311.302 Q14223.9909,4311.5299 14224.6094,4311.5299 Q14225.3092,4311.5299 14225.7813,4311.2532 Q14226.2533,4310.9765 14226.2533,4310.5859 Q14226.2533,4310.2115 14225.8789,4309.9837 Q14225.5208,4309.7558 14225.0326,4309.6907 Q14224.5605,4309.6093 14223.9095,4309.4628 Q14223.2747,4309.3001 14222.8841,4309.0885 Q14222.4121,4308.8118 14222.1354,4308.3561 Q14221.8587,4307.8841 14221.8587,4307.347 Q14221.8587,4306.4029 14222.6237,4305.7845 Q14223.4049,4305.1497 14224.5768,4305.1497 Q14225.5371,4305.1497 14226.1882,4305.5566 Q14226.3021,4305.3124 14226.3997,4305.2311 Q14226.4974,4305.1497 14226.6764,4305.1497 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="48.9583" x="14249.4792" y="4318.7499">Collection</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13892.1875" x2="14624.4792" y1="4331.4582" y2="4331.4582"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4339.7916"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="35.4167" x="13916.1458" y="4352.2915">db *DB</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4363.9581"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="40.625" x="13916.1458" y="4376.458">txn *Txn</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4388.1247"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="59.375" x="13916.1458" y="4400.6246">colID uint32</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4412.2913"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="13916.1458" y="4424.7912">colIDKey core.Key</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4436.4578"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="159.375" x="13916.1458" y="4448.9577">desc base.CollectionDescription</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13892.1875" x2="14624.4792" y1="4460.6244" y2="4460.6244"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4468.9577"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="348.9583" x="13916.1458" y="4481.4576">create(ctx context.Context, txn *Txn, doc *document.Document) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4493.1243"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="351.0417" x="13916.1458" y="4505.6242">update(ctx context.Context, txn *Txn, doc *document.Document) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4517.2908"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="339.5833" x="13916.1458" y="4529.7908">save(ctx context.Context, txn *Txn, doc *document.Document) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4541.4574"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="332.2917" x="13916.1458" y="4553.9573">delete(ctx context.Context, txn *Txn, key key.DocKey) (bool, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4565.624"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="329.1667" x="13916.1458" y="4578.1239">exists(ctx context.Context, txn *Txn, key key.DocKey) (bool, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4589.7905"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="533.3333" x="13916.1458" y="4602.2905">saveDocValue(ctx context.Context, txn *Txn, key go-datastore.Key, val document.Value) (go-cid.Cid, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4613.9571"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="527.0833" x="13916.1458" y="4626.457">saveValueToMerkleCRDT(ctx context.Context, txn *Txn, key go-datastore.Key, ctype core.CType, args ...</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14443.2292" y="4626.457">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="14486.9792" y="4626.457">{}) (go-cid.Cid, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4638.1237"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="277.0833" x="13916.1458" y="4650.6236">getTxn(ctx context.Context, readonly bool) (*Txn, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4662.2902"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="240.625" x="13916.1458" y="4674.7901">discardImplicitTxn(ctx context.Context, txn *Txn)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4686.4568"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="268.75" x="13916.1458" y="4698.9567">commitImplicitTxn(ctx context.Context, txn *Txn) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4710.6234"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="362.5" x="13916.1458" y="4723.1233">getIndexDocKey(key go-datastore.Key, indexID uint32) go-datastore.Key</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4734.7899"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="323.9583" x="13916.1458" y="4747.2898">getPrimaryIndexDocKey(key go-datastore.Key) go-datastore.Key</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4758.9565"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="347.9167" x="13916.1458" y="4771.4564">getFieldKey(key go-datastore.Key, fieldName string) go-datastore.Key</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4783.1231"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="214.5833" x="13916.1458" y="4795.623">getSchemaFieldID(fieldName string) uint32</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4807.2896"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="345.8333" x="13916.1458" y="4819.7895">deleteWithKey(ctx context.Context, txn *Txn, key key.DocKey, deleter</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14265.1042" y="4819.7895">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="271.875" x="14308.8542" y="4819.7895">{}, opts ...client.DeleteOpt) (*client.DeleteResult, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4831.4562"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="362.5" x="13916.1458" y="4843.9561">deleteWithKeys(ctx context.Context, txn *Txn, keys []key.DocKey, deleter</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14281.7708" y="4843.9561">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="271.875" x="14325.5208" y="4843.9561">{}, opts ...client.DeleteOpt) (*client.DeleteResult, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4855.6227"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="311.4583" x="13916.1458" y="4868.1227">makeSelectionDeleteQuery(ctx context.Context, txn *Txn, filter</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14230.7292" y="4868.1227">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="246.875" x="14274.4792" y="4868.1227">{}, opts ...client.DeleteOpt) (planner.Query, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4879.7893"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="251.0417" x="13916.1458" y="4892.2892">deleteWithFilter(ctx context.Context, txn *Txn, filter</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14170.3125" y="4892.2892">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="48.9583" x="14214.0625" y="4892.2892">{}, deleter</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14266.1458" y="4892.2892">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="271.875" x="14309.8958" y="4892.2892">{}, opts ...client.DeleteOpt) (*client.DeleteResult, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4903.9559"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="329.1667" x="13916.1458" y="4916.4558">makeSelectDeleteLocal(filter *parser.Filter) (*parser.Select, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4928.1224"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="406.25" x="13916.1458" y="4940.6224">get(ctx context.Context, txn *Txn, key key.DocKey) (*document.Document, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4952.289"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="354.1667" x="13916.1458" y="4964.7889">updateWithKey(ctx context.Context, txn *Txn, key key.DocKey, updater</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14273.4375" y="4964.7889">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="280.2083" x="14317.1875" y="4964.7889">{}, opts ...client.UpdateOpt) (*client.UpdateResult, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="4976.4556"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="370.8333" x="13916.1458" y="4988.9555">updateWithKeys(ctx context.Context, txn *Txn, keys []key.DocKey, updater</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14290.1042" y="4988.9555">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="280.2083" x="14333.8542" y="4988.9555">{}, opts ...client.UpdateOpt) (*client.UpdateResult, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="5000.6221"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="255.2083" x="13916.1458" y="5013.122">updateWithFilter(ctx context.Context, txn *Txn, filter</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14174.4792" y="5013.122">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="14218.2292" y="5013.122">{}, updater</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14274.4792" y="5013.122">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="280.2083" x="14318.2292" y="5013.122">{}, opts ...client.UpdateOpt) (*client.UpdateResult, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="5024.7887"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="13916.1458" y="5037.2886">applyPatch(txn *Txn, doc</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="14044.2708" y="5037.2886">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="14066.1458" y="5037.2886">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14099.4792" y="5037.2886">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="14143.2292" y="5037.2886">{}, patch []</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="14195.3125" y="5037.2886">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="14217.1875" y="5037.2886">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14250.5208" y="5037.2886">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="40.625" x="14294.2708" y="5037.2886">{}) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="5048.9553"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="303.125" x="13916.1458" y="5061.4552">applyPatchOp(txn *Txn, dockey string, field string, currentVal</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14222.3958" y="5061.4552">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="58.3333" x="14266.1458" y="5061.4552">{}, patchOp</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="14327.6042" y="5061.4552">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="14349.4792" y="5061.4552">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14382.8125" y="5061.4552">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="40.625" x="14426.5625" y="5061.4552">{}) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="5073.1218"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="230.2083" x="13916.1458" y="5085.6217">applyMerge(ctx context.Context, txn *Txn, doc</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="14149.4792" y="5085.6217">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="14171.3542" y="5085.6217">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14204.6875" y="5085.6217">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="14248.4375" y="5085.6217">{}, merge</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="14298.4375" y="5085.6217">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="14320.3125" y="5085.6217">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14353.6458" y="5085.6217">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="40.625" x="14397.3958" y="5085.6217">{}) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="5097.2884"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="336.4583" x="13916.1458" y="5109.7883">applyMergePatchOp(txn *Txn, docKey string, field string, currentVal</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14255.7292" y="5109.7883">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="59.375" x="14299.4792" y="5109.7883">{}, targetVal</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14361.9792" y="5109.7883">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="40.625" x="14405.7292" y="5109.7883">{}) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="5121.455"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="315.625" x="13916.1458" y="5133.9549">makeSelectionUpdateQuery(ctx context.Context, txn *Txn, filter</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14234.8958" y="5133.9549">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="251.0417" x="14278.6458" y="5133.9549">{}, opts ...client.UpdateOpt) (planner.Query, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="5145.6215"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="333.3333" x="13916.1458" y="5158.1214">makeSelectUpdateLocal(filter *parser.Filter) (*parser.Select, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="5169.7881"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="380.2083" x="13916.1458" y="5182.288">getCollectionForPatchOpPath(txn *Txn, path string) (*Collection, bool, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13899.4792" y="5193.9546"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="207.2917" x="13916.1458" y="5206.4546">getTargetKeyForPatchPath(txn *Txn, doc</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="14126.5625" y="5206.4546">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="14148.4375" y="5206.4546">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14181.7708" y="5206.4546">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="140.625" x="14225.5208" y="5206.4546">{}, path string) (string, error)</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="13919.2708" y="5230.6211"/><ellipse cx="13902.6042" cy="5245.4128" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="200" x="13916.1458" y="5254.7877">Description() base.CollectionDescription</text><ellipse cx="13902.6042" cy="5269.5793" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="68.75" x="13916.1458" y="5278.9542">Name() string</text><ellipse cx="13902.6042" cy="5293.7459" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="178.125" x="13916.1458" y="5303.1208">Schema() base.SchemaDescription</text><ellipse cx="13902.6042" cy="5317.9125" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="13916.1458" y="5327.2874">ID() uint32</text><ellipse cx="13902.6042" cy="5342.079" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="13916.1458" y="5351.4539">Indexes() []base.IndexDescription</text><ellipse cx="13902.6042" cy="5366.2456" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="13916.1458" y="5375.6205">PrimaryIndex() base.IndexDescription</text><ellipse cx="13902.6042" cy="5390.4122" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="230.2083" x="13916.1458" y="5399.7871">Index(id uint32) (base.IndexDescription, error)</text><ellipse cx="13902.6042" cy="5414.5787" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="237.5" x="13916.1458" y="5423.9536">CreateIndex(idesc base.IndexDescription) error</text><ellipse cx="13902.6042" cy="5438.7453" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="195.8333" x="13916.1458" y="5448.1202">WithTxn(txn client.Txn) client.Collection</text><ellipse cx="13902.6042" cy="5462.9118" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="304.1667" x="13916.1458" y="5472.2868">Create(ctx context.Context, doc *document.Document) error</text><ellipse cx="13902.6042" cy="5487.0784" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="342.7083" x="13916.1458" y="5496.4533">CreateMany(ctx context.Context, docs []*document.Document) error</text><ellipse cx="13902.6042" cy="5511.245" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="306.25" x="13916.1458" y="5520.6199">Update(ctx context.Context, doc *document.Document) error</text><ellipse cx="13902.6042" cy="5535.4115" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="294.7917" x="13916.1458" y="5544.7865">Save(ctx context.Context, doc *document.Document) error</text><ellipse cx="13902.6042" cy="5559.5781" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="287.5" x="13916.1458" y="5568.953">Delete(ctx context.Context, key key.DocKey) (bool, error)</text><ellipse cx="13902.6042" cy="5583.7447" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="283.3333" x="13916.1458" y="5593.1196">Exists(ctx context.Context, key key.DocKey) (bool, error)</text><ellipse cx="13902.6042" cy="5607.9112" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="359.375" x="13916.1458" y="5617.2861">Delete2(doc *document.SimpleDocument, opts ...client.DeleteOpt) error</text><ellipse cx="13902.6042" cy="5632.0778" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="189.5833" x="13916.1458" y="5641.4527">DeleteWith(ctx context.Context, target</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14108.8542" y="5641.4527">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="48.9583" x="14152.6042" y="5641.4527">{}, deleter</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14204.6875" y="5641.4527">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="14248.4375" y="5641.4527">{}, opts ...client.DeleteOpt) error</text><ellipse cx="13902.6042" cy="5656.2444" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="206.25" x="13916.1458" y="5665.6193">DeleteWithFilter(ctx context.Context, filter</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14125.5208" y="5665.6193">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="48.9583" x="14169.2708" y="5665.6193">{}, deleter</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14221.3542" y="5665.6193">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="271.875" x="14265.1042" y="5665.6193">{}, opts ...client.DeleteOpt) (*client.DeleteResult, error)</text><ellipse cx="13902.6042" cy="5680.4109" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="301.0417" x="13916.1458" y="5689.7858">DeleteWithKey(ctx context.Context, key key.DocKey, deleter</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14220.3125" y="5689.7858">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="271.875" x="14264.0625" y="5689.7858">{}, opts ...client.DeleteOpt) (*client.DeleteResult, error)</text><ellipse cx="13902.6042" cy="5704.5775" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="317.7083" x="13916.1458" y="5713.9524">DeleteWithKeys(ctx context.Context, keys []key.DocKey, deleter</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14236.9792" y="5713.9524">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="271.875" x="14280.7292" y="5713.9524">{}, opts ...client.DeleteOpt) (*client.DeleteResult, error)</text><ellipse cx="13902.6042" cy="5728.7441" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="284.375" x="13916.1458" y="5738.119">DeleteWithDoc(doc *document.SimpleDocument, deleter</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14203.6458" y="5738.119">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="14247.3958" y="5738.119">{}, opts ...client.DeleteOpt) error</text><ellipse cx="13902.6042" cy="5752.9106" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="301.0417" x="13916.1458" y="5762.2855">DeleteWithDocs(docs []*document.SimpleDocument, deleter</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14220.3125" y="5762.2855">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="14264.0625" y="5762.2855">{}, opts ...client.DeleteOpt) error</text><ellipse cx="13902.6042" cy="5777.0772" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="361.4583" x="13916.1458" y="5786.4521">Get(ctx context.Context, key key.DocKey) (*document.Document, error)</text><ellipse cx="13902.6042" cy="5801.2437" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="334.375" x="13916.1458" y="5810.6187">Create2(doc *document.SimpleDocument, opts ...CreateOpt) error</text><ellipse cx="13902.6042" cy="5825.4103" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="367.7083" x="13916.1458" y="5834.7852">Update2(doc *document.SimpleDocument, opts ...client.UpdateOpt) error</text><ellipse cx="13902.6042" cy="5849.5769" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="193.75" x="13916.1458" y="5858.9518">UpdateWith(ctx context.Context, target</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14113.0208" y="5858.9518">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="14156.7708" y="5858.9518">{}, updater</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14213.0208" y="5858.9518">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="164.5833" x="14256.7708" y="5858.9518">{}, opts ...client.UpdateOpt) error</text><ellipse cx="13902.6042" cy="5873.7434" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="210.4167" x="13916.1458" y="5883.1184">UpdateWithFilter(ctx context.Context, filter</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14129.6875" y="5883.1184">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="14173.4375" y="5883.1184">{}, updater</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14229.6875" y="5883.1184">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="280.2083" x="14273.4375" y="5883.1184">{}, opts ...client.UpdateOpt) (*client.UpdateResult, error)</text><ellipse cx="13902.6042" cy="5897.91" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="309.375" x="13916.1458" y="5907.2849">UpdateWithKey(ctx context.Context, key key.DocKey, updater</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14228.6458" y="5907.2849">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="280.2083" x="14272.3958" y="5907.2849">{}, opts ...client.UpdateOpt) (*client.UpdateResult, error)</text><ellipse cx="13902.6042" cy="5922.0766" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="326.0417" x="13916.1458" y="5931.4515">UpdateWithKeys(ctx context.Context, keys []key.DocKey, updater</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14245.3125" y="5931.4515">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="280.2083" x="14289.0625" y="5931.4515">{}, opts ...client.UpdateOpt) (*client.UpdateResult, error)</text><ellipse cx="13902.6042" cy="5946.2431" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="292.7083" x="13916.1458" y="5955.618">UpdateWithDoc(doc *document.SimpleDocument, updater</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14211.9792" y="5955.618">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="164.5833" x="14255.7292" y="5955.618">{}, opts ...client.UpdateOpt) error</text><ellipse cx="13902.6042" cy="5970.4097" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="309.375" x="13916.1458" y="5979.7846">UpdateWithDocs(docs []*document.SimpleDocument, updater</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14228.6458" y="5979.7846">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="164.5833" x="14272.3958" y="5979.7846">{}, opts ...client.UpdateOpt) error</text><!--MD5=[8ba6de7526a191edf8626eba0547f0bf]
class db.CreateOpt--><rect codeLine="622" fill="#2A9FD6" height="61.6666" id="db.CreateOpt" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="94.7917" x="13476.5625" y="5108.3333"/><ellipse cx="13491.1458" cy="5130.8333" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M13493.3431,5127.0247 Q13493.7174,5127.0247 13493.8314,5127.2363 Q13493.9616,5127.4479 13493.9616,5127.8385 L13493.9616,5128.9453 Q13493.9616,5129.7753 13493.3431,5129.7753 Q13493.2454,5129.7753 13493.1641,5129.7591 Q13493.0827,5129.7428 13493.0176,5129.7102 Q13492.9688,5129.6777 13492.9199,5129.6289 Q13492.8711,5129.5638 13492.8385,5129.5312 Q13492.8223,5129.4986 13492.7897,5129.4173 Q13492.7734,5129.3359 13492.7572,5129.3196 Q13492.7572,5129.2871 13492.7409,5129.2057 Q13492.7246,5129.1243 13492.7246,5129.108 Q13492.6432,5128.7337 13492.2363,5128.5058 Q13491.8294,5128.2617 13491.2435,5128.2617 Q13490.6576,5128.2617 13490.2344,5128.5384 Q13489.8275,5128.8151 13489.8275,5129.222 Q13489.8275,5129.6451 13490.2344,5129.873 Q13490.6576,5130.1009 13491.1947,5130.1822 Q13491.748,5130.2473 13492.4154,5130.4264 Q13493.099,5130.6054 13493.4896,5130.9147 Q13494.222,5131.5006 13494.222,5132.4772 Q13494.222,5133.4537 13493.4245,5134.0559 Q13492.6432,5134.6582 13491.3574,5134.6582 Q13490.332,5134.6582 13489.4206,5134.1699 Q13489.1602,5134.4628 13488.916,5134.4628 Q13488.2813,5134.4628 13488.2813,5133.649 L13488.2813,5132.819 Q13488.2813,5132.4121 13488.4115,5132.2005 Q13488.5579,5131.9889 13488.8997,5131.9889 Q13489.0137,5131.9889 13489.0951,5132.0214 Q13489.1927,5132.0377 13489.2578,5132.0865 Q13489.3229,5132.1354 13489.3717,5132.1842 Q13489.4206,5132.233 13489.4368,5132.3144 Q13489.4694,5132.3795 13489.4857,5132.4283 Q13489.502,5132.4609 13489.5182,5132.526 Q13489.5345,5132.5748 13489.5345,5132.5911 Q13489.6322,5132.9329 13490.1367,5133.177 Q13490.6576,5133.4049 13491.276,5133.4049 Q13491.9759,5133.4049 13492.4479,5133.1282 Q13492.9199,5132.8515 13492.9199,5132.4609 Q13492.9199,5132.0865 13492.5456,5131.8587 Q13492.1875,5131.6308 13491.6992,5131.5657 Q13491.2272,5131.4843 13490.5762,5131.3378 Q13489.9414,5131.1751 13489.5508,5130.9635 Q13489.0788,5130.6868 13488.8021,5130.2311 Q13488.5254,5129.7591 13488.5254,5129.222 Q13488.5254,5128.2779 13489.2904,5127.6595 Q13490.0716,5127.0247 13491.2435,5127.0247 Q13492.2038,5127.0247 13492.8548,5127.4316 Q13492.9688,5127.1874 13493.0664,5127.1061 Q13493.1641,5127.0247 13493.3431,5127.0247 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="13509.8958" y="5140.6249">CreateOpt</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13477.6042" x2="13570.3125" y1="5153.3332" y2="5153.3332"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13477.6042" x2="13570.3125" y1="5161.6666" y2="5161.6666"/><!--MD5=[6a453230fcd59973f0edb6b380b674aa]
class db.DB--><rect codeLine="624" fill="#2A9FD6" height="931.6629" id="db.DB" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="510.4167" x="14662.5" y="4673.4375"/><ellipse cx="14900.5208" cy="4695.9374" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M14902.7181,4692.1289 Q14903.0924,4692.1289 14903.2064,4692.3404 Q14903.3366,4692.552 14903.3366,4692.9427 L14903.3366,4694.0494 Q14903.3366,4694.8795 14902.7181,4694.8795 Q14902.6204,4694.8795 14902.5391,4694.8632 Q14902.4577,4694.847 14902.3926,4694.8144 Q14902.3438,4694.7818 14902.2949,4694.733 Q14902.2461,4694.6679 14902.2135,4694.6354 Q14902.1973,4694.6028 14902.1647,4694.5214 Q14902.1484,4694.4401 14902.1322,4694.4238 Q14902.1322,4694.3912 14902.1159,4694.3098 Q14902.0996,4694.2285 14902.0996,4694.2122 Q14902.0182,4693.8378 14901.6113,4693.61 Q14901.2044,4693.3658 14900.6185,4693.3658 Q14900.0326,4693.3658 14899.6094,4693.6425 Q14899.2025,4693.9192 14899.2025,4694.3261 Q14899.2025,4694.7493 14899.6094,4694.9772 Q14900.0326,4695.205 14900.5697,4695.2864 Q14901.123,4695.3515 14901.7904,4695.5305 Q14902.474,4695.7096 14902.8646,4696.0188 Q14903.597,4696.6048 14903.597,4697.5813 Q14903.597,4698.5579 14902.7995,4699.1601 Q14902.0182,4699.7623 14900.7324,4699.7623 Q14899.707,4699.7623 14898.7956,4699.274 Q14898.5352,4699.567 14898.291,4699.567 Q14897.6563,4699.567 14897.6563,4698.7532 L14897.6563,4697.9231 Q14897.6563,4697.5162 14897.7865,4697.3046 Q14897.9329,4697.093 14898.2747,4697.093 Q14898.3887,4697.093 14898.4701,4697.1256 Q14898.5677,4697.1419 14898.6328,4697.1907 Q14898.6979,4697.2395 14898.7467,4697.2884 Q14898.7956,4697.3372 14898.8118,4697.4186 Q14898.8444,4697.4837 14898.8607,4697.5325 Q14898.877,4697.5651 14898.8932,4697.6302 Q14898.9095,4697.679 14898.9095,4697.6953 Q14899.0072,4698.0371 14899.5117,4698.2812 Q14900.0326,4698.5091 14900.651,4698.5091 Q14901.3509,4698.5091 14901.8229,4698.2324 Q14902.2949,4697.9557 14902.2949,4697.5651 Q14902.2949,4697.1907 14901.9206,4696.9628 Q14901.5625,4696.735 14901.0742,4696.6699 Q14900.6022,4696.5885 14899.9512,4696.442 Q14899.3164,4696.2792 14898.9258,4696.0677 Q14898.4538,4695.791 14898.1771,4695.3352 Q14897.9004,4694.8632 14897.9004,4694.3261 Q14897.9004,4693.3821 14898.6654,4692.7636 Q14899.4466,4692.1289 14900.6185,4692.1289 Q14901.5788,4692.1289 14902.2298,4692.5358 Q14902.3438,4692.2916 14902.4414,4692.2102 Q14902.5391,4692.1289 14902.7181,4692.1289 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="15.625" x="14925.5208" y="4705.7291">DB</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14663.5417" x2="15171.875" y1="4718.4374" y2="4718.4374"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="4726.7707"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="14687.5" y="4739.2706">glock sync.RWMutex</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="4750.9373"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="158.3333" x="14687.5" y="4763.4372">rootstore go-datastore.Batching</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="4775.1039"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="171.875" x="14687.5" y="4787.6038">systemstore core.DSReaderWriter</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="4799.2704"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="223.9583" x="14687.5" y="4811.7703">ssKeyTransform keytransform.KeyTransform</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="4823.437"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="159.375" x="14687.5" y="4835.9369">datastore core.DSReaderWriter</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="4847.6036"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="225" x="14687.5" y="4860.1035">dsKeyTransform keytransform.KeyTransform</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="4871.7701"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="162.5" x="14687.5" y="4884.27">headstore core.DSReaderWriter</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="4895.9367"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="225" x="14687.5" y="4908.4366">hsKeyTransform keytransform.KeyTransform</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="4920.1032"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="14687.5" y="4932.6032">dagstore core.DAGStore</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="4944.2698"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="232.2917" x="14687.5" y="4956.7697">dagKeyTransform keytransform.KeyTransform</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="4968.4364"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="127.0833" x="14687.5" y="4980.9363">crdtFactory *crdt.Factory</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="4992.6029"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="176.0417" x="14687.5" y="5005.1029">schema *schema.SchemaManager</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="5016.7695"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="196.875" x="14687.5" y="5029.2694">queryExecutor *planner.QueryExecutor</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="5040.9361"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="67.7083" x="14687.5" y="5053.436">initialized bool</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="5065.1026"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="113.5417" x="14687.5" y="5077.6025">log v2.StandardLogger</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="5089.2692"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="35.4167" x="14687.5" y="5101.7691">options</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="14726.0417" y="5101.7691">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="14769.7917" y="5101.7691">{}</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="14663.5417" x2="15171.875" y1="5113.4358" y2="5113.4358"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="5121.7691"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="333.3333" x="14687.5" y="5134.269">newCollection(desc base.CollectionDescription) (*Collection, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="5145.9357"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="175" x="14687.5" y="5158.4356">printDebugDB(ctx context.Context)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="5170.1022"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="194.7917" x="14687.5" y="5182.6021">loadSchema(ctx context.Context) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="5194.2688"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="313.5417" x="14687.5" y="5206.7687">saveSchema(ctx context.Context, astdoc *ast.Document) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="5218.4353"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="320.8333" x="14687.5" y="5230.9353">getSequence(ctx context.Context, key string) (*sequence, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="14670.8333" y="5242.6019"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="282.2917" x="14687.5" y="5255.1018">newTxn(ctx context.Context, readonly bool) (*Txn, error)</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="14690.625" y="5279.2684"/><ellipse cx="14673.9583" cy="5294.06" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="107.2917" x="14687.5" y="5303.435">Listen(address string)</text><ellipse cx="14673.9583" cy="5318.2266" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="370.8333" x="14687.5" y="5327.6015">GetBlock(ctx context.Context, c go-cid.Cid) (go-block-format.Block, error)</text><ellipse cx="14673.9583" cy="5342.3932" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="473.9583" x="14687.5" y="5351.7681">CreateCollection(ctx context.Context, desc base.CollectionDescription) (client.Collection, error)</text><ellipse cx="14673.9583" cy="5366.5597" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="356.25" x="14687.5" y="5375.9346">GetCollection(ctx context.Context, name string) (client.Collection, error)</text><ellipse cx="14673.9583" cy="5390.7263" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="156.25" x="14687.5" y="5400.1012">Start(ctx context.Context) error</text><ellipse cx="14673.9583" cy="5414.8929" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="14687.5" y="5424.2678">Initialize(ctx context.Context) error</text><ellipse cx="14673.9583" cy="5439.0594" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="157.2917" x="14687.5" y="5448.4343">PrintDump(ctx context.Context)</text><ellipse cx="14673.9583" cy="5463.226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="14687.5" y="5472.6009">Close()</text><ellipse cx="14673.9583" cy="5487.3926" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="323.9583" x="14687.5" y="5496.7675">ExecQuery(ctx context.Context, query string) *client.QueryResult</text><ellipse cx="14673.9583" cy="5511.5591" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="255.2083" x="14687.5" y="5520.934">ExecIntrospection(query string) *client.QueryResult</text><ellipse cx="14673.9583" cy="5535.7257" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="269.7917" x="14687.5" y="5545.1006">AddSchema(ctx context.Context, schema string) error</text><ellipse cx="14673.9583" cy="5559.8922" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="231.25" x="14687.5" y="5569.2672">SchemaManager() *schema.SchemaManager</text><ellipse cx="14673.9583" cy="5584.0588" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="284.375" x="14687.5" y="5593.4337">NewTxn(ctx context.Context, readonly bool) (*Txn, error)</text><!--MD5=[b3178e712cfb85d2d51a5c72d02981fd]
class db.DeleteOpt--><rect codeLine="664" fill="#2A9FD6" height="61.6666" id="db.DeleteOpt" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="92.7083" x="13607.8125" y="5108.3333"/><ellipse cx="13622.3958" cy="5130.8333" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M13624.5931,5127.0247 Q13624.9674,5127.0247 13625.0814,5127.2363 Q13625.2116,5127.4479 13625.2116,5127.8385 L13625.2116,5128.9453 Q13625.2116,5129.7753 13624.5931,5129.7753 Q13624.4954,5129.7753 13624.4141,5129.7591 Q13624.3327,5129.7428 13624.2676,5129.7102 Q13624.2188,5129.6777 13624.1699,5129.6289 Q13624.1211,5129.5638 13624.0885,5129.5312 Q13624.0723,5129.4986 13624.0397,5129.4173 Q13624.0234,5129.3359 13624.0072,5129.3196 Q13624.0072,5129.2871 13623.9909,5129.2057 Q13623.9746,5129.1243 13623.9746,5129.108 Q13623.8932,5128.7337 13623.4863,5128.5058 Q13623.0794,5128.2617 13622.4935,5128.2617 Q13621.9076,5128.2617 13621.4844,5128.5384 Q13621.0775,5128.8151 13621.0775,5129.222 Q13621.0775,5129.6451 13621.4844,5129.873 Q13621.9076,5130.1009 13622.4447,5130.1822 Q13622.998,5130.2473 13623.6654,5130.4264 Q13624.349,5130.6054 13624.7396,5130.9147 Q13625.472,5131.5006 13625.472,5132.4772 Q13625.472,5133.4537 13624.6745,5134.0559 Q13623.8932,5134.6582 13622.6074,5134.6582 Q13621.582,5134.6582 13620.6706,5134.1699 Q13620.4102,5134.4628 13620.166,5134.4628 Q13619.5313,5134.4628 13619.5313,5133.649 L13619.5313,5132.819 Q13619.5313,5132.4121 13619.6615,5132.2005 Q13619.8079,5131.9889 13620.1497,5131.9889 Q13620.2637,5131.9889 13620.3451,5132.0214 Q13620.4427,5132.0377 13620.5078,5132.0865 Q13620.5729,5132.1354 13620.6217,5132.1842 Q13620.6706,5132.233 13620.6868,5132.3144 Q13620.7194,5132.3795 13620.7357,5132.4283 Q13620.752,5132.4609 13620.7682,5132.526 Q13620.7845,5132.5748 13620.7845,5132.5911 Q13620.8822,5132.9329 13621.3867,5133.177 Q13621.9076,5133.4049 13622.526,5133.4049 Q13623.2259,5133.4049 13623.6979,5133.1282 Q13624.1699,5132.8515 13624.1699,5132.4609 Q13624.1699,5132.0865 13623.7956,5131.8587 Q13623.4375,5131.6308 13622.9492,5131.5657 Q13622.4772,5131.4843 13621.8262,5131.3378 Q13621.1914,5131.1751 13620.8008,5130.9635 Q13620.3288,5130.6868 13620.0521,5130.2311 Q13619.7754,5129.7591 13619.7754,5129.222 Q13619.7754,5128.2779 13620.5404,5127.6595 Q13621.3216,5127.0247 13622.4935,5127.0247 Q13623.4538,5127.0247 13624.1048,5127.4316 Q13624.2188,5127.1874 13624.3164,5127.1061 Q13624.4141,5127.0247 13624.5931,5127.0247 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="13641.1458" y="5140.6249">DeleteOpt</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13608.8542" x2="13699.4792" y1="5153.3332" y2="5153.3332"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13608.8542" x2="13699.4792" y1="5161.6666" y2="5161.6666"/><!--MD5=[93c0b3dab9279db18247e4703c4a867d]
class db.DeleteResult--><rect codeLine="666" fill="#2A9FD6" height="109.9997" id="db.DeleteResult" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="117.7083" x="13736.9792" y="5083.8542"/><ellipse cx="13757.1875" cy="5106.3541" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M13759.3848,5102.5455 Q13759.7591,5102.5455 13759.873,5102.7571 Q13760.0033,5102.9687 13760.0033,5103.3593 L13760.0033,5104.4661 Q13760.0033,5105.2962 13759.3848,5105.2962 Q13759.2871,5105.2962 13759.2057,5105.2799 Q13759.1243,5105.2636 13759.0592,5105.2311 Q13759.0104,5105.1985 13758.9616,5105.1497 Q13758.9128,5105.0846 13758.8802,5105.052 Q13758.8639,5105.0195 13758.8314,5104.9381 Q13758.8151,5104.8567 13758.7988,5104.8404 Q13758.7988,5104.8079 13758.7826,5104.7265 Q13758.7663,5104.6451 13758.7663,5104.6289 Q13758.6849,5104.2545 13758.278,5104.0266 Q13757.8711,5103.7825 13757.2852,5103.7825 Q13756.6992,5103.7825 13756.276,5104.0592 Q13755.8691,5104.3359 13755.8691,5104.7428 Q13755.8691,5105.166 13756.276,5105.3938 Q13756.6992,5105.6217 13757.2363,5105.7031 Q13757.7897,5105.7682 13758.457,5105.9472 Q13759.1406,5106.1263 13759.5313,5106.4355 Q13760.2637,5107.0214 13760.2637,5107.998 Q13760.2637,5108.9746 13759.4661,5109.5768 Q13758.6849,5110.179 13757.3991,5110.179 Q13756.3737,5110.179 13755.4622,5109.6907 Q13755.2018,5109.9837 13754.9577,5109.9837 Q13754.3229,5109.9837 13754.3229,5109.1699 L13754.3229,5108.3398 Q13754.3229,5107.9329 13754.4531,5107.7213 Q13754.5996,5107.5097 13754.9414,5107.5097 Q13755.0553,5107.5097 13755.1367,5107.5423 Q13755.2344,5107.5585 13755.2995,5107.6074 Q13755.3646,5107.6562 13755.4134,5107.705 Q13755.4622,5107.7539 13755.4785,5107.8352 Q13755.5111,5107.9003 13755.5273,5107.9492 Q13755.5436,5107.9817 13755.5599,5108.0468 Q13755.5762,5108.0957 13755.5762,5108.1119 Q13755.6738,5108.4537 13756.1784,5108.6979 Q13756.6992,5108.9257 13757.3177,5108.9257 Q13758.0176,5108.9257 13758.4896,5108.649 Q13758.9616,5108.3723 13758.9616,5107.9817 Q13758.9616,5107.6074 13758.5872,5107.3795 Q13758.2292,5107.1516 13757.7409,5107.0865 Q13757.2689,5107.0052 13756.6178,5106.8587 Q13755.9831,5106.6959 13755.5924,5106.4843 Q13755.1204,5106.2076 13754.8438,5105.7519 Q13754.5671,5105.2799 13754.5671,5104.7428 Q13754.5671,5103.7988 13755.332,5103.1803 Q13756.1133,5102.5455 13757.2852,5102.5455 Q13758.2454,5102.5455 13758.8965,5102.9524 Q13759.0104,5102.7083 13759.1081,5102.6269 Q13759.2057,5102.5455 13759.3848,5102.5455 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="63.5417" x="13777.1875" y="5116.1457">DeleteResult</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13738.0208" x2="13853.6458" y1="5128.8541" y2="5128.8541"/><ellipse cx="13748.4375" cy="5140.3124" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="13761.9792" y="5149.6873">Count int64</text><ellipse cx="13748.4375" cy="5164.479" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="13761.9792" y="5173.8539">DocKeys []string</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13738.0208" x2="13853.6458" y1="5185.5205" y2="5185.5205"/><!--MD5=[11ab86c62c70e71f12e239a134ed21c3]
class db.Txn--><rect codeLine="671" fill="#2A9FD6" height="279.1656" id="db.Txn" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="218.75" x="12660.4167" y="4999.4792"/><ellipse cx="12751.0417" cy="5021.9791" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M12753.2389,5018.1705 Q12753.6133,5018.1705 12753.7272,5018.3821 Q12753.8574,5018.5937 12753.8574,5018.9843 L12753.8574,5020.0911 Q12753.8574,5020.9212 12753.2389,5020.9212 Q12753.1413,5020.9212 12753.0599,5020.9049 Q12752.9785,5020.8886 12752.9134,5020.8561 Q12752.8646,5020.8235 12752.8158,5020.7747 Q12752.7669,5020.7096 12752.7344,5020.677 Q12752.7181,5020.6445 12752.6855,5020.5631 Q12752.6693,5020.4817 12752.653,5020.4654 Q12752.653,5020.4329 12752.6367,5020.3515 Q12752.6204,5020.2701 12752.6204,5020.2539 Q12752.5391,5019.8795 12752.1322,5019.6516 Q12751.7253,5019.4075 12751.1393,5019.4075 Q12750.5534,5019.4075 12750.1302,5019.6842 Q12749.7233,5019.9609 12749.7233,5020.3678 Q12749.7233,5020.791 12750.1302,5021.0188 Q12750.5534,5021.2467 12751.0905,5021.3281 Q12751.6439,5021.3932 12752.3112,5021.5722 Q12752.9948,5021.7513 12753.3854,5022.0605 Q12754.1178,5022.6464 12754.1178,5023.623 Q12754.1178,5024.5996 12753.3203,5025.2018 Q12752.5391,5025.804 12751.2533,5025.804 Q12750.2279,5025.804 12749.3164,5025.3157 Q12749.056,5025.6087 12748.8118,5025.6087 Q12748.1771,5025.6087 12748.1771,5024.7949 L12748.1771,5023.9648 Q12748.1771,5023.5579 12748.3073,5023.3463 Q12748.4538,5023.1347 12748.7956,5023.1347 Q12748.9095,5023.1347 12748.9909,5023.1673 Q12749.0885,5023.1835 12749.1536,5023.2324 Q12749.2188,5023.2812 12749.2676,5023.33 Q12749.3164,5023.3789 12749.3327,5023.4602 Q12749.3652,5023.5253 12749.3815,5023.5742 Q12749.3978,5023.6067 12749.4141,5023.6718 Q12749.4303,5023.7207 12749.4303,5023.7369 Q12749.528,5024.0787 12750.0326,5024.3229 Q12750.5534,5024.5507 12751.1719,5024.5507 Q12751.8717,5024.5507 12752.3438,5024.274 Q12752.8158,5023.9973 12752.8158,5023.6067 Q12752.8158,5023.2324 12752.4414,5023.0045 Q12752.0833,5022.7766 12751.5951,5022.7115 Q12751.123,5022.6302 12750.472,5022.4837 Q12749.8372,5022.3209 12749.4466,5022.1093 Q12748.9746,5021.8326 12748.6979,5021.3769 Q12748.4212,5020.9049 12748.4212,5020.3678 Q12748.4212,5019.4238 12749.1862,5018.8053 Q12749.9674,5018.1705 12751.1393,5018.1705 Q12752.0996,5018.1705 12752.7507,5018.5774 Q12752.8646,5018.3333 12752.9622,5018.2519 Q12753.0599,5018.1705 12753.2389,5018.1705 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="18.75" x="12776.0417" y="5031.7707">Txn</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="12661.4583" x2="12878.125" y1="5044.4791" y2="5044.4791"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="12668.75" y="5052.8124"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="171.875" x="12685.4167" y="5065.3123">systemstore core.DSReaderWriter</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="12668.75" y="5076.979"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="159.375" x="12685.4167" y="5089.4789">datastore core.DSReaderWriter</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="12668.75" y="5101.1455"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="162.5" x="12685.4167" y="5113.6454">headstore core.DSReaderWriter</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="12668.75" y="5125.3121"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="12685.4167" y="5137.812">dagstore core.DAGStore</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="12661.4583" x2="12878.125" y1="5149.4787" y2="5149.4787"/><ellipse cx="12671.875" cy="5160.937" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="12685.4167" y="5170.3119">Systemstore() core.DSReaderWriter</text><ellipse cx="12671.875" cy="5185.1036" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="169.7917" x="12685.4167" y="5194.4785">Datastore() core.DSReaderWriter</text><ellipse cx="12671.875" cy="5209.2701" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="172.9167" x="12685.4167" y="5218.645">Headstore() core.DSReaderWriter</text><ellipse cx="12671.875" cy="5233.4367" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="137.5" x="12685.4167" y="5242.8116">DAGstore() core.DAGStore</text><ellipse cx="12671.875" cy="5257.6032" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="69.7917" x="12685.4167" y="5266.9782">IsBatch() bool</text><!--MD5=[56920f1535bbbf8d263fff1824d9340b]
class db.UpdateOpt--><rect codeLine="684" fill="#2A9FD6" height="61.6666" id="db.UpdateOpt" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="96.875" x="13475.5208" y="6186.9792"/><ellipse cx="13490.1042" cy="6209.4791" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M13492.3014,6205.6705 Q13492.6758,6205.6705 13492.7897,6205.8821 Q13492.9199,6206.0937 13492.9199,6206.4843 L13492.9199,6207.5911 Q13492.9199,6208.4212 13492.3014,6208.4212 Q13492.2038,6208.4212 13492.1224,6208.4049 Q13492.041,6208.3886 13491.9759,6208.3561 Q13491.9271,6208.3235 13491.8783,6208.2747 Q13491.8294,6208.2096 13491.7969,6208.177 Q13491.7806,6208.1445 13491.748,6208.0631 Q13491.7318,6207.9817 13491.7155,6207.9654 Q13491.7155,6207.9329 13491.6992,6207.8515 Q13491.6829,6207.7701 13491.6829,6207.7539 Q13491.6016,6207.3795 13491.1947,6207.1516 Q13490.7878,6206.9075 13490.2018,6206.9075 Q13489.6159,6206.9075 13489.1927,6207.1842 Q13488.7858,6207.4609 13488.7858,6207.8678 Q13488.7858,6208.291 13489.1927,6208.5188 Q13489.6159,6208.7467 13490.153,6208.8281 Q13490.7064,6208.8932 13491.3737,6209.0722 Q13492.0573,6209.2513 13492.4479,6209.5605 Q13493.1803,6210.1464 13493.1803,6211.123 Q13493.1803,6212.0996 13492.3828,6212.7018 Q13491.6016,6213.304 13490.3158,6213.304 Q13489.2904,6213.304 13488.3789,6212.8157 Q13488.1185,6213.1087 13487.8743,6213.1087 Q13487.2396,6213.1087 13487.2396,6212.2949 L13487.2396,6211.4648 Q13487.2396,6211.0579 13487.3698,6210.8463 Q13487.5163,6210.6347 13487.8581,6210.6347 Q13487.972,6210.6347 13488.0534,6210.6673 Q13488.151,6210.6835 13488.2161,6210.7324 Q13488.2813,6210.7812 13488.3301,6210.83 Q13488.3789,6210.8789 13488.3952,6210.9602 Q13488.4277,6211.0253 13488.444,6211.0742 Q13488.4603,6211.1067 13488.4766,6211.1718 Q13488.4928,6211.2207 13488.4928,6211.2369 Q13488.5905,6211.5787 13489.0951,6211.8229 Q13489.6159,6212.0507 13490.2344,6212.0507 Q13490.9342,6212.0507 13491.4063,6211.774 Q13491.8783,6211.4973 13491.8783,6211.1067 Q13491.8783,6210.7324 13491.5039,6210.5045 Q13491.1458,6210.2766 13490.6576,6210.2115 Q13490.1855,6210.1302 13489.5345,6209.9837 Q13488.8997,6209.8209 13488.5091,6209.6093 Q13488.0371,6209.3326 13487.7604,6208.8769 Q13487.4837,6208.4049 13487.4837,6207.8678 Q13487.4837,6206.9238 13488.2487,6206.3053 Q13489.0299,6205.6705 13490.2018,6205.6705 Q13491.1621,6205.6705 13491.8132,6206.0774 Q13491.9271,6205.8333 13492.0247,6205.7519 Q13492.1224,6205.6705 13492.3014,6205.6705 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="13508.8542" y="6219.2707">UpdateOpt</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13476.5625" x2="13571.3542" y1="6231.9791" y2="6231.9791"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13476.5625" x2="13571.3542" y1="6240.3124" y2="6240.3124"/><!--MD5=[4f1c890ca3c329d2bd6d216f4c5b928c]
class db.patcher--><rect codeLine="686" fill="#2A9FD6" height="51.2499" id="db.patcher" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="80.2083" x="13608.8542" y="6192.1875"/><ellipse cx="13623.4375" cy="6209.4791" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M13625.4232,6211.8717 Q13625.8301,6211.8717 13626.0417,6212.0019 Q13626.2533,6212.1321 13626.2533,6212.5065 Q13626.2533,6213.1249 13625.4232,6213.1249 L13621.6471,6213.1249 Q13620.8333,6213.1249 13620.8333,6212.5065 Q13620.8333,6212.1321 13621.0449,6212.0019 Q13621.2565,6211.8717 13621.6471,6211.8717 L13622.9167,6211.8717 L13622.9167,6207.0865 L13621.6471,6207.0865 Q13620.8333,6207.0865 13620.8333,6206.468 Q13620.8333,6206.0937 13621.0449,6205.9635 Q13621.2565,6205.8333 13621.6471,6205.8333 L13625.4232,6205.8333 Q13625.8301,6205.8333 13626.0417,6205.9635 Q13626.2533,6206.0937 13626.2533,6206.468 Q13626.2533,6207.0865 13625.4232,6207.0865 L13624.1699,6207.0865 L13624.1699,6211.8717 L13625.4232,6211.8717 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="38.5417" x="13642.1875" y="6214.0624">patcher</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13609.8958" x2="13688.0208" y1="6226.7707" y2="6226.7707"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13609.8958" x2="13688.0208" y1="6235.1041" y2="6235.1041"/><!--MD5=[59aaa2901caab8ae08733553d2a1abaa]
class db.sequence--><rect codeLine="688" fill="#2A9FD6" height="206.6659" id="db.sequence" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="234.375" x="13725.5208" y="6114.5833"/><ellipse cx="13808.8542" cy="6137.0833" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M13811.0514,6133.2747 Q13811.4258,6133.2747 13811.5397,6133.4863 Q13811.6699,6133.6979 13811.6699,6134.0885 L13811.6699,6135.1953 Q13811.6699,6136.0253 13811.0514,6136.0253 Q13810.9538,6136.0253 13810.8724,6136.0091 Q13810.791,6135.9928 13810.7259,6135.9602 Q13810.6771,6135.9277 13810.6283,6135.8789 Q13810.5794,6135.8138 13810.5469,6135.7812 Q13810.5306,6135.7486 13810.498,6135.6673 Q13810.4818,6135.5859 13810.4655,6135.5696 Q13810.4655,6135.5371 13810.4492,6135.4557 Q13810.4329,6135.3743 13810.4329,6135.358 Q13810.3516,6134.9837 13809.9447,6134.7558 Q13809.5378,6134.5117 13808.9518,6134.5117 Q13808.3659,6134.5117 13807.9427,6134.7884 Q13807.5358,6135.0651 13807.5358,6135.472 Q13807.5358,6135.8951 13807.9427,6136.123 Q13808.3659,6136.3509 13808.903,6136.4322 Q13809.4564,6136.4973 13810.1237,6136.6764 Q13810.8073,6136.8554 13811.1979,6137.1647 Q13811.9303,6137.7506 13811.9303,6138.7272 Q13811.9303,6139.7037 13811.1328,6140.3059 Q13810.3516,6140.9082 13809.0658,6140.9082 Q13808.0404,6140.9082 13807.1289,6140.4199 Q13806.8685,6140.7128 13806.6243,6140.7128 Q13805.9896,6140.7128 13805.9896,6139.899 L13805.9896,6139.069 Q13805.9896,6138.6621 13806.1198,6138.4505 Q13806.2663,6138.2389 13806.6081,6138.2389 Q13806.722,6138.2389 13806.8034,6138.2714 Q13806.901,6138.2877 13806.9661,6138.3365 Q13807.0313,6138.3854 13807.0801,6138.4342 Q13807.1289,6138.483 13807.1452,6138.5644 Q13807.1777,6138.6295 13807.194,6138.6783 Q13807.2103,6138.7109 13807.2266,6138.776 Q13807.2428,6138.8248 13807.2428,6138.8411 Q13807.3405,6139.1829 13807.8451,6139.427 Q13808.3659,6139.6549 13808.9844,6139.6549 Q13809.6842,6139.6549 13810.1563,6139.3782 Q13810.6283,6139.1015 13810.6283,6138.7109 Q13810.6283,6138.3365 13810.2539,6138.1087 Q13809.8958,6137.8808 13809.4076,6137.8157 Q13808.9355,6137.7343 13808.2845,6137.5878 Q13807.6497,6137.4251 13807.2591,6137.2135 Q13806.7871,6136.9368 13806.5104,6136.4811 Q13806.2337,6136.0091 13806.2337,6135.472 Q13806.2337,6134.5279 13806.9987,6133.9095 Q13807.7799,6133.2747 13808.9518,6133.2747 Q13809.9121,6133.2747 13810.5632,6133.6816 Q13810.6771,6133.4374 13810.7747,6133.3561 Q13810.8724,6133.2747 13811.0514,6133.2747 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="48.9583" x="13833.8542" y="6146.8749">sequence</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13726.5625" x2="13958.8542" y1="6159.5832" y2="6159.5832"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13733.8542" y="6167.9166"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="35.4167" x="13750.5208" y="6180.4165">db *DB</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13733.8542" y="6192.0831"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="13750.5208" y="6204.583">key go-datastore.Key</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13733.8542" y="6216.2497"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="13750.5208" y="6228.7496">val uint64</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13726.5625" x2="13958.8542" y1="6240.4163" y2="6240.4163"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13733.8542" y="6248.7496"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="13750.5208" y="6261.2495">get(ctx context.Context) (uint64, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13733.8542" y="6272.9162"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="13750.5208" y="6285.4161">update(ctx context.Context) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="13733.8542" y="6297.0827"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="197.9167" x="13750.5208" y="6309.5826">next(ctx context.Context) (uint64, error)</text><!--MD5=[cef9a474d329f42435db6f72753bb5e9]
class db.shimBatcherTxn--><rect codeLine="698" fill="#2A9FD6" height="85.8331" id="db.shimBatcherTxn" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="170.8333" x="13268.75" y="5096.3542"/><ellipse cx="13304.8958" cy="5118.8541" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M13307.0931,5115.0455 Q13307.4674,5115.0455 13307.5814,5115.2571 Q13307.7116,5115.4687 13307.7116,5115.8593 L13307.7116,5116.9661 Q13307.7116,5117.7962 13307.0931,5117.7962 Q13306.9954,5117.7962 13306.9141,5117.7799 Q13306.8327,5117.7636 13306.7676,5117.7311 Q13306.7188,5117.6985 13306.6699,5117.6497 Q13306.6211,5117.5846 13306.5885,5117.552 Q13306.5723,5117.5195 13306.5397,5117.4381 Q13306.5234,5117.3567 13306.5072,5117.3404 Q13306.5072,5117.3079 13306.4909,5117.2265 Q13306.4746,5117.1451 13306.4746,5117.1289 Q13306.3932,5116.7545 13305.9863,5116.5266 Q13305.5794,5116.2825 13304.9935,5116.2825 Q13304.4076,5116.2825 13303.9844,5116.5592 Q13303.5775,5116.8359 13303.5775,5117.2428 Q13303.5775,5117.666 13303.9844,5117.8938 Q13304.4076,5118.1217 13304.9447,5118.2031 Q13305.498,5118.2682 13306.1654,5118.4472 Q13306.849,5118.6263 13307.2396,5118.9355 Q13307.972,5119.5214 13307.972,5120.498 Q13307.972,5121.4746 13307.1745,5122.0768 Q13306.3932,5122.679 13305.1074,5122.679 Q13304.082,5122.679 13303.1706,5122.1907 Q13302.9102,5122.4837 13302.666,5122.4837 Q13302.0313,5122.4837 13302.0313,5121.6699 L13302.0313,5120.8398 Q13302.0313,5120.4329 13302.1615,5120.2213 Q13302.3079,5120.0097 13302.6497,5120.0097 Q13302.7637,5120.0097 13302.8451,5120.0423 Q13302.9427,5120.0585 13303.0078,5120.1074 Q13303.0729,5120.1562 13303.1217,5120.205 Q13303.1706,5120.2539 13303.1868,5120.3352 Q13303.2194,5120.4003 13303.2357,5120.4492 Q13303.252,5120.4817 13303.2682,5120.5468 Q13303.2845,5120.5957 13303.2845,5120.6119 Q13303.3822,5120.9537 13303.8867,5121.1979 Q13304.4076,5121.4257 13305.026,5121.4257 Q13305.7259,5121.4257 13306.1979,5121.149 Q13306.6699,5120.8723 13306.6699,5120.4817 Q13306.6699,5120.1074 13306.2956,5119.8795 Q13305.9375,5119.6516 13305.4492,5119.5865 Q13304.9772,5119.5052 13304.3262,5119.3587 Q13303.6914,5119.1959 13303.3008,5118.9843 Q13302.8288,5118.7076 13302.5521,5118.2519 Q13302.2754,5117.7799 13302.2754,5117.2428 Q13302.2754,5116.2988 13303.0404,5115.6803 Q13303.8216,5115.0455 13304.9935,5115.0455 Q13305.9538,5115.0455 13306.6048,5115.4524 Q13306.7188,5115.2083 13306.8164,5115.1269 Q13306.9141,5115.0455 13307.0931,5115.0455 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="13328.4375" y="5128.6457">shimBatcherTxn</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13269.7917" x2="13438.5417" y1="5141.3541" y2="5141.3541"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="13269.7917" x2="13438.5417" y1="5149.6874" y2="5149.6874"/><ellipse cx="13280.2083" cy="5161.1457" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="13293.75" y="5170.5206">Discard(_ context.Context)</text><!--MD5=[f24e574d3afb4cd5f8887294b5dc7622]
class db.shimTxnStore--><rect codeLine="702" fill="#2A9FD6" height="109.9997" id="db.shimTxnStore" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="315.625" x="12916.1458" y="5083.8542"/><ellipse cx="13030.2083" cy="5106.3541" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M13032.4056,5102.5455 Q13032.7799,5102.5455 13032.8939,5102.7571 Q13033.0241,5102.9687 13033.0241,5103.3593 L13033.0241,5104.4661 Q13033.0241,5105.2962 13032.4056,5105.2962 Q13032.3079,5105.2962 13032.2266,5105.2799 Q13032.1452,5105.2636 13032.0801,5105.2311 Q13032.0313,5105.1985 13031.9824,5105.1497 Q13031.9336,5105.0846 13031.901,5105.052 Q13031.8848,5105.0195 13031.8522,5104.9381 Q13031.8359,5104.8567 13031.8197,5104.8404 Q13031.8197,5104.8079 13031.8034,5104.7265 Q13031.7871,5104.6451 13031.7871,5104.6289 Q13031.7057,5104.2545 13031.2988,5104.0266 Q13030.8919,5103.7825 13030.306,5103.7825 Q13029.7201,5103.7825 13029.2969,5104.0592 Q13028.89,5104.3359 13028.89,5104.7428 Q13028.89,5105.166 13029.2969,5105.3938 Q13029.7201,5105.6217 13030.2572,5105.7031 Q13030.8105,5105.7682 13031.4779,5105.9472 Q13032.1615,5106.1263 13032.5521,5106.4355 Q13033.2845,5107.0214 13033.2845,5107.998 Q13033.2845,5108.9746 13032.487,5109.5768 Q13031.7057,5110.179 13030.4199,5110.179 Q13029.3945,5110.179 13028.4831,5109.6907 Q13028.2227,5109.9837 13027.9785,5109.9837 Q13027.3438,5109.9837 13027.3438,5109.1699 L13027.3438,5108.3398 Q13027.3438,5107.9329 13027.474,5107.7213 Q13027.6204,5107.5097 13027.9622,5107.5097 Q13028.0762,5107.5097 13028.1576,5107.5423 Q13028.2552,5107.5585 13028.3203,5107.6074 Q13028.3854,5107.6562 13028.4342,5107.705 Q13028.4831,5107.7539 13028.4993,5107.8352 Q13028.5319,5107.9003 13028.5482,5107.9492 Q13028.5645,5107.9817 13028.5807,5108.0468 Q13028.597,5108.0957 13028.597,5108.1119 Q13028.6947,5108.4537 13029.1992,5108.6979 Q13029.7201,5108.9257 13030.3385,5108.9257 Q13031.0384,5108.9257 13031.5104,5108.649 Q13031.9824,5108.3723 13031.9824,5107.9817 Q13031.9824,5107.6074 13031.6081,5107.3795 Q13031.25,5107.1516 13030.7617,5107.0865 Q13030.2897,5107.0052 13029.6387,5106.8587 Q13029.0039,5106.6959 13028.6133,5106.4843 Q13028.1413,5106.2076 13027.8646,5105.7519 Q13027.5879,5105.2799 13027.5879,5104.7428 Q13027.5879,5103.7988 13028.3529,5103.1803 Q13029.1341,5102.5455 13030.306,5102.5455 Q13031.2663,5102.5455 13031.9173,5102.9524 Q13032.0313,5102.7083 13032.1289,5102.6269 Q13032.2266,5102.5455 13032.4056,5102.5455 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="68.75" x="13055.2083" y="5116.1457">shimTxnStore</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="12917.1875" x2="13230.7292" y1="5128.8541" y2="5128.8541"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="12917.1875" x2="13230.7292" y1="5137.1874" y2="5137.1874"/><ellipse cx="12927.6042" cy="5148.6457" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="279.1667" x="12941.1458" y="5158.0206">Sync(ctx context.Context, prefix go-datastore.Key) error</text><ellipse cx="12927.6042" cy="5172.8123" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="12941.1458" y="5182.1872">Close() error</text><!--MD5=[0d494c6cbfb19446a24ace861efa8b8a]
class document.Document--><rect codeLine="720" fill="#2A9FD6" height="714.1638" id="document.Document" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="357.2917" x="16973.4375" y="6443.75"/><ellipse cx="17116.6667" cy="6466.2499" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M17118.8639,6462.4414 Q17119.2383,6462.4414 17119.3522,6462.6529 Q17119.4824,6462.8645 17119.4824,6463.2552 L17119.4824,6464.3619 Q17119.4824,6465.192 17118.8639,6465.192 Q17118.7663,6465.192 17118.6849,6465.1757 Q17118.6035,6465.1595 17118.5384,6465.1269 Q17118.4896,6465.0943 17118.4408,6465.0455 Q17118.3919,6464.9804 17118.3594,6464.9479 Q17118.3431,6464.9153 17118.3105,6464.8339 Q17118.2943,6464.7526 17118.278,6464.7363 Q17118.278,6464.7037 17118.2617,6464.6223 Q17118.2454,6464.541 17118.2454,6464.5247 Q17118.1641,6464.1503 17117.7572,6463.9225 Q17117.3503,6463.6783 17116.7643,6463.6783 Q17116.1784,6463.6783 17115.7552,6463.955 Q17115.3483,6464.2317 17115.3483,6464.6386 Q17115.3483,6465.0618 17115.7552,6465.2897 Q17116.1784,6465.5175 17116.7155,6465.5989 Q17117.2689,6465.664 17117.9362,6465.843 Q17118.6198,6466.0221 17119.0104,6466.3313 Q17119.7428,6466.9173 17119.7428,6467.8938 Q17119.7428,6468.8704 17118.9453,6469.4726 Q17118.1641,6470.0748 17116.8783,6470.0748 Q17115.8529,6470.0748 17114.9414,6469.5865 Q17114.681,6469.8795 17114.4368,6469.8795 Q17113.8021,6469.8795 17113.8021,6469.0657 L17113.8021,6468.2356 Q17113.8021,6467.8287 17113.9323,6467.6171 Q17114.0788,6467.4055 17114.4206,6467.4055 Q17114.5345,6467.4055 17114.6159,6467.4381 Q17114.7135,6467.4544 17114.7786,6467.5032 Q17114.8438,6467.552 17114.8926,6467.6009 Q17114.9414,6467.6497 17114.9577,6467.7311 Q17114.9902,6467.7962 17115.0065,6467.845 Q17115.0228,6467.8776 17115.0391,6467.9427 Q17115.0553,6467.9915 17115.0553,6468.0078 Q17115.153,6468.3496 17115.6576,6468.5937 Q17116.1784,6468.8216 17116.7969,6468.8216 Q17117.4967,6468.8216 17117.9688,6468.5449 Q17118.4408,6468.2682 17118.4408,6467.8776 Q17118.4408,6467.5032 17118.0664,6467.2753 Q17117.7083,6467.0475 17117.2201,6466.9824 Q17116.748,6466.901 17116.097,6466.7545 Q17115.4622,6466.5917 17115.0716,6466.3802 Q17114.5996,6466.1035 17114.3229,6465.6477 Q17114.0462,6465.1757 17114.0462,6464.6386 Q17114.0462,6463.6946 17114.8112,6463.0761 Q17115.5924,6462.4414 17116.7643,6462.4414 Q17117.7246,6462.4414 17118.3757,6462.8483 Q17118.4896,6462.6041 17118.5872,6462.5227 Q17118.6849,6462.4414 17118.8639,6462.4414 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="17141.6667" y="6476.0416">Document</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16974.4792" x2="17329.6875" y1="6488.7499" y2="6488.7499"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16981.7708" y="6497.0832"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="167.7083" x="16998.4375" y="6509.5831">schema base.SchemaDescription</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16981.7708" y="6521.2498"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="16998.4375" y="6533.7497">key key.DocKey</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16981.7708" y="6545.4164"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="25" x="16998.4375" y="6557.9163">fields</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="17026.5625" y="6557.9163">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="17048.4375" y="6557.9163">[string]Field</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16981.7708" y="6569.5829"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="31.25" x="16998.4375" y="6582.0828">values</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="17032.8125" y="6582.0828">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="58.3333" x="17054.6875" y="6582.0828">[Field]Value</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16981.7708" y="6593.7495"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="54.1667" x="16998.4375" y="6606.2494">isDirty bool</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16974.4792" x2="17329.6875" y1="6617.9161" y2="6617.9161"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16981.7708" y="6626.2494"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="236.4583" x="16998.4375" y="6638.7493">set(t core.CType, field string, value Value) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16981.7708" y="6650.4159"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="193.75" x="16998.4375" y="6662.9159">setCBOR(t core.CType, field string, val</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="17195.3125" y="6662.9159">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="40.625" x="17239.0625" y="6662.9159">{}) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16981.7708" y="6674.5825"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="286.4583" x="16998.4375" y="6687.0824">setObject(t core.CType, field string, val *Document) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16981.7708" y="6698.7491"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="175" x="16998.4375" y="6711.249">setAndParseType(field string, value</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="17176.5625" y="6711.249">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="40.625" x="17220.3125" y="6711.249">{}) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16981.7708" y="6722.9156"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="153.125" x="16998.4375" y="6735.4156">setAndParseObjectType(value</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="17154.6875" y="6735.4156">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="17176.5625" y="6735.4156">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="17209.8958" y="6735.4156">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="40.625" x="17253.6458" y="6735.4156">{}) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16981.7708" y="6747.0822"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="16998.4375" y="6759.5821">toMap() (</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="17045.3125" y="6759.5821">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="17067.1875" y="6759.5821">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="17100.5208" y="6759.5821">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="17144.2708" y="6759.5821">{}, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16981.7708" y="6771.2488"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="87.5" x="16998.4375" y="6783.7487">toMapWithKey() (</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="17085.9375" y="6783.7487">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="17107.8125" y="6783.7487">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="17141.1458" y="6783.7487">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="17184.8958" y="6783.7487">{}, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16981.7708" y="6795.4153"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="320.8333" x="16998.4375" y="6807.9152">newField(t core.CType, name string, schemaType ...string) Field</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="17001.5625" y="6832.0818"/><ellipse cx="16984.8958" cy="6846.8735" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="90.625" x="16998.4375" y="6856.2484">Key() key.DocKey</text><ellipse cx="16984.8958" cy="6871.04" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="83.3333" x="16998.4375" y="6880.4149">Get(field string) (</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="17081.7708" y="6880.4149">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="17125.5208" y="6880.4149">{}, error)</text><ellipse cx="16984.8958" cy="6895.2066" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="175" x="16998.4375" y="6904.5815">GetValue(field string) (Value, error)</text><ellipse cx="16984.8958" cy="6919.3732" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="201.0417" x="16998.4375" y="6928.7481">GetValueWithField(f Field) (Value, error)</text><ellipse cx="16984.8958" cy="6943.5397" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="164.5833" x="16998.4375" y="6952.9146">SetWithJSON(patch []byte) error</text><ellipse cx="16984.8958" cy="6967.7063" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="16998.4375" y="6977.0812">Set(field string, value</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="17104.6875" y="6977.0812">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="40.625" x="17148.4375" y="6977.0812">{}) error</text><ellipse cx="16984.8958" cy="6991.8728" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="115.625" x="16998.4375" y="7001.2478">SetAs(field string, value</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="17117.1875" y="7001.2478">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="17160.9375" y="7001.2478">{}, t core.CType) error</text><ellipse cx="16984.8958" cy="7016.0394" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="133.3333" x="16998.4375" y="7025.4143">Delete(fields ...string) error</text><ellipse cx="16984.8958" cy="7040.206" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="37.5" x="16998.4375" y="7049.5809">Fields()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="17039.0625" y="7049.5809">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="17060.9375" y="7049.5809">[string]Field</text><ellipse cx="16984.8958" cy="7064.3725" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="16998.4375" y="7073.7475">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="17043.2292" y="7073.7475">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="140.625" x="17065.1042" y="7073.7475">[Field]{packageName}Value</text><ellipse cx="16984.8958" cy="7088.5391" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="16998.4375" y="7097.914">Bytes() ([]byte, error)</text><ellipse cx="16984.8958" cy="7112.7057" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="67.7083" x="16998.4375" y="7122.0806">String() string</text><ellipse cx="16984.8958" cy="7136.8722" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="16998.4375" y="7146.2471">ToMap() (</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="17049.4792" y="7146.2471">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="17071.3542" y="7146.2471">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="17104.6875" y="7146.2471">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="17148.4375" y="7146.2471">{}, error)</text><!--MD5=[0bb149d96b7ed7ae317fc48d302d5643]
class document.EncProperty--><rect codeLine="751" fill="#2A9FD6" height="134.1663" id="document.EncProperty" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="244.7917" x="17576.5625" y="5071.875"/><ellipse cx="17658.3333" cy="5094.3749" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M17660.5306,5090.5664 Q17660.9049,5090.5664 17661.0189,5090.7779 Q17661.1491,5090.9895 17661.1491,5091.3802 L17661.1491,5092.4869 Q17661.1491,5093.317 17660.5306,5093.317 Q17660.4329,5093.317 17660.3516,5093.3007 Q17660.2702,5093.2845 17660.2051,5093.2519 Q17660.1563,5093.2193 17660.1074,5093.1705 Q17660.0586,5093.1054 17660.026,5093.0729 Q17660.0098,5093.0403 17659.9772,5092.9589 Q17659.9609,5092.8776 17659.9447,5092.8613 Q17659.9447,5092.8287 17659.9284,5092.7473 Q17659.9121,5092.666 17659.9121,5092.6497 Q17659.8307,5092.2753 17659.4238,5092.0475 Q17659.0169,5091.8033 17658.431,5091.8033 Q17657.8451,5091.8033 17657.4219,5092.08 Q17657.015,5092.3567 17657.015,5092.7636 Q17657.015,5093.1868 17657.4219,5093.4147 Q17657.8451,5093.6425 17658.3822,5093.7239 Q17658.9355,5093.789 17659.6029,5093.968 Q17660.2865,5094.1471 17660.6771,5094.4563 Q17661.4095,5095.0423 17661.4095,5096.0188 Q17661.4095,5096.9954 17660.612,5097.5976 Q17659.8307,5098.1998 17658.5449,5098.1998 Q17657.5195,5098.1998 17656.6081,5097.7115 Q17656.3477,5098.0045 17656.1035,5098.0045 Q17655.4688,5098.0045 17655.4688,5097.1907 L17655.4688,5096.3606 Q17655.4688,5095.9537 17655.599,5095.7421 Q17655.7454,5095.5305 17656.0872,5095.5305 Q17656.2012,5095.5305 17656.2826,5095.5631 Q17656.3802,5095.5794 17656.4453,5095.6282 Q17656.5104,5095.677 17656.5592,5095.7259 Q17656.6081,5095.7747 17656.6243,5095.8561 Q17656.6569,5095.9212 17656.6732,5095.97 Q17656.6895,5096.0026 17656.7057,5096.0677 Q17656.722,5096.1165 17656.722,5096.1328 Q17656.8197,5096.4746 17657.3242,5096.7187 Q17657.8451,5096.9466 17658.4635,5096.9466 Q17659.1634,5096.9466 17659.6354,5096.6699 Q17660.1074,5096.3932 17660.1074,5096.0026 Q17660.1074,5095.6282 17659.7331,5095.4003 Q17659.375,5095.1725 17658.8867,5095.1074 Q17658.4147,5095.026 17657.7637,5094.8795 Q17657.1289,5094.7167 17656.7383,5094.5052 Q17656.2663,5094.2285 17655.9896,5093.7727 Q17655.7129,5093.3007 17655.7129,5092.7636 Q17655.7129,5091.8196 17656.4779,5091.2011 Q17657.2591,5090.5664 17658.431,5090.5664 Q17659.3913,5090.5664 17660.0423,5090.9733 Q17660.1563,5090.7291 17660.2539,5090.6477 Q17660.3516,5090.5664 17660.5306,5090.5664 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="17683.3333" y="5104.1666">EncProperty</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17577.6042" x2="17820.3125" y1="5116.8749" y2="5116.8749"/><ellipse cx="17588.0208" cy="5128.3332" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="136.4583" x="17601.5625" y="5137.7081">Desc base.FieldDescription</text><ellipse cx="17588.0208" cy="5152.4998" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="17601.5625" y="5161.8747">Raw []byte</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17577.6042" x2="17820.3125" y1="5173.5414" y2="5173.5414"/><ellipse cx="17588.0208" cy="5184.9997" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="117.7083" x="17601.5625" y="5194.3746">Decode() (core.CType,</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="17722.3958" y="5194.3746">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="17766.1458" y="5194.3746">{}, error)</text><!--MD5=[05f8a3a76e81ea7340e5ca2250a6bfcc]
class document.EncodedDocument--><rect codeLine="758" fill="#2A9FD6" height="206.6659" id="document.EncodedDocument" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="292.7083" x="17857.8125" y="5035.9375"/><ellipse cx="17946.3542" cy="5058.4374" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M17948.5514,5054.6289 Q17948.9258,5054.6289 17949.0397,5054.8404 Q17949.1699,5055.052 17949.1699,5055.4427 L17949.1699,5056.5494 Q17949.1699,5057.3795 17948.5514,5057.3795 Q17948.4538,5057.3795 17948.3724,5057.3632 Q17948.291,5057.347 17948.2259,5057.3144 Q17948.1771,5057.2818 17948.1283,5057.233 Q17948.0794,5057.1679 17948.0469,5057.1354 Q17948.0306,5057.1028 17947.998,5057.0214 Q17947.9818,5056.9401 17947.9655,5056.9238 Q17947.9655,5056.8912 17947.9492,5056.8098 Q17947.9329,5056.7285 17947.9329,5056.7122 Q17947.8516,5056.3378 17947.4447,5056.11 Q17947.0378,5055.8658 17946.4518,5055.8658 Q17945.8659,5055.8658 17945.4427,5056.1425 Q17945.0358,5056.4192 17945.0358,5056.8261 Q17945.0358,5057.2493 17945.4427,5057.4772 Q17945.8659,5057.705 17946.403,5057.7864 Q17946.9564,5057.8515 17947.6237,5058.0305 Q17948.3073,5058.2096 17948.6979,5058.5188 Q17949.4303,5059.1048 17949.4303,5060.0813 Q17949.4303,5061.0579 17948.6328,5061.6601 Q17947.8516,5062.2623 17946.5658,5062.2623 Q17945.5404,5062.2623 17944.6289,5061.774 Q17944.3685,5062.067 17944.1243,5062.067 Q17943.4896,5062.067 17943.4896,5061.2532 L17943.4896,5060.4231 Q17943.4896,5060.0162 17943.6198,5059.8046 Q17943.7663,5059.593 17944.1081,5059.593 Q17944.222,5059.593 17944.3034,5059.6256 Q17944.401,5059.6419 17944.4661,5059.6907 Q17944.5313,5059.7395 17944.5801,5059.7884 Q17944.6289,5059.8372 17944.6452,5059.9186 Q17944.6777,5059.9837 17944.694,5060.0325 Q17944.7103,5060.0651 17944.7266,5060.1302 Q17944.7428,5060.179 17944.7428,5060.1953 Q17944.8405,5060.5371 17945.3451,5060.7812 Q17945.8659,5061.0091 17946.4844,5061.0091 Q17947.1842,5061.0091 17947.6563,5060.7324 Q17948.1283,5060.4557 17948.1283,5060.0651 Q17948.1283,5059.6907 17947.7539,5059.4628 Q17947.3958,5059.235 17946.9076,5059.1699 Q17946.4355,5059.0885 17945.7845,5058.942 Q17945.1497,5058.7792 17944.7591,5058.5677 Q17944.2871,5058.291 17944.0104,5057.8352 Q17943.7337,5057.3632 17943.7337,5056.8261 Q17943.7337,5055.8821 17944.4987,5055.2636 Q17945.2799,5054.6289 17946.4518,5054.6289 Q17947.4121,5054.6289 17948.0632,5055.0358 Q17948.1771,5054.7916 17948.2747,5054.7102 Q17948.3724,5054.6289 17948.5514,5054.6289 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="96.875" x="17971.3542" y="5068.2291">EncodedDocument</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17858.8542" x2="18149.4792" y1="5080.9374" y2="5080.9374"/><ellipse cx="17869.2708" cy="5092.3957" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="48.9583" x="17882.8125" y="5101.7706">Key []byte</text><ellipse cx="17869.2708" cy="5116.5623" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="173.9583" x="17882.8125" y="5125.9372">Schema *base.SchemaDescription</text><ellipse cx="17869.2708" cy="5140.7289" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="17882.8125" y="5150.1038">Properties</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="17936.9792" y="5150.1038">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="180.2083" x="17958.8542" y="5150.1038">[base.FieldDescription]*EncProperty</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17858.8542" x2="18149.4792" y1="5161.7704" y2="5161.7704"/><ellipse cx="17869.2708" cy="5173.2288" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="37.5" x="17882.8125" y="5182.6037">Reset()</text><ellipse cx="17869.2708" cy="5197.3953" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="146.875" x="17882.8125" y="5206.7702">Decode() (*Document, error)</text><ellipse cx="17869.2708" cy="5221.5619" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="90.625" x="17882.8125" y="5230.9368">DecodeToMap() (</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="17973.4375" y="5230.9368">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="17995.3125" y="5230.9368">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="18028.6458" y="5230.9368">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="18072.3958" y="5230.9368">{}, error)</text><!--MD5=[90e4079cf3fc10f9581c3751aae5be97]
class document.Field--><rect codeLine="768" fill="#2A9FD6" height="147.9162" id="document.Field" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="152.0833" x="17387.5" y="5065.1042"/><ellipse cx="17442.1875" cy="5082.3958" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M17444.1732,5084.7884 Q17444.5801,5084.7884 17444.7917,5084.9186 Q17445.0033,5085.0488 17445.0033,5085.4231 Q17445.0033,5086.0416 17444.1732,5086.0416 L17440.3971,5086.0416 Q17439.5833,5086.0416 17439.5833,5085.4231 Q17439.5833,5085.0488 17439.7949,5084.9186 Q17440.0065,5084.7884 17440.3971,5084.7884 L17441.6667,5084.7884 L17441.6667,5080.0032 L17440.3971,5080.0032 Q17439.5833,5080.0032 17439.5833,5079.3847 Q17439.5833,5079.0104 17439.7949,5078.8802 Q17440.0065,5078.7499 17440.3971,5078.7499 L17444.1732,5078.7499 Q17444.5801,5078.7499 17444.7917,5078.8802 Q17445.0033,5079.0104 17445.0033,5079.3847 Q17445.0033,5080.0032 17444.1732,5080.0032 L17442.9199,5080.0032 L17442.9199,5084.7884 L17444.1732,5084.7884 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="23.9583" x="17467.1875" y="5086.9791">Field</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17388.5417" x2="17538.5417" y1="5099.6874" y2="5099.6874"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17388.5417" x2="17538.5417" y1="5108.0207" y2="5108.0207"/><ellipse cx="17398.9583" cy="5119.4791" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="115.625" x="17412.5" y="5128.854">Key() go-datastore.Key</text><ellipse cx="17398.9583" cy="5143.6456" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="68.75" x="17412.5" y="5153.0205">Name() string</text><ellipse cx="17398.9583" cy="5167.8122" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="17412.5" y="5177.1871">Type() core.CType</text><ellipse cx="17398.9583" cy="5191.9788" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="17412.5" y="5201.3537">SchemaType() string</text><!--MD5=[c1cb249a2e085e47941598c00aea0adf]
class document.Int64Value--><rect codeLine="775" fill="#2A9FD6" height="85.8331" id="document.Int64Value" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="141.6667" x="17723.9583" y="6758.3333"/><ellipse cx="17759.6354" cy="6780.8333" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M17761.8327,6777.0247 Q17762.207,6777.0247 17762.321,6777.2363 Q17762.4512,6777.4479 17762.4512,6777.8385 L17762.4512,6778.9453 Q17762.4512,6779.7753 17761.8327,6779.7753 Q17761.735,6779.7753 17761.6536,6779.7591 Q17761.5723,6779.7428 17761.5072,6779.7102 Q17761.4583,6779.6777 17761.4095,6779.6289 Q17761.3607,6779.5638 17761.3281,6779.5312 Q17761.3118,6779.4986 17761.2793,6779.4173 Q17761.263,6779.3359 17761.2467,6779.3196 Q17761.2467,6779.2871 17761.2305,6779.2057 Q17761.2142,6779.1243 17761.2142,6779.108 Q17761.1328,6778.7337 17760.7259,6778.5058 Q17760.319,6778.2617 17759.7331,6778.2617 Q17759.1471,6778.2617 17758.724,6778.5384 Q17758.3171,6778.8151 17758.3171,6779.222 Q17758.3171,6779.6451 17758.724,6779.873 Q17759.1471,6780.1009 17759.6842,6780.1822 Q17760.2376,6780.2473 17760.9049,6780.4264 Q17761.5885,6780.6054 17761.9792,6780.9147 Q17762.7116,6781.5006 17762.7116,6782.4772 Q17762.7116,6783.4537 17761.9141,6784.0559 Q17761.1328,6784.6582 17759.847,6784.6582 Q17758.8216,6784.6582 17757.9102,6784.1699 Q17757.6497,6784.4628 17757.4056,6784.4628 Q17756.7708,6784.4628 17756.7708,6783.649 L17756.7708,6782.819 Q17756.7708,6782.4121 17756.901,6782.2005 Q17757.0475,6781.9889 17757.3893,6781.9889 Q17757.5033,6781.9889 17757.5846,6782.0214 Q17757.6823,6782.0377 17757.7474,6782.0865 Q17757.8125,6782.1354 17757.8613,6782.1842 Q17757.9102,6782.233 17757.9264,6782.3144 Q17757.959,6782.3795 17757.9753,6782.4283 Q17757.9915,6782.4609 17758.0078,6782.526 Q17758.0241,6782.5748 17758.0241,6782.5911 Q17758.1217,6782.9329 17758.6263,6783.177 Q17759.1471,6783.4049 17759.7656,6783.4049 Q17760.4655,6783.4049 17760.9375,6783.1282 Q17761.4095,6782.8515 17761.4095,6782.4609 Q17761.4095,6782.0865 17761.0352,6781.8587 Q17760.6771,6781.6308 17760.1888,6781.5657 Q17759.7168,6781.4843 17759.0658,6781.3378 Q17758.431,6781.1751 17758.0404,6780.9635 Q17757.5684,6780.6868 17757.2917,6780.2311 Q17757.015,6779.7591 17757.015,6779.222 Q17757.015,6778.2779 17757.7799,6777.6595 Q17758.5612,6777.0247 17759.7331,6777.0247 Q17760.6934,6777.0247 17761.3444,6777.4316 Q17761.4583,6777.1874 17761.556,6777.1061 Q17761.6536,6777.0247 17761.8327,6777.0247 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="17783.0729" y="6790.6249">Int64Value</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17725" x2="17864.5833" y1="6803.3332" y2="6803.3332"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17725" x2="17864.5833" y1="6811.6666" y2="6811.6666"/><ellipse cx="17735.4167" cy="6823.1249" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="17748.9583" y="6832.4998">Bytes() ([]byte, error)</text><!--MD5=[401bc8ddf6335f9eb5c55cbe82a0a36d]
class document.List--><rect codeLine="779" fill="#2A9FD6" height="61.6666" id="document.List" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="58.3333" x="18187.5" y="5108.3333"/><ellipse cx="18202.0833" cy="5130.8333" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M18204.2806,5127.0247 Q18204.6549,5127.0247 18204.7689,5127.2363 Q18204.8991,5127.4479 18204.8991,5127.8385 L18204.8991,5128.9453 Q18204.8991,5129.7753 18204.2806,5129.7753 Q18204.1829,5129.7753 18204.1016,5129.7591 Q18204.0202,5129.7428 18203.9551,5129.7102 Q18203.9063,5129.6777 18203.8574,5129.6289 Q18203.8086,5129.5638 18203.776,5129.5312 Q18203.7598,5129.4986 18203.7272,5129.4173 Q18203.7109,5129.3359 18203.6947,5129.3196 Q18203.6947,5129.2871 18203.6784,5129.2057 Q18203.6621,5129.1243 18203.6621,5129.108 Q18203.5807,5128.7337 18203.1738,5128.5058 Q18202.7669,5128.2617 18202.181,5128.2617 Q18201.5951,5128.2617 18201.1719,5128.5384 Q18200.765,5128.8151 18200.765,5129.222 Q18200.765,5129.6451 18201.1719,5129.873 Q18201.5951,5130.1009 18202.1322,5130.1822 Q18202.6855,5130.2473 18203.3529,5130.4264 Q18204.0365,5130.6054 18204.4271,5130.9147 Q18205.1595,5131.5006 18205.1595,5132.4772 Q18205.1595,5133.4537 18204.362,5134.0559 Q18203.5807,5134.6582 18202.2949,5134.6582 Q18201.2695,5134.6582 18200.3581,5134.1699 Q18200.0977,5134.4628 18199.8535,5134.4628 Q18199.2188,5134.4628 18199.2188,5133.649 L18199.2188,5132.819 Q18199.2188,5132.4121 18199.349,5132.2005 Q18199.4954,5131.9889 18199.8372,5131.9889 Q18199.9512,5131.9889 18200.0326,5132.0214 Q18200.1302,5132.0377 18200.1953,5132.0865 Q18200.2604,5132.1354 18200.3092,5132.1842 Q18200.3581,5132.233 18200.3743,5132.3144 Q18200.4069,5132.3795 18200.4232,5132.4283 Q18200.4395,5132.4609 18200.4557,5132.526 Q18200.472,5132.5748 18200.472,5132.5911 Q18200.5697,5132.9329 18201.0742,5133.177 Q18201.5951,5133.4049 18202.2135,5133.4049 Q18202.9134,5133.4049 18203.3854,5133.1282 Q18203.8574,5132.8515 18203.8574,5132.4609 Q18203.8574,5132.0865 18203.4831,5131.8587 Q18203.125,5131.6308 18202.6367,5131.5657 Q18202.1647,5131.4843 18201.5137,5131.3378 Q18200.8789,5131.1751 18200.4883,5130.9635 Q18200.0163,5130.6868 18199.7396,5130.2311 Q18199.4629,5129.7591 18199.4629,5129.222 Q18199.4629,5128.2779 18200.2279,5127.6595 Q18201.0091,5127.0247 18202.181,5127.0247 Q18203.1413,5127.0247 18203.7923,5127.4316 Q18203.9063,5127.1874 18204.0039,5127.1061 Q18204.1016,5127.0247 18204.2806,5127.0247 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="16.6667" x="18220.8333" y="5140.6249">List</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18188.5417" x2="18244.7917" y1="5153.3332" y2="5153.3332"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18188.5417" x2="18244.7917" y1="5161.6666" y2="5161.6666"/><!--MD5=[d1c5616edead4f03f55150dd95b22610]
class document.ReadableValue--><rect codeLine="781" fill="#2A9FD6" height="75.4165" id="document.ReadableValue" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="166.6667" x="17443.75" y="6180.2083"/><ellipse cx="17480.3646" cy="6197.4999" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M17482.3503,6199.8925 Q17482.7572,6199.8925 17482.9688,6200.0227 Q17483.1803,6200.1529 17483.1803,6200.5273 Q17483.1803,6201.1458 17482.3503,6201.1458 L17478.5742,6201.1458 Q17477.7604,6201.1458 17477.7604,6200.5273 Q17477.7604,6200.1529 17477.972,6200.0227 Q17478.1836,6199.8925 17478.5742,6199.8925 L17479.8438,6199.8925 L17479.8438,6195.1074 L17478.5742,6195.1074 Q17477.7604,6195.1074 17477.7604,6194.4889 Q17477.7604,6194.1145 17477.972,6193.9843 Q17478.1836,6193.8541 17478.5742,6193.8541 L17482.3503,6193.8541 Q17482.7572,6193.8541 17482.9688,6193.9843 Q17483.1803,6194.1145 17483.1803,6194.4889 Q17483.1803,6195.1074 17482.3503,6195.1074 L17481.097,6195.1074 L17481.097,6199.8925 L17482.3503,6199.8925 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="76.0417" x="17504.0104" y="6202.0832">ReadableValue</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17444.7917" x2="17609.375" y1="6214.7916" y2="6214.7916"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17444.7917" x2="17609.375" y1="6223.1249" y2="6223.1249"/><ellipse cx="17455.2083" cy="6234.5832" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="42.7083" x="17468.75" y="6243.9581">Read() (</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="17511.4583" y="6243.9581">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="17555.2083" y="6243.9581">{}, error)</text><!--MD5=[bd2940a7c1c3bd22042740a5d7daedfb]
class document.Scalar--><rect codeLine="785" fill="#2A9FD6" height="61.6666" id="document.Scalar" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="73.9583" x="17835.9375" y="6186.9792"/><ellipse cx="17850.5208" cy="6209.4791" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M17852.7181,6205.6705 Q17853.0924,6205.6705 17853.2064,6205.8821 Q17853.3366,6206.0937 17853.3366,6206.4843 L17853.3366,6207.5911 Q17853.3366,6208.4212 17852.7181,6208.4212 Q17852.6204,6208.4212 17852.5391,6208.4049 Q17852.4577,6208.3886 17852.3926,6208.3561 Q17852.3438,6208.3235 17852.2949,6208.2747 Q17852.2461,6208.2096 17852.2135,6208.177 Q17852.1973,6208.1445 17852.1647,6208.0631 Q17852.1484,6207.9817 17852.1322,6207.9654 Q17852.1322,6207.9329 17852.1159,6207.8515 Q17852.0996,6207.7701 17852.0996,6207.7539 Q17852.0182,6207.3795 17851.6113,6207.1516 Q17851.2044,6206.9075 17850.6185,6206.9075 Q17850.0326,6206.9075 17849.6094,6207.1842 Q17849.2025,6207.4609 17849.2025,6207.8678 Q17849.2025,6208.291 17849.6094,6208.5188 Q17850.0326,6208.7467 17850.5697,6208.8281 Q17851.123,6208.8932 17851.7904,6209.0722 Q17852.474,6209.2513 17852.8646,6209.5605 Q17853.597,6210.1464 17853.597,6211.123 Q17853.597,6212.0996 17852.7995,6212.7018 Q17852.0182,6213.304 17850.7324,6213.304 Q17849.707,6213.304 17848.7956,6212.8157 Q17848.5352,6213.1087 17848.291,6213.1087 Q17847.6563,6213.1087 17847.6563,6212.2949 L17847.6563,6211.4648 Q17847.6563,6211.0579 17847.7865,6210.8463 Q17847.9329,6210.6347 17848.2747,6210.6347 Q17848.3887,6210.6347 17848.4701,6210.6673 Q17848.5677,6210.6835 17848.6328,6210.7324 Q17848.6979,6210.7812 17848.7467,6210.83 Q17848.7956,6210.8789 17848.8118,6210.9602 Q17848.8444,6211.0253 17848.8607,6211.0742 Q17848.877,6211.1067 17848.8932,6211.1718 Q17848.9095,6211.2207 17848.9095,6211.2369 Q17849.0072,6211.5787 17849.5117,6211.8229 Q17850.0326,6212.0507 17850.651,6212.0507 Q17851.3509,6212.0507 17851.8229,6211.774 Q17852.2949,6211.4973 17852.2949,6211.1067 Q17852.2949,6210.7324 17851.9206,6210.5045 Q17851.5625,6210.2766 17851.0742,6210.2115 Q17850.6022,6210.1302 17849.9512,6209.9837 Q17849.3164,6209.8209 17848.9258,6209.6093 Q17848.4538,6209.3326 17848.1771,6208.8769 Q17847.9004,6208.4049 17847.9004,6207.8678 Q17847.9004,6206.9238 17848.6654,6206.3053 Q17849.4466,6205.6705 17850.6185,6205.6705 Q17851.5788,6205.6705 17852.2298,6206.0774 Q17852.3438,6205.8333 17852.4414,6205.7519 Q17852.5391,6205.6705 17852.7181,6205.6705 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="32.2917" x="17869.2708" y="6219.2707">Scalar</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17836.9792" x2="17908.8542" y1="6231.9791" y2="6231.9791"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17836.9792" x2="17908.8542" y1="6240.3124" y2="6240.3124"/><!--MD5=[c8e8f30e71786a7eb5b02c5ff13056d6]
class document.SimpleDocument--><rect codeLine="787" fill="#2A9FD6" height="85.8331" id="document.SimpleDocument" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="167.7083" x="17946.3542" y="6175"/><ellipse cx="17979.2188" cy="6197.4999" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M17981.416,6193.6914 Q17981.7904,6193.6914 17981.9043,6193.9029 Q17982.0345,6194.1145 17982.0345,6194.5052 L17982.0345,6195.6119 Q17982.0345,6196.442 17981.416,6196.442 Q17981.3184,6196.442 17981.237,6196.4257 Q17981.1556,6196.4095 17981.0905,6196.3769 Q17981.0417,6196.3443 17980.9928,6196.2955 Q17980.944,6196.2304 17980.9115,6196.1979 Q17980.8952,6196.1653 17980.8626,6196.0839 Q17980.8464,6196.0026 17980.8301,6195.9863 Q17980.8301,6195.9537 17980.8138,6195.8723 Q17980.7975,6195.791 17980.7975,6195.7747 Q17980.7161,6195.4003 17980.3092,6195.1725 Q17979.9023,6194.9283 17979.3164,6194.9283 Q17978.7305,6194.9283 17978.3073,6195.205 Q17977.9004,6195.4817 17977.9004,6195.8886 Q17977.9004,6196.3118 17978.3073,6196.5397 Q17978.7305,6196.7675 17979.2676,6196.8489 Q17979.821,6196.914 17980.4883,6197.093 Q17981.1719,6197.2721 17981.5625,6197.5813 Q17982.2949,6198.1673 17982.2949,6199.1438 Q17982.2949,6200.1204 17981.4974,6200.7226 Q17980.7161,6201.3248 17979.4303,6201.3248 Q17978.4049,6201.3248 17977.4935,6200.8365 Q17977.2331,6201.1295 17976.9889,6201.1295 Q17976.3542,6201.1295 17976.3542,6200.3157 L17976.3542,6199.4856 Q17976.3542,6199.0787 17976.4844,6198.8671 Q17976.6309,6198.6555 17976.9727,6198.6555 Q17977.0866,6198.6555 17977.168,6198.6881 Q17977.2656,6198.7044 17977.3307,6198.7532 Q17977.3958,6198.802 17977.4447,6198.8509 Q17977.4935,6198.8997 17977.5098,6198.9811 Q17977.5423,6199.0462 17977.5586,6199.095 Q17977.5749,6199.1276 17977.5911,6199.1927 Q17977.6074,6199.2415 17977.6074,6199.2578 Q17977.7051,6199.5996 17978.2096,6199.8437 Q17978.7305,6200.0716 17979.349,6200.0716 Q17980.0488,6200.0716 17980.5208,6199.7949 Q17980.9928,6199.5182 17980.9928,6199.1276 Q17980.9928,6198.7532 17980.6185,6198.5253 Q17980.2604,6198.2975 17979.7721,6198.2324 Q17979.3001,6198.151 17978.6491,6198.0045 Q17978.0143,6197.8417 17977.6237,6197.6302 Q17977.1517,6197.3535 17976.875,6196.8977 Q17976.5983,6196.4257 17976.5983,6195.8886 Q17976.5983,6194.9446 17977.3633,6194.3261 Q17978.1445,6193.6914 17979.3164,6193.6914 Q17980.2767,6193.6914 17980.9277,6194.0983 Q17981.0417,6193.8541 17981.1393,6193.7727 Q17981.237,6193.6914 17981.416,6193.6914 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="85.4167" x="18002.0313" y="6207.2916">SimpleDocument</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17947.3958" x2="18113.0208" y1="6219.9999" y2="6219.9999"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17947.3958" x2="18113.0208" y1="6228.3332" y2="6228.3332"/><ellipse cx="17957.8125" cy="6239.7916" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="76.0417" x="17971.3542" y="6249.1665">Get(field string)</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="18050.5208" y="6249.1665">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="18094.2708" y="6249.1665">{}</text><!--MD5=[d97a9dc4d9eba13779a8bb51d6d97fd1]
class document.StringValue--><rect codeLine="791" fill="#2A9FD6" height="85.8331" id="document.StringValue" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="141.6667" x="17367.7083" y="6758.3333"/><ellipse cx="17401.5104" cy="6780.8333" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M17403.7077,6777.0247 Q17404.082,6777.0247 17404.196,6777.2363 Q17404.3262,6777.4479 17404.3262,6777.8385 L17404.3262,6778.9453 Q17404.3262,6779.7753 17403.7077,6779.7753 Q17403.61,6779.7753 17403.5286,6779.7591 Q17403.4473,6779.7428 17403.3822,6779.7102 Q17403.3333,6779.6777 17403.2845,6779.6289 Q17403.2357,6779.5638 17403.2031,6779.5312 Q17403.1868,6779.4986 17403.1543,6779.4173 Q17403.138,6779.3359 17403.1217,6779.3196 Q17403.1217,6779.2871 17403.1055,6779.2057 Q17403.0892,6779.1243 17403.0892,6779.108 Q17403.0078,6778.7337 17402.6009,6778.5058 Q17402.194,6778.2617 17401.6081,6778.2617 Q17401.0221,6778.2617 17400.599,6778.5384 Q17400.1921,6778.8151 17400.1921,6779.222 Q17400.1921,6779.6451 17400.599,6779.873 Q17401.0221,6780.1009 17401.5592,6780.1822 Q17402.1126,6780.2473 17402.7799,6780.4264 Q17403.4635,6780.6054 17403.8542,6780.9147 Q17404.5866,6781.5006 17404.5866,6782.4772 Q17404.5866,6783.4537 17403.7891,6784.0559 Q17403.0078,6784.6582 17401.722,6784.6582 Q17400.6966,6784.6582 17399.7852,6784.1699 Q17399.5247,6784.4628 17399.2806,6784.4628 Q17398.6458,6784.4628 17398.6458,6783.649 L17398.6458,6782.819 Q17398.6458,6782.4121 17398.776,6782.2005 Q17398.9225,6781.9889 17399.2643,6781.9889 Q17399.3783,6781.9889 17399.4596,6782.0214 Q17399.5573,6782.0377 17399.6224,6782.0865 Q17399.6875,6782.1354 17399.7363,6782.1842 Q17399.7852,6782.233 17399.8014,6782.3144 Q17399.834,6782.3795 17399.8503,6782.4283 Q17399.8665,6782.4609 17399.8828,6782.526 Q17399.8991,6782.5748 17399.8991,6782.5911 Q17399.9967,6782.9329 17400.5013,6783.177 Q17401.0221,6783.4049 17401.6406,6783.4049 Q17402.3405,6783.4049 17402.8125,6783.1282 Q17403.2845,6782.8515 17403.2845,6782.4609 Q17403.2845,6782.0865 17402.9102,6781.8587 Q17402.5521,6781.6308 17402.0638,6781.5657 Q17401.5918,6781.4843 17400.9408,6781.3378 Q17400.306,6781.1751 17399.9154,6780.9635 Q17399.4434,6780.6868 17399.1667,6780.2311 Q17398.89,6779.7591 17398.89,6779.222 Q17398.89,6778.2779 17399.6549,6777.6595 Q17400.4362,6777.0247 17401.6081,6777.0247 Q17402.5684,6777.0247 17403.2194,6777.4316 Q17403.3333,6777.1874 17403.431,6777.1061 Q17403.5286,6777.0247 17403.7077,6777.0247 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="17424.5313" y="6790.6249">StringValue</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17368.75" x2="17508.3333" y1="6803.3332" y2="6803.3332"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17368.75" x2="17508.3333" y1="6811.6666" y2="6811.6666"/><ellipse cx="17379.1667" cy="6823.1249" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="17392.7083" y="6832.4998">Bytes() ([]byte, error)</text><!--MD5=[90404b210adc145baae0c5113d4bec2d]
class document.Value--><rect codeLine="795" fill="#2A9FD6" height="220.4158" id="document.Value" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="132.2917" x="17218.2292" y="5028.6458"/><ellipse cx="17260.9375" cy="5045.9374" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M17262.9232,5048.33 Q17263.3301,5048.33 17263.5417,5048.4602 Q17263.7533,5048.5904 17263.7533,5048.9648 Q17263.7533,5049.5833 17262.9232,5049.5833 L17259.1471,5049.5833 Q17258.3333,5049.5833 17258.3333,5048.9648 Q17258.3333,5048.5904 17258.5449,5048.4602 Q17258.7565,5048.33 17259.1471,5048.33 L17260.4167,5048.33 L17260.4167,5043.5449 L17259.1471,5043.5449 Q17258.3333,5043.5449 17258.3333,5042.9264 Q17258.3333,5042.552 17258.5449,5042.4218 Q17258.7565,5042.2916 17259.1471,5042.2916 L17262.9232,5042.2916 Q17263.3301,5042.2916 17263.5417,5042.4218 Q17263.7533,5042.552 17263.7533,5042.9264 Q17263.7533,5043.5449 17262.9232,5043.5449 L17261.6699,5043.5449 L17261.6699,5048.33 L17262.9232,5048.33 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="28.125" x="17285.9375" y="5050.5207">Value</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17219.2708" x2="17349.4792" y1="5063.2291" y2="5063.2291"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17219.2708" x2="17349.4792" y1="5071.5624" y2="5071.5624"/><ellipse cx="17229.6875" cy="5083.0207" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="17243.2292" y="5092.3956">Value()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="17282.8125" y="5092.3956">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="17326.5625" y="5092.3956">{}</text><ellipse cx="17229.6875" cy="5107.1873" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="17243.2292" y="5116.5622">IsDocument() bool</text><ellipse cx="17229.6875" cy="5131.3539" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="17243.2292" y="5140.7288">Type() core.CType</text><ellipse cx="17229.6875" cy="5155.5204" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="63.5417" x="17243.2292" y="5164.8953">IsDirty() bool</text><ellipse cx="17229.6875" cy="5179.687" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="37.5" x="17243.2292" y="5189.0619">Clean()</text><ellipse cx="17229.6875" cy="5203.8536" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="72.9167" x="17243.2292" y="5213.2285">IsDelete() bool</text><ellipse cx="17229.6875" cy="5228.0201" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="40.625" x="17243.2292" y="5237.395">Delete()</text><!--MD5=[f4c2e10960c599f5ee1aff4f73fb4d65]
class document.ValueType--><rect codeLine="805" fill="#2A9FD6" height="51.2499" id="document.ValueType" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="94.7917" x="18150.5208" y="6192.1875"/><ellipse cx="18165.1042" cy="6209.4791" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M18167.0898,6211.8717 Q18167.4967,6211.8717 18167.7083,6212.0019 Q18167.9199,6212.1321 18167.9199,6212.5065 Q18167.9199,6213.1249 18167.0898,6213.1249 L18163.3138,6213.1249 Q18162.5,6213.1249 18162.5,6212.5065 Q18162.5,6212.1321 18162.7116,6212.0019 Q18162.9232,6211.8717 18163.3138,6211.8717 L18164.5833,6211.8717 L18164.5833,6207.0865 L18163.3138,6207.0865 Q18162.5,6207.0865 18162.5,6206.468 Q18162.5,6206.0937 18162.7116,6205.9635 Q18162.9232,6205.8333 18163.3138,6205.8333 L18167.0898,6205.8333 Q18167.4967,6205.8333 18167.7083,6205.9635 Q18167.9199,6206.0937 18167.9199,6206.468 Q18167.9199,6207.0865 18167.0898,6207.0865 L18165.8366,6207.0865 L18165.8366,6211.8717 L18167.0898,6211.8717 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="53.125" x="18183.8542" y="6214.0624">ValueType</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18151.5625" x2="18244.2708" y1="6226.7707" y2="6226.7707"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18151.5625" x2="18244.2708" y1="6235.1041" y2="6235.1041"/><!--MD5=[d8d0a2433b2d6722a695980e302a2d5d]
class document.WriteableValue--><rect codeLine="807" fill="#2A9FD6" height="75.4165" id="document.WriteableValue" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="141.6667" x="17095.8333" y="6180.2083"/><ellipse cx="17121.6667" cy="6197.4999" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M17123.6523,6199.8925 Q17124.0592,6199.8925 17124.2708,6200.0227 Q17124.4824,6200.1529 17124.4824,6200.5273 Q17124.4824,6201.1458 17123.6523,6201.1458 L17119.8763,6201.1458 Q17119.0625,6201.1458 17119.0625,6200.5273 Q17119.0625,6200.1529 17119.2741,6200.0227 Q17119.4857,6199.8925 17119.8763,6199.8925 L17121.1458,6199.8925 L17121.1458,6195.1074 L17119.8763,6195.1074 Q17119.0625,6195.1074 17119.0625,6194.4889 Q17119.0625,6194.1145 17119.2741,6193.9843 Q17119.4857,6193.8541 17119.8763,6193.8541 L17123.6523,6193.8541 Q17124.0592,6193.8541 17124.2708,6193.9843 Q17124.4824,6194.1145 17124.4824,6194.4889 Q17124.4824,6195.1074 17123.6523,6195.1074 L17122.3991,6195.1074 L17122.3991,6199.8925 L17123.6523,6199.8925 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="75" x="17142.9167" y="6202.0832">WriteableValue</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17096.875" x2="17236.4583" y1="6214.7916" y2="6214.7916"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17096.875" x2="17236.4583" y1="6223.1249" y2="6223.1249"/><ellipse cx="17107.2917" cy="6234.5832" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="17120.8333" y="6243.9581">Bytes() ([]byte, error)</text><!--MD5=[6445e3d458c514190a9244d03c6dae10]
class document.cborValue--><rect codeLine="811" fill="#2A9FD6" height="85.8331" id="document.cborValue" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="141.6667" x="17545.8333" y="6758.3333"/><ellipse cx="17582.4479" cy="6780.8333" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M17584.6452,6777.0247 Q17585.0195,6777.0247 17585.1335,6777.2363 Q17585.2637,6777.4479 17585.2637,6777.8385 L17585.2637,6778.9453 Q17585.2637,6779.7753 17584.6452,6779.7753 Q17584.5475,6779.7753 17584.4661,6779.7591 Q17584.3848,6779.7428 17584.3197,6779.7102 Q17584.2708,6779.6777 17584.222,6779.6289 Q17584.1732,6779.5638 17584.1406,6779.5312 Q17584.1243,6779.4986 17584.0918,6779.4173 Q17584.0755,6779.3359 17584.0592,6779.3196 Q17584.0592,6779.2871 17584.043,6779.2057 Q17584.0267,6779.1243 17584.0267,6779.108 Q17583.9453,6778.7337 17583.5384,6778.5058 Q17583.1315,6778.2617 17582.5456,6778.2617 Q17581.9596,6778.2617 17581.5365,6778.5384 Q17581.1296,6778.8151 17581.1296,6779.222 Q17581.1296,6779.6451 17581.5365,6779.873 Q17581.9596,6780.1009 17582.4967,6780.1822 Q17583.0501,6780.2473 17583.7174,6780.4264 Q17584.401,6780.6054 17584.7917,6780.9147 Q17585.5241,6781.5006 17585.5241,6782.4772 Q17585.5241,6783.4537 17584.7266,6784.0559 Q17583.9453,6784.6582 17582.6595,6784.6582 Q17581.6341,6784.6582 17580.7227,6784.1699 Q17580.4622,6784.4628 17580.2181,6784.4628 Q17579.5833,6784.4628 17579.5833,6783.649 L17579.5833,6782.819 Q17579.5833,6782.4121 17579.7135,6782.2005 Q17579.86,6781.9889 17580.2018,6781.9889 Q17580.3158,6781.9889 17580.3971,6782.0214 Q17580.4948,6782.0377 17580.5599,6782.0865 Q17580.625,6782.1354 17580.6738,6782.1842 Q17580.7227,6782.233 17580.7389,6782.3144 Q17580.7715,6782.3795 17580.7878,6782.4283 Q17580.804,6782.4609 17580.8203,6782.526 Q17580.8366,6782.5748 17580.8366,6782.5911 Q17580.9342,6782.9329 17581.4388,6783.177 Q17581.9596,6783.4049 17582.5781,6783.4049 Q17583.278,6783.4049 17583.75,6783.1282 Q17584.222,6782.8515 17584.222,6782.4609 Q17584.222,6782.0865 17583.8477,6781.8587 Q17583.4896,6781.6308 17583.0013,6781.5657 Q17582.5293,6781.4843 17581.8783,6781.3378 Q17581.2435,6781.1751 17580.8529,6780.9635 Q17580.3809,6780.6868 17580.1042,6780.2311 Q17579.8275,6779.7591 17579.8275,6779.222 Q17579.8275,6778.2779 17580.5924,6777.6595 Q17581.3737,6777.0247 17582.5456,6777.0247 Q17583.5059,6777.0247 17584.1569,6777.4316 Q17584.2708,6777.1874 17584.3685,6777.1061 Q17584.4661,6777.0247 17584.6452,6777.0247 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="17606.0938" y="6790.6249">cborValue</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17546.875" x2="17686.4583" y1="6803.3332" y2="6803.3332"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17546.875" x2="17686.4583" y1="6811.6666" y2="6811.6666"/><ellipse cx="17557.2917" cy="6823.1249" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="17570.8333" y="6832.4998">Bytes() ([]byte, error)</text><!--MD5=[f2a292c34b80c005ed1a0f2177079f0a]
class document.EPTuple--><rect codeLine="815" fill="#2A9FD6" height="61.6666" id="document.EPTuple" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="84.375" x="16974.4792" y="6186.9792"/><ellipse cx="16989.0625" cy="6209.4791" fill="#FF7700" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M16990.3483,6212.3925 Q16991.1621,6212.3925 16991.1621,6213.0273 Q16991.1621,6213.6458 16990.3483,6213.6458 L16987.4512,6213.6458 Q16986.6374,6213.6458 16986.6374,6213.0273 Q16986.6374,6212.6529 16986.849,6212.5227 Q16987.0605,6212.3925 16987.4512,6212.3925 L16988.265,6212.3925 L16988.265,6207.6074 L16986.9303,6207.6074 L16986.9303,6208.763 Q16986.9303,6209.593 16986.2956,6209.593 Q16985.6771,6209.593 16985.6771,6208.763 L16985.6771,6206.3541 L16992.1387,6206.3541 L16992.1387,6208.763 Q16992.1387,6209.1699 16991.9922,6209.3815 Q16991.862,6209.593 16991.5039,6209.593 Q16990.8854,6209.593 16990.8854,6208.763 L16990.8854,6207.6074 L16989.5182,6207.6074 L16989.5182,6212.3925 L16990.3483,6212.3925 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="42.7083" x="17007.8125" y="6219.2707">EPTuple</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16975.5208" x2="17057.8125" y1="6231.9791" y2="6231.9791"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16975.5208" x2="17057.8125" y1="6240.3124" y2="6240.3124"/><!--MD5=[d7da7d2176877a35efc9efc73708fa41]
class document.simpleField--><rect codeLine="817" fill="#2A9FD6" height="254.9991" id="document.simpleField" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="152.0833" x="17646.875" y="6090.1042"/><ellipse cx="17686.3021" cy="6112.6041" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M17688.4993,6108.7955 Q17688.8737,6108.7955 17688.9876,6109.0071 Q17689.1178,6109.2187 17689.1178,6109.6093 L17689.1178,6110.7161 Q17689.1178,6111.5462 17688.4993,6111.5462 Q17688.4017,6111.5462 17688.3203,6111.5299 Q17688.2389,6111.5136 17688.1738,6111.4811 Q17688.125,6111.4485 17688.0762,6111.3997 Q17688.0273,6111.3346 17687.9948,6111.302 Q17687.9785,6111.2695 17687.946,6111.1881 Q17687.9297,6111.1067 17687.9134,6111.0904 Q17687.9134,6111.0579 17687.8971,6110.9765 Q17687.8809,6110.8951 17687.8809,6110.8789 Q17687.7995,6110.5045 17687.3926,6110.2766 Q17686.9857,6110.0325 17686.3997,6110.0325 Q17685.8138,6110.0325 17685.3906,6110.3092 Q17684.9837,6110.5859 17684.9837,6110.9928 Q17684.9837,6111.416 17685.3906,6111.6438 Q17685.8138,6111.8717 17686.3509,6111.9531 Q17686.9043,6112.0182 17687.5716,6112.1972 Q17688.2552,6112.3763 17688.6458,6112.6855 Q17689.3783,6113.2714 17689.3783,6114.248 Q17689.3783,6115.2246 17688.5807,6115.8268 Q17687.7995,6116.429 17686.5137,6116.429 Q17685.4883,6116.429 17684.5768,6115.9407 Q17684.3164,6116.2337 17684.0723,6116.2337 Q17683.4375,6116.2337 17683.4375,6115.4199 L17683.4375,6114.5898 Q17683.4375,6114.1829 17683.5677,6113.9713 Q17683.7142,6113.7597 17684.056,6113.7597 Q17684.1699,6113.7597 17684.2513,6113.7923 Q17684.349,6113.8085 17684.4141,6113.8574 Q17684.4792,6113.9062 17684.528,6113.955 Q17684.5768,6114.0039 17684.5931,6114.0852 Q17684.6257,6114.1503 17684.6419,6114.1992 Q17684.6582,6114.2317 17684.6745,6114.2968 Q17684.6908,6114.3457 17684.6908,6114.3619 Q17684.7884,6114.7037 17685.293,6114.9479 Q17685.8138,6115.1757 17686.4323,6115.1757 Q17687.1322,6115.1757 17687.6042,6114.899 Q17688.0762,6114.6223 17688.0762,6114.2317 Q17688.0762,6113.8574 17687.7018,6113.6295 Q17687.3438,6113.4016 17686.8555,6113.3365 Q17686.3835,6113.2552 17685.7324,6113.1087 Q17685.0977,6112.9459 17684.707,6112.7343 Q17684.235,6112.4576 17683.9583,6112.0019 Q17683.6816,6111.5299 17683.6816,6110.9928 Q17683.6816,6110.0488 17684.4466,6109.4303 Q17685.2279,6108.7955 17686.3997,6108.7955 Q17687.36,6108.7955 17688.0111,6109.2024 Q17688.125,6108.9583 17688.2227,6108.8769 Q17688.3203,6108.7955 17688.4993,6108.7955 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="17710.5729" y="6122.3957">simpleField</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17647.9167" x2="17797.9167" y1="6135.1041" y2="6135.1041"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="17655.2083" y="6143.4374"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="58.3333" x="17671.875" y="6155.9373">name string</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="17655.2083" y="6167.604"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="17671.875" y="6180.1039">key go-datastore.Key</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="17655.2083" y="6191.7705"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="107.2917" x="17671.875" y="6204.2704">crdtType core.CType</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="17655.2083" y="6215.9371"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="17671.875" y="6228.437">schemaType string</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17647.9167" x2="17797.9167" y1="6240.1037" y2="6240.1037"/><ellipse cx="17658.3333" cy="6251.562" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="68.75" x="17671.875" y="6260.9369">Name() string</text><ellipse cx="17658.3333" cy="6275.7286" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="17671.875" y="6285.1035">Type() core.CType</text><ellipse cx="17658.3333" cy="6299.8951" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="115.625" x="17671.875" y="6309.27">Key() go-datastore.Key</text><ellipse cx="17658.3333" cy="6324.0617" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="17671.875" y="6333.4366">SchemaType() string</text><!--MD5=[8ec1d890d56db0382ba60ab1ce235224]
class document.simpleValue--><rect codeLine="829" fill="#2A9FD6" height="327.4988" id="document.simpleValue" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="132.2917" x="17274.4792" y="6054.1667"/><ellipse cx="17303.125" cy="6076.6666" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M17305.3223,6072.858 Q17305.6966,6072.858 17305.8105,6073.0696 Q17305.9408,6073.2812 17305.9408,6073.6718 L17305.9408,6074.7786 Q17305.9408,6075.6087 17305.3223,6075.6087 Q17305.2246,6075.6087 17305.1432,6075.5924 Q17305.0618,6075.5761 17304.9967,6075.5436 Q17304.9479,6075.511 17304.8991,6075.4622 Q17304.8503,6075.3971 17304.8177,6075.3645 Q17304.8014,6075.332 17304.7689,6075.2506 Q17304.7526,6075.1692 17304.7363,6075.1529 Q17304.7363,6075.1204 17304.7201,6075.039 Q17304.7038,6074.9576 17304.7038,6074.9414 Q17304.6224,6074.567 17304.2155,6074.3391 Q17303.8086,6074.095 17303.2227,6074.095 Q17302.6367,6074.095 17302.2135,6074.3717 Q17301.8066,6074.6484 17301.8066,6075.0553 Q17301.8066,6075.4785 17302.2135,6075.7063 Q17302.6367,6075.9342 17303.1738,6076.0156 Q17303.7272,6076.0807 17304.3945,6076.2597 Q17305.0781,6076.4388 17305.4688,6076.748 Q17306.2012,6077.3339 17306.2012,6078.3105 Q17306.2012,6079.2871 17305.4036,6079.8893 Q17304.6224,6080.4915 17303.3366,6080.4915 Q17302.3112,6080.4915 17301.3997,6080.0032 Q17301.1393,6080.2962 17300.8952,6080.2962 Q17300.2604,6080.2962 17300.2604,6079.4824 L17300.2604,6078.6523 Q17300.2604,6078.2454 17300.3906,6078.0338 Q17300.5371,6077.8222 17300.8789,6077.8222 Q17300.9928,6077.8222 17301.0742,6077.8548 Q17301.1719,6077.871 17301.237,6077.9199 Q17301.3021,6077.9687 17301.3509,6078.0175 Q17301.3997,6078.0664 17301.416,6078.1477 Q17301.4486,6078.2128 17301.4648,6078.2617 Q17301.4811,6078.2942 17301.4974,6078.3593 Q17301.5137,6078.4082 17301.5137,6078.4244 Q17301.6113,6078.7662 17302.1159,6079.0104 Q17302.6367,6079.2382 17303.2552,6079.2382 Q17303.9551,6079.2382 17304.4271,6078.9615 Q17304.8991,6078.6848 17304.8991,6078.2942 Q17304.8991,6077.9199 17304.5247,6077.692 Q17304.1667,6077.4641 17303.6784,6077.399 Q17303.2064,6077.3177 17302.5553,6077.1712 Q17301.9206,6077.0084 17301.5299,6076.7968 Q17301.0579,6076.5201 17300.7813,6076.0644 Q17300.5046,6075.5924 17300.5046,6075.0553 Q17300.5046,6074.1113 17301.2695,6073.4928 Q17302.0508,6072.858 17303.2227,6072.858 Q17304.1829,6072.858 17304.834,6073.2649 Q17304.9479,6073.0208 17305.0456,6072.9394 Q17305.1432,6072.858 17305.3223,6072.858 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="59.375" x="17325" y="6086.4582">simpleValue</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17275.5208" x2="17405.7292" y1="6099.1666" y2="6099.1666"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="17282.8125" y="6107.4999"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="65.625" x="17299.4792" y="6119.9998">t core.CType</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="17282.8125" y="6131.6665"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="26.0417" x="17299.4792" y="6144.1664">value</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="17328.6458" y="6144.1664">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="17372.3958" y="6144.1664">{}</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="17282.8125" y="6155.833"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="54.1667" x="17299.4792" y="6168.3329">isDirty bool</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="17282.8125" y="6179.9996"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="54.1667" x="17299.4792" y="6192.4995">delete bool</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17275.5208" x2="17405.7292" y1="6204.1662" y2="6204.1662"/><ellipse cx="17285.9375" cy="6215.6245" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="17299.4792" y="6224.9994">Value()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="17339.0625" y="6224.9994">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="17382.8125" y="6224.9994">{}</text><ellipse cx="17285.9375" cy="6239.7911" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="17299.4792" y="6249.166">Type() core.CType</text><ellipse cx="17285.9375" cy="6263.9576" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="17299.4792" y="6273.3325">IsDocument() bool</text><ellipse cx="17285.9375" cy="6288.1242" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="63.5417" x="17299.4792" y="6297.4991">IsDirty() bool</text><ellipse cx="17285.9375" cy="6312.2907" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="37.5" x="17299.4792" y="6321.6657">Clean()</text><ellipse cx="17285.9375" cy="6336.4573" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="40.625" x="17299.4792" y="6345.8322">Delete()</text><ellipse cx="17285.9375" cy="6360.6239" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="72.9167" x="17299.4792" y="6369.9988">IsDelete() bool</text><!--MD5=[c69980608e2ffa903941e3a8a18ee8f9]
class document.[]EncProperty--><rect fill="#2A9FD6" height="51.2499" id="document.[]EncProperty" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="110.4167" x="16973.9583" y="5113.5417"/><ellipse cx="16988.5417" cy="5130.8333" fill="#777777" rx="10.4167" ry="10.4167" style="stroke:#444444;stroke-width:1.0416666666666667;"/><path d="M16989.0137,5133.4049 Q16989.6159,5133.4049 16990.0228,5133.2584 Q16990.446,5133.1119 16990.6087,5132.9492 Q16990.7878,5132.7864 16990.9668,5132.6399 Q16991.1621,5132.4934 16991.3249,5132.4934 Q16991.569,5132.4934 16991.748,5132.6888 Q16991.9434,5132.8678 16991.9434,5133.1119 Q16991.9434,5133.649 16991.0807,5134.1536 Q16990.2344,5134.6582 16988.9811,5134.6582 Q16987.4023,5134.6582 16986.3444,5133.7304 Q16985.3027,5132.7864 16985.3027,5131.3704 L16985.3027,5130.5403 Q16985.3027,5129.0429 16986.2793,5128.0338 Q16987.2559,5127.0247 16988.7044,5127.0247 Q16989.5833,5127.0247 16990.4785,5127.4479 L16990.6087,5127.4967 Q16990.8203,5127.1874 16991.1296,5127.1874 Q16991.5039,5127.1874 16991.6341,5127.399 Q16991.7643,5127.6106 16991.7643,5128.0175 L16991.7643,5129.0592 Q16991.7643,5129.8893 16991.1296,5129.8893 Q16990.9017,5129.8893 16990.7552,5129.7753 Q16990.625,5129.6451 16990.5924,5129.5475 Q16990.5599,5129.4335 16990.5273,5129.222 Q16990.446,5128.8476 16990.0553,5128.6197 Q16989.681,5128.3919 16989.3555,5128.3268 Q16989.0299,5128.2617 16988.7533,5128.2617 Q16987.8092,5128.2617 16987.1745,5128.9127 Q16986.556,5129.5475 16986.556,5130.5403 L16986.556,5131.3378 Q16986.556,5132.2818 16987.2233,5132.8515 Q16987.8906,5133.4049 16989.0137,5133.4049 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="68.75" x="17007.2917" y="5135.4166">[]EncProperty</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16975" x2="17083.3333" y1="5148.1249" y2="5148.1249"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16975" x2="17083.3333" y1="5156.4582" y2="5156.4582"/><!--MD5=[d51dbbfc42a971f05faade1c5b92ae3e]
class fetcher.BlockFetcher--><rect codeLine="859" fill="#2A9FD6" height="61.6666" id="fetcher.BlockFetcher" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="109.375" x="18304.6875" y="5108.3333"/><ellipse cx="18319.2708" cy="5130.8333" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M18321.4681,5127.0247 Q18321.8424,5127.0247 18321.9564,5127.2363 Q18322.0866,5127.4479 18322.0866,5127.8385 L18322.0866,5128.9453 Q18322.0866,5129.7753 18321.4681,5129.7753 Q18321.3704,5129.7753 18321.2891,5129.7591 Q18321.2077,5129.7428 18321.1426,5129.7102 Q18321.0938,5129.6777 18321.0449,5129.6289 Q18320.9961,5129.5638 18320.9635,5129.5312 Q18320.9473,5129.4986 18320.9147,5129.4173 Q18320.8984,5129.3359 18320.8822,5129.3196 Q18320.8822,5129.2871 18320.8659,5129.2057 Q18320.8496,5129.1243 18320.8496,5129.108 Q18320.7682,5128.7337 18320.3613,5128.5058 Q18319.9544,5128.2617 18319.3685,5128.2617 Q18318.7826,5128.2617 18318.3594,5128.5384 Q18317.9525,5128.8151 18317.9525,5129.222 Q18317.9525,5129.6451 18318.3594,5129.873 Q18318.7826,5130.1009 18319.3197,5130.1822 Q18319.873,5130.2473 18320.5404,5130.4264 Q18321.224,5130.6054 18321.6146,5130.9147 Q18322.347,5131.5006 18322.347,5132.4772 Q18322.347,5133.4537 18321.5495,5134.0559 Q18320.7682,5134.6582 18319.4824,5134.6582 Q18318.457,5134.6582 18317.5456,5134.1699 Q18317.2852,5134.4628 18317.041,5134.4628 Q18316.4063,5134.4628 18316.4063,5133.649 L18316.4063,5132.819 Q18316.4063,5132.4121 18316.5365,5132.2005 Q18316.6829,5131.9889 18317.0247,5131.9889 Q18317.1387,5131.9889 18317.2201,5132.0214 Q18317.3177,5132.0377 18317.3828,5132.0865 Q18317.4479,5132.1354 18317.4967,5132.1842 Q18317.5456,5132.233 18317.5618,5132.3144 Q18317.5944,5132.3795 18317.6107,5132.4283 Q18317.627,5132.4609 18317.6432,5132.526 Q18317.6595,5132.5748 18317.6595,5132.5911 Q18317.7572,5132.9329 18318.2617,5133.177 Q18318.7826,5133.4049 18319.401,5133.4049 Q18320.1009,5133.4049 18320.5729,5133.1282 Q18321.0449,5132.8515 18321.0449,5132.4609 Q18321.0449,5132.0865 18320.6706,5131.8587 Q18320.3125,5131.6308 18319.8242,5131.5657 Q18319.3522,5131.4843 18318.7012,5131.3378 Q18318.0664,5131.1751 18317.6758,5130.9635 Q18317.2038,5130.6868 18316.9271,5130.2311 Q18316.6504,5129.7591 18316.6504,5129.222 Q18316.6504,5128.2779 18317.4154,5127.6595 Q18318.1966,5127.0247 18319.3685,5127.0247 Q18320.3288,5127.0247 18320.9798,5127.4316 Q18321.0938,5127.1874 18321.1914,5127.1061 Q18321.2891,5127.0247 18321.4681,5127.0247 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="67.7083" x="18338.0208" y="5140.6249">BlockFetcher</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18305.7292" x2="18413.0208" y1="5153.3332" y2="5153.3332"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18305.7292" x2="18413.0208" y1="5161.6666" y2="5161.6666"/><!--MD5=[3b01a2a59333a793236ce94f496ce5fc]
class fetcher.DocumentFetcher--><rect codeLine="861" fill="#2A9FD6" height="810.8301" id="fetcher.DocumentFetcher" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="611.4583" x="18450.5208" y="4733.8542"/><ellipse cx="18701.0417" cy="4756.3541" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M18703.2389,4752.5455 Q18703.6133,4752.5455 18703.7272,4752.7571 Q18703.8574,4752.9687 18703.8574,4753.3593 L18703.8574,4754.4661 Q18703.8574,4755.2962 18703.2389,4755.2962 Q18703.1413,4755.2962 18703.0599,4755.2799 Q18702.9785,4755.2636 18702.9134,4755.2311 Q18702.8646,4755.1985 18702.8158,4755.1497 Q18702.7669,4755.0846 18702.7344,4755.052 Q18702.7181,4755.0195 18702.6855,4754.9381 Q18702.6693,4754.8567 18702.653,4754.8404 Q18702.653,4754.8079 18702.6367,4754.7265 Q18702.6204,4754.6451 18702.6204,4754.6289 Q18702.5391,4754.2545 18702.1322,4754.0266 Q18701.7253,4753.7825 18701.1393,4753.7825 Q18700.5534,4753.7825 18700.1302,4754.0592 Q18699.7233,4754.3359 18699.7233,4754.7428 Q18699.7233,4755.166 18700.1302,4755.3938 Q18700.5534,4755.6217 18701.0905,4755.7031 Q18701.6439,4755.7682 18702.3112,4755.9472 Q18702.9948,4756.1263 18703.3854,4756.4355 Q18704.1178,4757.0214 18704.1178,4757.998 Q18704.1178,4758.9746 18703.3203,4759.5768 Q18702.5391,4760.179 18701.2533,4760.179 Q18700.2279,4760.179 18699.3164,4759.6907 Q18699.056,4759.9837 18698.8118,4759.9837 Q18698.1771,4759.9837 18698.1771,4759.1699 L18698.1771,4758.3398 Q18698.1771,4757.9329 18698.3073,4757.7213 Q18698.4538,4757.5097 18698.7956,4757.5097 Q18698.9095,4757.5097 18698.9909,4757.5423 Q18699.0885,4757.5585 18699.1536,4757.6074 Q18699.2188,4757.6562 18699.2676,4757.705 Q18699.3164,4757.7539 18699.3327,4757.8352 Q18699.3652,4757.9003 18699.3815,4757.9492 Q18699.3978,4757.9817 18699.4141,4758.0468 Q18699.4303,4758.0957 18699.4303,4758.1119 Q18699.528,4758.4537 18700.0326,4758.6979 Q18700.5534,4758.9257 18701.1719,4758.9257 Q18701.8717,4758.9257 18702.3438,4758.649 Q18702.8158,4758.3723 18702.8158,4757.9817 Q18702.8158,4757.6074 18702.4414,4757.3795 Q18702.0833,4757.1516 18701.5951,4757.0865 Q18701.123,4757.0052 18700.472,4756.8587 Q18699.8372,4756.6959 18699.4466,4756.4843 Q18698.9746,4756.2076 18698.6979,4755.7519 Q18698.4212,4755.2799 18698.4212,4754.7428 Q18698.4212,4753.7988 18699.1862,4753.1803 Q18699.9674,4752.5455 18701.1393,4752.5455 Q18702.0996,4752.5455 18702.7507,4752.9524 Q18702.8646,4752.7083 18702.9622,4752.6269 Q18703.0599,4752.5455 18703.2389,4752.5455 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="91.6667" x="18726.0417" y="4766.1457">DocumentFetcher</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18451.5625" x2="19060.9375" y1="4778.8541" y2="4778.8541"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18458.8542" y="4787.1874"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="154.1667" x="18475.5208" y="4799.6873">col *base.CollectionDescription</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18458.8542" y="4811.354"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="18475.5208" y="4823.8539">index *base.IndexDescription</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18458.8542" y="4835.5205"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="18475.5208" y="4848.0204">reverse bool</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18458.8542" y="4859.6871"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="18475.5208" y="4872.187">txn core.Txn</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18458.8542" y="4883.8537"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="89.5833" x="18475.5208" y="4896.3536">spans core.Spans</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18458.8542" y="4908.0202"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="18475.5208" y="4920.5201">curSpanIndex int</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18458.8542" y="4932.1868"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="68.75" x="18475.5208" y="4944.6867">schemaFields</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="18547.3958" y="4944.6867">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="18569.2708" y="4944.6867">[uint32]base.FieldDescription</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18458.8542" y="4956.3533"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="145.8333" x="18475.5208" y="4968.8533">fields []*base.FieldDescription</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18458.8542" y="4980.5199"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="176.0417" x="18475.5208" y="4993.0198">doc *document.EncodedDocument</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18458.8542" y="5004.6865"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="177.0833" x="18475.5208" y="5017.1864">decodedDoc *document.Document</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18458.8542" y="5028.853"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="67.7083" x="18475.5208" y="5041.353">initialized bool</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18458.8542" y="5053.0196"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="91.6667" x="18475.5208" y="5065.5195">kv *core.KeyValue</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18458.8542" y="5077.1862"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="98.9583" x="18475.5208" y="5089.6861">kvIter query.Results</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18458.8542" y="5101.3527"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="18475.5208" y="5113.8526">kvEnd bool</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18458.8542" y="5125.5193"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="75" x="18475.5208" y="5138.0192">indexKey []byte</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18451.5625" x2="19060.9375" y1="5149.6859" y2="5149.6859"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18458.8542" y="5158.0192"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="18475.5208" y="5170.5191">nextKey() (bool, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18458.8542" y="5182.1858"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="190.625" x="18475.5208" y="5194.6857">nextKV() (bool, *core.KeyValue, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18458.8542" y="5206.3523"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="18475.5208" y="5218.8522">processKV(kv *core.KeyValue) error</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="18478.6458" y="5243.0188"/><ellipse cx="18461.9792" cy="5257.8104" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="575" x="18475.5208" y="5267.1854">Init(col *base.CollectionDescription, index *base.IndexDescription, fields []*base.FieldDescription, reverse bool) error</text><ellipse cx="18461.9792" cy="5281.977" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="320.8333" x="18475.5208" y="5291.3519">Start(ctx context.Context, txn core.Txn, spans core.Spans) error</text><ellipse cx="18461.9792" cy="5306.1436" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="66.6667" x="18475.5208" y="5315.5185">KVEnd() bool</text><ellipse cx="18461.9792" cy="5330.3101" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="18475.5208" y="5339.6851">KV() *core.KeyValue</text><ellipse cx="18461.9792" cy="5354.4767" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="113.5417" x="18475.5208" y="5363.8516">NextKey() (bool, error)</text><ellipse cx="18461.9792" cy="5378.6433" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="18475.5208" y="5388.0182">NextKV() (bool, *core.KeyValue, error)</text><ellipse cx="18461.9792" cy="5402.8098" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="183.3333" x="18475.5208" y="5412.1847">ProcessKV(kv *core.KeyValue) error</text><ellipse cx="18461.9792" cy="5426.9764" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="257.2917" x="18475.5208" y="5436.3513">FetchNext() (*document.EncodedDocument, error)</text><ellipse cx="18461.9792" cy="5451.143" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="258.3333" x="18475.5208" y="5460.5179">FetchNextDecoded() (*document.Document, error)</text><ellipse cx="18461.9792" cy="5475.3095" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="119.7917" x="18475.5208" y="5484.6844">FetchNextMap() ([]byte,</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="18598.4375" y="5484.6844">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="18620.3125" y="5484.6844">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="18653.6458" y="5484.6844">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="18697.3958" y="5484.6844">{}, error)</text><ellipse cx="18461.9792" cy="5499.4761" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="194.7917" x="18475.5208" y="5508.851">ReadIndexKey(key core.Key) core.Key</text><ellipse cx="18461.9792" cy="5523.6427" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="18475.5208" y="5533.0176">Close() error</text><!--MD5=[78d334aa37d4202dc9eaf88f98b42b8c]
class fetcher.HeadFetcher--><rect codeLine="896" fill="#2A9FD6" height="327.4988" id="fetcher.HeadFetcher" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="357.2917" x="18303.6458" y="6054.1667"/><ellipse cx="18439.5833" cy="6076.6666" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M18441.7806,6072.858 Q18442.1549,6072.858 18442.2689,6073.0696 Q18442.3991,6073.2812 18442.3991,6073.6718 L18442.3991,6074.7786 Q18442.3991,6075.6087 18441.7806,6075.6087 Q18441.6829,6075.6087 18441.6016,6075.5924 Q18441.5202,6075.5761 18441.4551,6075.5436 Q18441.4063,6075.511 18441.3574,6075.4622 Q18441.3086,6075.3971 18441.276,6075.3645 Q18441.2598,6075.332 18441.2272,6075.2506 Q18441.2109,6075.1692 18441.1947,6075.1529 Q18441.1947,6075.1204 18441.1784,6075.039 Q18441.1621,6074.9576 18441.1621,6074.9414 Q18441.0807,6074.567 18440.6738,6074.3391 Q18440.2669,6074.095 18439.681,6074.095 Q18439.0951,6074.095 18438.6719,6074.3717 Q18438.265,6074.6484 18438.265,6075.0553 Q18438.265,6075.4785 18438.6719,6075.7063 Q18439.0951,6075.9342 18439.6322,6076.0156 Q18440.1855,6076.0807 18440.8529,6076.2597 Q18441.5365,6076.4388 18441.9271,6076.748 Q18442.6595,6077.3339 18442.6595,6078.3105 Q18442.6595,6079.2871 18441.862,6079.8893 Q18441.0807,6080.4915 18439.7949,6080.4915 Q18438.7695,6080.4915 18437.8581,6080.0032 Q18437.5977,6080.2962 18437.3535,6080.2962 Q18436.7188,6080.2962 18436.7188,6079.4824 L18436.7188,6078.6523 Q18436.7188,6078.2454 18436.849,6078.0338 Q18436.9954,6077.8222 18437.3372,6077.8222 Q18437.4512,6077.8222 18437.5326,6077.8548 Q18437.6302,6077.871 18437.6953,6077.9199 Q18437.7604,6077.9687 18437.8092,6078.0175 Q18437.8581,6078.0664 18437.8743,6078.1477 Q18437.9069,6078.2128 18437.9232,6078.2617 Q18437.9395,6078.2942 18437.9557,6078.3593 Q18437.972,6078.4082 18437.972,6078.4244 Q18438.0697,6078.7662 18438.5742,6079.0104 Q18439.0951,6079.2382 18439.7135,6079.2382 Q18440.4134,6079.2382 18440.8854,6078.9615 Q18441.3574,6078.6848 18441.3574,6078.2942 Q18441.3574,6077.9199 18440.9831,6077.692 Q18440.625,6077.4641 18440.1367,6077.399 Q18439.6647,6077.3177 18439.0137,6077.1712 Q18438.3789,6077.0084 18437.9883,6076.7968 Q18437.5163,6076.5201 18437.2396,6076.0644 Q18436.9629,6075.5924 18436.9629,6075.0553 Q18436.9629,6074.1113 18437.7279,6073.4928 Q18438.5091,6072.858 18439.681,6072.858 Q18440.6413,6072.858 18441.2923,6073.2649 Q18441.4063,6073.0208 18441.5039,6072.9394 Q18441.6016,6072.858 18441.7806,6072.858 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="66.6667" x="18464.5833" y="6086.4582">HeadFetcher</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18304.6875" x2="18659.8958" y1="6099.1666" y2="6099.1666"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18311.9792" y="6107.4999"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="89.5833" x="18328.6458" y="6119.9998">spans core.Spans</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18311.9792" y="6131.6665"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="72.9167" x="18328.6458" y="6144.1664">cid *go-cid.Cid</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18311.9792" y="6155.833"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="91.6667" x="18328.6458" y="6168.3329">kv *core.KeyValue</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18311.9792" y="6179.9996"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="98.9583" x="18328.6458" y="6192.4995">kvIter query.Results</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18311.9792" y="6204.1662"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="18328.6458" y="6216.6661">kvEnd bool</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18304.6875" x2="18659.8958" y1="6228.3327" y2="6228.3327"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18311.9792" y="6236.6661"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="18328.6458" y="6249.166">nextKey() (bool, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18311.9792" y="6260.8326"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="190.625" x="18328.6458" y="6273.3325">nextKV() (bool, *core.KeyValue, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18311.9792" y="6284.9992"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="18328.6458" y="6297.4991">processKV(kv *core.KeyValue) error</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="18331.7708" y="6321.6657"/><ellipse cx="18315.1042" cy="6336.4573" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="320.8333" x="18328.6458" y="6345.8322">Start(ctx context.Context, txn core.Txn, spans core.Spans) error</text><ellipse cx="18315.1042" cy="6360.6239" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="158.3333" x="18328.6458" y="6369.9988">FetchNext() (*go-cid.Cid, error)</text><!--MD5=[83fe4128b9fbb4e94bc6882da5e25db3]
class http.Server--><rect codeLine="915" fill="#2A9FD6" height="279.1656" id="http.Server" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="302.0833" x="16440.625" y="82.8125"/><ellipse cx="16565.625" cy="105.3124" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M16567.8223,101.5039 Q16568.1966,101.5039 16568.3105,101.7154 Q16568.4408,101.927 16568.4408,102.3177 L16568.4408,103.4244 Q16568.4408,104.2545 16567.8223,104.2545 Q16567.7246,104.2545 16567.6432,104.2382 Q16567.5618,104.222 16567.4967,104.1894 Q16567.4479,104.1568 16567.3991,104.108 Q16567.3503,104.0429 16567.3177,104.0104 Q16567.3014,103.9778 16567.2689,103.8964 Q16567.2526,103.8151 16567.2363,103.7988 Q16567.2363,103.7662 16567.2201,103.6848 Q16567.2038,103.6035 16567.2038,103.5872 Q16567.1224,103.2128 16566.7155,102.985 Q16566.3086,102.7408 16565.7227,102.7408 Q16565.1367,102.7408 16564.7135,103.0175 Q16564.3066,103.2942 16564.3066,103.7011 Q16564.3066,104.1243 16564.7135,104.3522 Q16565.1367,104.58 16565.6738,104.6614 Q16566.2272,104.7265 16566.8945,104.9055 Q16567.5781,105.0846 16567.9688,105.3938 Q16568.7012,105.9798 16568.7012,106.9563 Q16568.7012,107.9329 16567.9036,108.5351 Q16567.1224,109.1373 16565.8366,109.1373 Q16564.8112,109.1373 16563.8997,108.649 Q16563.6393,108.942 16563.3952,108.942 Q16562.7604,108.942 16562.7604,108.1282 L16562.7604,107.2981 Q16562.7604,106.8912 16562.8906,106.6796 Q16563.0371,106.468 16563.3789,106.468 Q16563.4928,106.468 16563.5742,106.5006 Q16563.6719,106.5169 16563.737,106.5657 Q16563.8021,106.6145 16563.8509,106.6634 Q16563.8997,106.7122 16563.916,106.7936 Q16563.9486,106.8587 16563.9648,106.9075 Q16563.9811,106.9401 16563.9974,107.0052 Q16564.0137,107.054 16564.0137,107.0703 Q16564.1113,107.4121 16564.6159,107.6562 Q16565.1367,107.8841 16565.7552,107.8841 Q16566.4551,107.8841 16566.9271,107.6074 Q16567.3991,107.3307 16567.3991,106.9401 Q16567.3991,106.5657 16567.0247,106.3378 Q16566.6667,106.11 16566.1784,106.0449 Q16565.7064,105.9635 16565.0553,105.817 Q16564.4206,105.6542 16564.0299,105.4427 Q16563.5579,105.166 16563.2813,104.7102 Q16563.0046,104.2382 16563.0046,103.7011 Q16563.0046,102.7571 16563.7695,102.1386 Q16564.5508,101.5039 16565.7227,101.5039 Q16566.6829,101.5039 16567.334,101.9108 Q16567.4479,101.6666 16567.5456,101.5852 Q16567.6432,101.5039 16567.8223,101.5039 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="16590.625" y="115.1041">Server</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16441.6667" x2="16741.6667" y1="127.8124" y2="127.8124"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16448.9583" y="136.1457"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="16465.625" y="148.6456">db client.DB</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16448.9583" y="160.3123"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="76.0417" x="16465.625" y="172.8122">router *chi.Mux</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16441.6667" x2="16741.6667" y1="184.4789" y2="184.4789"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16448.9583" y="192.8122"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="223.9583" x="16465.625" y="205.3121">ping(w http.ResponseWriter, r *http.Request)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16448.9583" y="216.9788"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="231.25" x="16465.625" y="229.4787">dump(w http.ResponseWriter, r *http.Request)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16448.9583" y="241.1453"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="251.0417" x="16465.625" y="253.6452">execGQL(w http.ResponseWriter, r *http.Request)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16448.9583" y="265.3119"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="265.625" x="16465.625" y="277.8118">loadSchema(w http.ResponseWriter, r *http.Request)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16448.9583" y="289.4784"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="246.875" x="16465.625" y="301.9784">getBlock(w http.ResponseWriter, r *http.Request)</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="16468.75" y="326.1449"/><ellipse cx="16452.0833" cy="340.9366" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="90.625" x="16465.625" y="350.3115">Listen(addr string)</text><!--MD5=[c49dd40aeb27704a865b8194d80dcc04]
class key.DocKey--><rect codeLine="932" fill="#2A9FD6" height="327.4988" id="key.DocKey" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="345.8333" x="16973.9583" y="2930.2083"/><ellipse cx="17117.7083" cy="2952.7083" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M17119.9056,2948.8997 Q17120.2799,2948.8997 17120.3939,2949.1113 Q17120.5241,2949.3229 17120.5241,2949.7135 L17120.5241,2950.8203 Q17120.5241,2951.6503 17119.9056,2951.6503 Q17119.8079,2951.6503 17119.7266,2951.6341 Q17119.6452,2951.6178 17119.5801,2951.5852 Q17119.5313,2951.5527 17119.4824,2951.5039 Q17119.4336,2951.4388 17119.401,2951.4062 Q17119.3848,2951.3736 17119.3522,2951.2923 Q17119.3359,2951.2109 17119.3197,2951.1946 Q17119.3197,2951.1621 17119.3034,2951.0807 Q17119.2871,2950.9993 17119.2871,2950.983 Q17119.2057,2950.6087 17118.7988,2950.3808 Q17118.3919,2950.1367 17117.806,2950.1367 Q17117.2201,2950.1367 17116.7969,2950.4134 Q17116.39,2950.6901 17116.39,2951.097 Q17116.39,2951.5201 17116.7969,2951.748 Q17117.2201,2951.9759 17117.7572,2952.0572 Q17118.3105,2952.1223 17118.9779,2952.3014 Q17119.6615,2952.4804 17120.0521,2952.7897 Q17120.7845,2953.3756 17120.7845,2954.3522 Q17120.7845,2955.3287 17119.987,2955.9309 Q17119.2057,2956.5332 17117.9199,2956.5332 Q17116.8945,2956.5332 17115.9831,2956.0449 Q17115.7227,2956.3378 17115.4785,2956.3378 Q17114.8438,2956.3378 17114.8438,2955.524 L17114.8438,2954.694 Q17114.8438,2954.2871 17114.974,2954.0755 Q17115.1204,2953.8639 17115.4622,2953.8639 Q17115.5762,2953.8639 17115.6576,2953.8964 Q17115.7552,2953.9127 17115.8203,2953.9615 Q17115.8854,2954.0104 17115.9342,2954.0592 Q17115.9831,2954.108 17115.9993,2954.1894 Q17116.0319,2954.2545 17116.0482,2954.3033 Q17116.0645,2954.3359 17116.0807,2954.401 Q17116.097,2954.4498 17116.097,2954.4661 Q17116.1947,2954.8079 17116.6992,2955.052 Q17117.2201,2955.2799 17117.8385,2955.2799 Q17118.5384,2955.2799 17119.0104,2955.0032 Q17119.4824,2954.7265 17119.4824,2954.3359 Q17119.4824,2953.9615 17119.1081,2953.7337 Q17118.75,2953.5058 17118.2617,2953.4407 Q17117.7897,2953.3593 17117.1387,2953.2128 Q17116.5039,2953.0501 17116.1133,2952.8385 Q17115.6413,2952.5618 17115.3646,2952.1061 Q17115.0879,2951.6341 17115.0879,2951.097 Q17115.0879,2950.1529 17115.8529,2949.5345 Q17116.6341,2948.8997 17117.806,2948.8997 Q17118.7663,2948.8997 17119.4173,2949.3066 Q17119.5313,2949.0624 17119.6289,2948.9811 Q17119.7266,2948.8997 17119.9056,2948.8997 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="39.5833" x="17142.7083" y="2962.4999">DocKey</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16975" x2="17318.75" y1="2975.2082" y2="2975.2082"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16982.2917" y="2983.5416"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="68.75" x="16998.9583" y="2996.0415">version uint16</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16982.2917" y="3007.7081"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="91.6667" x="16998.9583" y="3020.208">uuid go.uuid.UUID</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16982.2917" y="3031.8747"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="68.75" x="16998.9583" y="3044.3746">cid go-cid.Cid</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16982.2917" y="3056.0413"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="16998.9583" y="3068.5412">peerID string</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="16975" x2="17318.75" y1="3080.2078" y2="3080.2078"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="16982.2917" y="3088.5412"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="164.5833" x="16998.9583" y="3101.0411">subrec(subparts []string) DocKey</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="17002.0833" y="3125.2076"/><ellipse cx="16985.4167" cy="3139.9993" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="107.2917" x="16998.9583" y="3149.3742">UUID() go.uuid.UUID</text><ellipse cx="16985.4167" cy="3164.1658" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="67.7083" x="16998.9583" y="3173.5408">String() string</text><ellipse cx="16985.4167" cy="3188.3324" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="65.625" x="16998.9583" y="3197.7073">Bytes() []byte</text><ellipse cx="16985.4167" cy="3212.499" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="309.375" x="16998.9583" y="3221.8739">Verify(ctx context.Context, data go-cid.Cid, peerID string) bool</text><ellipse cx="16985.4167" cy="3236.6655" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="146.875" x="16998.9583" y="3246.0405">Sub(subname string) DocKey</text><!--MD5=[18e2154c2077a6a1832d3bc01e8f60d8]
class parser.CommitSelect--><rect codeLine="952" fill="#2A9FD6" height="448.3316" id="parser.CommitSelect" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="168.75" x="7348.9583" y="4915.1042"/><ellipse cx="7389.3229" cy="4937.6041" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M7391.5202,4933.7955 Q7391.8945,4933.7955 7392.0085,4934.0071 Q7392.1387,4934.2187 7392.1387,4934.6093 L7392.1387,4935.7161 Q7392.1387,4936.5462 7391.5202,4936.5462 Q7391.4225,4936.5462 7391.3411,4936.5299 Q7391.2598,4936.5136 7391.1947,4936.4811 Q7391.1458,4936.4485 7391.097,4936.3997 Q7391.0482,4936.3346 7391.0156,4936.302 Q7390.9993,4936.2695 7390.9668,4936.1881 Q7390.9505,4936.1067 7390.9342,4936.0904 Q7390.9342,4936.0579 7390.918,4935.9765 Q7390.9017,4935.8951 7390.9017,4935.8789 Q7390.8203,4935.5045 7390.4134,4935.2766 Q7390.0065,4935.0325 7389.4206,4935.0325 Q7388.8346,4935.0325 7388.4115,4935.3092 Q7388.0046,4935.5859 7388.0046,4935.9928 Q7388.0046,4936.416 7388.4115,4936.6438 Q7388.8346,4936.8717 7389.3717,4936.9531 Q7389.9251,4937.0182 7390.5924,4937.1972 Q7391.276,4937.3763 7391.6667,4937.6855 Q7392.3991,4938.2714 7392.3991,4939.248 Q7392.3991,4940.2246 7391.6016,4940.8268 Q7390.8203,4941.429 7389.5345,4941.429 Q7388.5091,4941.429 7387.5977,4940.9407 Q7387.3372,4941.2337 7387.0931,4941.2337 Q7386.4583,4941.2337 7386.4583,4940.4199 L7386.4583,4939.5898 Q7386.4583,4939.1829 7386.5885,4938.9713 Q7386.735,4938.7597 7387.0768,4938.7597 Q7387.1908,4938.7597 7387.2721,4938.7923 Q7387.3698,4938.8085 7387.4349,4938.8574 Q7387.5,4938.9062 7387.5488,4938.955 Q7387.5977,4939.0039 7387.6139,4939.0852 Q7387.6465,4939.1503 7387.6628,4939.1992 Q7387.679,4939.2317 7387.6953,4939.2968 Q7387.7116,4939.3457 7387.7116,4939.3619 Q7387.8092,4939.7037 7388.3138,4939.9479 Q7388.8346,4940.1757 7389.4531,4940.1757 Q7390.153,4940.1757 7390.625,4939.899 Q7391.097,4939.6223 7391.097,4939.2317 Q7391.097,4938.8574 7390.7227,4938.6295 Q7390.3646,4938.4016 7389.8763,4938.3365 Q7389.4043,4938.2552 7388.7533,4938.1087 Q7388.1185,4937.9459 7387.7279,4937.7343 Q7387.2559,4937.4576 7386.9792,4937.0019 Q7386.7025,4936.5299 7386.7025,4935.9928 Q7386.7025,4935.0488 7387.4674,4934.4303 Q7388.2487,4933.7955 7389.4206,4933.7955 Q7390.3809,4933.7955 7391.0319,4934.2024 Q7391.1458,4933.9583 7391.2435,4933.8769 Q7391.3411,4933.7955 7391.5202,4933.7955 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="69.7917" x="7413.8021" y="4947.3957">CommitSelect</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7350" x2="7516.6667" y1="4960.1041" y2="4960.1041"/><ellipse cx="7360.4167" cy="4971.5624" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="7373.9583" y="4980.9373">Alias string</text><ellipse cx="7360.4167" cy="4995.729" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="7373.9583" y="5005.1039">Name string</text><ellipse cx="7360.4167" cy="5019.8955" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="91.6667" x="7373.9583" y="5029.2704">Type CommitType</text><ellipse cx="7360.4167" cy="5044.0621" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="69.7917" x="7373.9583" y="5053.437">DocKey string</text><ellipse cx="7360.4167" cy="5068.2287" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="7373.9583" y="5077.6036">FieldName string</text><ellipse cx="7360.4167" cy="5092.3952" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="7373.9583" y="5101.7701">Cid string</text><ellipse cx="7360.4167" cy="5116.5618" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="7373.9583" y="5125.9367">Limit *Limit</text><ellipse cx="7360.4167" cy="5140.7283" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="7373.9583" y="5150.1033">OrderBy *OrderBy</text><ellipse cx="7360.4167" cy="5164.8949" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="7373.9583" y="5174.2698">Fields []Selection</text><ellipse cx="7360.4167" cy="5189.0615" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="7373.9583" y="5198.4364">Statement *ast.Field</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7350" x2="7516.6667" y1="5210.103" y2="5210.103"/><ellipse cx="7360.4167" cy="5221.5614" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="7373.9583" y="5230.9363">GetRoot() SelectionType</text><ellipse cx="7360.4167" cy="5245.7279" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="7373.9583" y="5255.1029">GetStatement() ast.Node</text><ellipse cx="7360.4167" cy="5269.8945" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="86.4583" x="7373.9583" y="5279.2694">GetName() string</text><ellipse cx="7360.4167" cy="5294.0611" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="79.1667" x="7373.9583" y="5303.436">GetAlias() string</text><ellipse cx="7360.4167" cy="5318.2276" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="7373.9583" y="5327.6025">GetSelections() []Selection</text><ellipse cx="7360.4167" cy="5342.3942" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="91.6667" x="7373.9583" y="5351.7691">ToSelect() *Select</text><!--MD5=[d4e310c64edc6451b5b0a51ce1789a1b]
class parser.EvalContext--><rect codeLine="972" fill="#2A9FD6" height="61.6666" id="parser.EvalContext" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="101.0417" x="6972.3958" y="3063.0208"/><ellipse cx="6986.9792" cy="3085.5208" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M6989.1764,3081.7122 Q6989.5508,3081.7122 6989.6647,3081.9238 Q6989.7949,3082.1354 6989.7949,3082.526 L6989.7949,3083.6328 Q6989.7949,3084.4628 6989.1764,3084.4628 Q6989.0788,3084.4628 6988.9974,3084.4466 Q6988.916,3084.4303 6988.8509,3084.3977 Q6988.8021,3084.3652 6988.7533,3084.3164 Q6988.7044,3084.2513 6988.6719,3084.2187 Q6988.6556,3084.1861 6988.623,3084.1048 Q6988.6068,3084.0234 6988.5905,3084.0071 Q6988.5905,3083.9746 6988.5742,3083.8932 Q6988.5579,3083.8118 6988.5579,3083.7955 Q6988.4766,3083.4212 6988.0697,3083.1933 Q6987.6628,3082.9492 6987.0768,3082.9492 Q6986.4909,3082.9492 6986.0677,3083.2259 Q6985.6608,3083.5026 6985.6608,3083.9095 Q6985.6608,3084.3326 6986.0677,3084.5605 Q6986.4909,3084.7884 6987.028,3084.8697 Q6987.5814,3084.9348 6988.2487,3085.1139 Q6988.9323,3085.2929 6989.3229,3085.6022 Q6990.0553,3086.1881 6990.0553,3087.1647 Q6990.0553,3088.1412 6989.2578,3088.7434 Q6988.4766,3089.3457 6987.1908,3089.3457 Q6986.1654,3089.3457 6985.2539,3088.8574 Q6984.9935,3089.1503 6984.7493,3089.1503 Q6984.1146,3089.1503 6984.1146,3088.3365 L6984.1146,3087.5065 Q6984.1146,3087.0996 6984.2448,3086.888 Q6984.3913,3086.6764 6984.7331,3086.6764 Q6984.847,3086.6764 6984.9284,3086.7089 Q6985.026,3086.7252 6985.0911,3086.774 Q6985.1563,3086.8229 6985.2051,3086.8717 Q6985.2539,3086.9205 6985.2702,3087.0019 Q6985.3027,3087.067 6985.319,3087.1158 Q6985.3353,3087.1484 6985.3516,3087.2135 Q6985.3678,3087.2623 6985.3678,3087.2786 Q6985.4655,3087.6204 6985.9701,3087.8645 Q6986.4909,3088.0924 6987.1094,3088.0924 Q6987.8092,3088.0924 6988.2813,3087.8157 Q6988.7533,3087.539 6988.7533,3087.1484 Q6988.7533,3086.774 6988.3789,3086.5462 Q6988.0208,3086.3183 6987.5326,3086.2532 Q6987.0605,3086.1718 6986.4095,3086.0253 Q6985.7747,3085.8626 6985.3841,3085.651 Q6984.9121,3085.3743 6984.6354,3084.9186 Q6984.3587,3084.4466 6984.3587,3083.9095 Q6984.3587,3082.9654 6985.1237,3082.347 Q6985.9049,3081.7122 6987.0768,3081.7122 Q6988.0371,3081.7122 6988.6882,3082.1191 Q6988.8021,3081.8749 6988.8997,3081.7936 Q6988.9974,3081.7122 6989.1764,3081.7122 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="59.375" x="7005.7292" y="3095.3124">EvalContext</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="6973.4375" x2="7072.3958" y1="3108.0207" y2="3108.0207"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="6973.4375" x2="7072.3958" y1="3116.3541" y2="3116.3541"/><!--MD5=[71c3125baf9454e044a3821687f824fb]
class parser.Field--><rect codeLine="974" fill="#2A9FD6" height="279.1656" id="parser.Field" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="168.75" x="7554.1667" y="4999.4792"/><ellipse cx="7617.1875" cy="5021.9791" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M7619.3848,5018.1705 Q7619.7591,5018.1705 7619.873,5018.3821 Q7620.0033,5018.5937 7620.0033,5018.9843 L7620.0033,5020.0911 Q7620.0033,5020.9212 7619.3848,5020.9212 Q7619.2871,5020.9212 7619.2057,5020.9049 Q7619.1243,5020.8886 7619.0592,5020.8561 Q7619.0104,5020.8235 7618.9616,5020.7747 Q7618.9128,5020.7096 7618.8802,5020.677 Q7618.8639,5020.6445 7618.8314,5020.5631 Q7618.8151,5020.4817 7618.7988,5020.4654 Q7618.7988,5020.4329 7618.7826,5020.3515 Q7618.7663,5020.2701 7618.7663,5020.2539 Q7618.6849,5019.8795 7618.278,5019.6516 Q7617.8711,5019.4075 7617.2852,5019.4075 Q7616.6992,5019.4075 7616.276,5019.6842 Q7615.8691,5019.9609 7615.8691,5020.3678 Q7615.8691,5020.791 7616.276,5021.0188 Q7616.6992,5021.2467 7617.2363,5021.3281 Q7617.7897,5021.3932 7618.457,5021.5722 Q7619.1406,5021.7513 7619.5313,5022.0605 Q7620.2637,5022.6464 7620.2637,5023.623 Q7620.2637,5024.5996 7619.4661,5025.2018 Q7618.6849,5025.804 7617.3991,5025.804 Q7616.3737,5025.804 7615.4622,5025.3157 Q7615.2018,5025.6087 7614.9577,5025.6087 Q7614.3229,5025.6087 7614.3229,5024.7949 L7614.3229,5023.9648 Q7614.3229,5023.5579 7614.4531,5023.3463 Q7614.5996,5023.1347 7614.9414,5023.1347 Q7615.0553,5023.1347 7615.1367,5023.1673 Q7615.2344,5023.1835 7615.2995,5023.2324 Q7615.3646,5023.2812 7615.4134,5023.33 Q7615.4622,5023.3789 7615.4785,5023.4602 Q7615.5111,5023.5253 7615.5273,5023.5742 Q7615.5436,5023.6067 7615.5599,5023.6718 Q7615.5762,5023.7207 7615.5762,5023.7369 Q7615.6738,5024.0787 7616.1784,5024.3229 Q7616.6992,5024.5507 7617.3177,5024.5507 Q7618.0176,5024.5507 7618.4896,5024.274 Q7618.9616,5023.9973 7618.9616,5023.6067 Q7618.9616,5023.2324 7618.5872,5023.0045 Q7618.2292,5022.7766 7617.7409,5022.7115 Q7617.2689,5022.6302 7616.6178,5022.4837 Q7615.9831,5022.3209 7615.5924,5022.1093 Q7615.1204,5021.8326 7614.8438,5021.3769 Q7614.5671,5020.9049 7614.5671,5020.3678 Q7614.5671,5019.4238 7615.332,5018.8053 Q7616.1133,5018.1705 7617.2852,5018.1705 Q7618.2454,5018.1705 7618.8965,5018.5774 Q7619.0104,5018.3333 7619.1081,5018.2519 Q7619.2057,5018.1705 7619.3848,5018.1705 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="23.9583" x="7642.1875" y="5031.7707">Field</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7555.2083" x2="7721.875" y1="5044.4791" y2="5044.4791"/><ellipse cx="7565.625" cy="5055.9374" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="7579.1667" y="5065.3123">Name string</text><ellipse cx="7565.625" cy="5080.104" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="7579.1667" y="5089.4789">Alias string</text><ellipse cx="7565.625" cy="5104.2705" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="97.9167" x="7579.1667" y="5113.6454">Root SelectionType</text><ellipse cx="7565.625" cy="5128.4371" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="7579.1667" y="5137.812">Statement *ast.Field</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7555.2083" x2="7721.875" y1="5149.4787" y2="5149.4787"/><ellipse cx="7565.625" cy="5160.937" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="7579.1667" y="5170.3119">GetRoot() SelectionType</text><ellipse cx="7565.625" cy="5185.1036" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="7579.1667" y="5194.4785">GetSelections() []Selection</text><ellipse cx="7565.625" cy="5209.2701" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="86.4583" x="7579.1667" y="5218.645">GetName() string</text><ellipse cx="7565.625" cy="5233.4367" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="79.1667" x="7579.1667" y="5242.8116">GetAlias() string</text><ellipse cx="7565.625" cy="5257.6032" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="7579.1667" y="5266.9782">GetStatement() ast.Node</text><!--MD5=[9656924347216af0089462a47b3fb717]
class parser.Filter--><rect codeLine="987" fill="#2A9FD6" height="109.9997" id="parser.Filter" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="198.9583" x="7109.8958" y="3038.5417"/><ellipse cx="7187.5" cy="3061.0416" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M7189.6973,3057.233 Q7190.0716,3057.233 7190.1855,3057.4446 Q7190.3158,3057.6562 7190.3158,3058.0468 L7190.3158,3059.1536 Q7190.3158,3059.9837 7189.6973,3059.9837 Q7189.5996,3059.9837 7189.5182,3059.9674 Q7189.4368,3059.9511 7189.3717,3059.9186 Q7189.3229,3059.886 7189.2741,3059.8372 Q7189.2253,3059.7721 7189.1927,3059.7395 Q7189.1764,3059.707 7189.1439,3059.6256 Q7189.1276,3059.5442 7189.1113,3059.5279 Q7189.1113,3059.4954 7189.0951,3059.414 Q7189.0788,3059.3326 7189.0788,3059.3164 Q7188.9974,3058.942 7188.5905,3058.7141 Q7188.1836,3058.47 7187.5977,3058.47 Q7187.0117,3058.47 7186.5885,3058.7467 Q7186.1816,3059.0234 7186.1816,3059.4303 Q7186.1816,3059.8535 7186.5885,3060.0813 Q7187.0117,3060.3092 7187.5488,3060.3906 Q7188.1022,3060.4557 7188.7695,3060.6347 Q7189.4531,3060.8138 7189.8438,3061.123 Q7190.5762,3061.7089 7190.5762,3062.6855 Q7190.5762,3063.6621 7189.7786,3064.2643 Q7188.9974,3064.8665 7187.7116,3064.8665 Q7186.6862,3064.8665 7185.7747,3064.3782 Q7185.5143,3064.6712 7185.2702,3064.6712 Q7184.6354,3064.6712 7184.6354,3063.8574 L7184.6354,3063.0273 Q7184.6354,3062.6204 7184.7656,3062.4088 Q7184.9121,3062.1972 7185.2539,3062.1972 Q7185.3678,3062.1972 7185.4492,3062.2298 Q7185.5469,3062.246 7185.612,3062.2949 Q7185.6771,3062.3437 7185.7259,3062.3925 Q7185.7747,3062.4414 7185.791,3062.5227 Q7185.8236,3062.5878 7185.8398,3062.6367 Q7185.8561,3062.6692 7185.8724,3062.7343 Q7185.8887,3062.7832 7185.8887,3062.7994 Q7185.9863,3063.1412 7186.4909,3063.3854 Q7187.0117,3063.6132 7187.6302,3063.6132 Q7188.3301,3063.6132 7188.8021,3063.3365 Q7189.2741,3063.0598 7189.2741,3062.6692 Q7189.2741,3062.2949 7188.8997,3062.067 Q7188.5417,3061.8391 7188.0534,3061.774 Q7187.5814,3061.6927 7186.9303,3061.5462 Q7186.2956,3061.3834 7185.9049,3061.1718 Q7185.4329,3060.8951 7185.1563,3060.4394 Q7184.8796,3059.9674 7184.8796,3059.4303 Q7184.8796,3058.4863 7185.6445,3057.8678 Q7186.4258,3057.233 7187.5977,3057.233 Q7188.5579,3057.233 7189.209,3057.6399 Q7189.3229,3057.3958 7189.4206,3057.3144 Q7189.5182,3057.233 7189.6973,3057.233 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="25" x="7212.5" y="3070.8332">Filter</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7110.9375" x2="7307.8125" y1="3083.5416" y2="3083.5416"/><ellipse cx="7121.3542" cy="3094.9999" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="7134.8958" y="3104.3748">Conditions</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="7190.1042" y="3104.3748">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="7211.9792" y="3104.3748">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="7245.3125" y="3104.3748">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="7289.0625" y="3104.3748">{}</text><ellipse cx="7121.3542" cy="3119.1665" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="138.5417" x="7134.8958" y="3128.5414">Statement *ast.ObjectValue</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7110.9375" x2="7307.8125" y1="3140.208" y2="3140.208"/><!--MD5=[f817172377aed58c55076e593898c744]
class parser.GroupBy--><rect codeLine="992" fill="#2A9FD6" height="85.8331" id="parser.GroupBy" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="102.0833" x="7345.8333" y="3051.0417"/><ellipse cx="7367.9167" cy="3073.5416" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M7370.1139,3069.733 Q7370.4883,3069.733 7370.6022,3069.9446 Q7370.7324,3070.1562 7370.7324,3070.5468 L7370.7324,3071.6536 Q7370.7324,3072.4837 7370.1139,3072.4837 Q7370.0163,3072.4837 7369.9349,3072.4674 Q7369.8535,3072.4511 7369.7884,3072.4186 Q7369.7396,3072.386 7369.6908,3072.3372 Q7369.6419,3072.2721 7369.6094,3072.2395 Q7369.5931,3072.207 7369.5605,3072.1256 Q7369.5443,3072.0442 7369.528,3072.0279 Q7369.528,3071.9954 7369.5117,3071.914 Q7369.4954,3071.8326 7369.4954,3071.8164 Q7369.4141,3071.442 7369.0072,3071.2141 Q7368.6003,3070.97 7368.0143,3070.97 Q7367.4284,3070.97 7367.0052,3071.2467 Q7366.5983,3071.5234 7366.5983,3071.9303 Q7366.5983,3072.3535 7367.0052,3072.5813 Q7367.4284,3072.8092 7367.9655,3072.8906 Q7368.5189,3072.9557 7369.1862,3073.1347 Q7369.8698,3073.3138 7370.2604,3073.623 Q7370.9928,3074.2089 7370.9928,3075.1855 Q7370.9928,3076.1621 7370.1953,3076.7643 Q7369.4141,3077.3665 7368.1283,3077.3665 Q7367.1029,3077.3665 7366.1914,3076.8782 Q7365.931,3077.1712 7365.6868,3077.1712 Q7365.0521,3077.1712 7365.0521,3076.3574 L7365.0521,3075.5273 Q7365.0521,3075.1204 7365.1823,3074.9088 Q7365.3288,3074.6972 7365.6706,3074.6972 Q7365.7845,3074.6972 7365.8659,3074.7298 Q7365.9635,3074.746 7366.0286,3074.7949 Q7366.0938,3074.8437 7366.1426,3074.8925 Q7366.1914,3074.9414 7366.2077,3075.0227 Q7366.2402,3075.0878 7366.2565,3075.1367 Q7366.2728,3075.1692 7366.2891,3075.2343 Q7366.3053,3075.2832 7366.3053,3075.2994 Q7366.403,3075.6412 7366.9076,3075.8854 Q7367.4284,3076.1132 7368.0469,3076.1132 Q7368.7467,3076.1132 7369.2188,3075.8365 Q7369.6908,3075.5598 7369.6908,3075.1692 Q7369.6908,3074.7949 7369.3164,3074.567 Q7368.9583,3074.3391 7368.4701,3074.274 Q7367.998,3074.1927 7367.347,3074.0462 Q7366.7122,3073.8834 7366.3216,3073.6718 Q7365.8496,3073.3951 7365.5729,3072.9394 Q7365.2962,3072.4674 7365.2962,3071.9303 Q7365.2962,3070.9863 7366.0612,3070.3678 Q7366.8424,3069.733 7368.0143,3069.733 Q7368.9746,3069.733 7369.6257,3070.1399 Q7369.7396,3069.8958 7369.8372,3069.8144 Q7369.9349,3069.733 7370.1139,3069.733 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="7388.3333" y="3083.3332">GroupBy</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7346.875" x2="7446.875" y1="3096.0416" y2="3096.0416"/><ellipse cx="7357.2917" cy="3107.4999" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="65.625" x="7370.8333" y="3116.8748">Fields []string</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7346.875" x2="7446.875" y1="3128.5415" y2="3128.5415"/><!--MD5=[13837253f8a08157a3d0a777f6e7f50c]
class parser.Limit--><rect codeLine="996" fill="#2A9FD6" height="109.9997" id="parser.Limit" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="93.75" x="7484.375" y="3038.5417"/><ellipse cx="7512.0833" cy="3061.0416" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M7514.2806,3057.233 Q7514.6549,3057.233 7514.7689,3057.4446 Q7514.8991,3057.6562 7514.8991,3058.0468 L7514.8991,3059.1536 Q7514.8991,3059.9837 7514.2806,3059.9837 Q7514.1829,3059.9837 7514.1016,3059.9674 Q7514.0202,3059.9511 7513.9551,3059.9186 Q7513.9063,3059.886 7513.8574,3059.8372 Q7513.8086,3059.7721 7513.776,3059.7395 Q7513.7598,3059.707 7513.7272,3059.6256 Q7513.7109,3059.5442 7513.6947,3059.5279 Q7513.6947,3059.4954 7513.6784,3059.414 Q7513.6621,3059.3326 7513.6621,3059.3164 Q7513.5807,3058.942 7513.1738,3058.7141 Q7512.7669,3058.47 7512.181,3058.47 Q7511.5951,3058.47 7511.1719,3058.7467 Q7510.765,3059.0234 7510.765,3059.4303 Q7510.765,3059.8535 7511.1719,3060.0813 Q7511.5951,3060.3092 7512.1322,3060.3906 Q7512.6855,3060.4557 7513.3529,3060.6347 Q7514.0365,3060.8138 7514.4271,3061.123 Q7515.1595,3061.7089 7515.1595,3062.6855 Q7515.1595,3063.6621 7514.362,3064.2643 Q7513.5807,3064.8665 7512.2949,3064.8665 Q7511.2695,3064.8665 7510.3581,3064.3782 Q7510.0977,3064.6712 7509.8535,3064.6712 Q7509.2188,3064.6712 7509.2188,3063.8574 L7509.2188,3063.0273 Q7509.2188,3062.6204 7509.349,3062.4088 Q7509.4954,3062.1972 7509.8372,3062.1972 Q7509.9512,3062.1972 7510.0326,3062.2298 Q7510.1302,3062.246 7510.1953,3062.2949 Q7510.2604,3062.3437 7510.3092,3062.3925 Q7510.3581,3062.4414 7510.3743,3062.5227 Q7510.4069,3062.5878 7510.4232,3062.6367 Q7510.4395,3062.6692 7510.4557,3062.7343 Q7510.472,3062.7832 7510.472,3062.7994 Q7510.5697,3063.1412 7511.0742,3063.3854 Q7511.5951,3063.6132 7512.2135,3063.6132 Q7512.9134,3063.6132 7513.3854,3063.3365 Q7513.8574,3063.0598 7513.8574,3062.6692 Q7513.8574,3062.2949 7513.4831,3062.067 Q7513.125,3061.8391 7512.6367,3061.774 Q7512.1647,3061.6927 7511.5137,3061.5462 Q7510.8789,3061.3834 7510.4883,3061.1718 Q7510.0163,3060.8951 7509.7396,3060.4394 Q7509.4629,3059.9674 7509.4629,3059.4303 Q7509.4629,3058.4863 7510.2279,3057.8678 Q7511.0091,3057.233 7512.181,3057.233 Q7513.1413,3057.233 7513.7923,3057.6399 Q7513.9063,3057.3958 7514.0039,3057.3144 Q7514.1016,3057.233 7514.2806,3057.233 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="22.9167" x="7533.75" y="3070.8332">Limit</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7485.4167" x2="7577.0833" y1="3083.5416" y2="3083.5416"/><ellipse cx="7495.8333" cy="3094.9999" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="7509.375" y="3104.3748">Limit int64</text><ellipse cx="7495.8333" cy="3119.1665" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="7509.375" y="3128.5414">Offset int64</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7485.4167" x2="7577.0833" y1="3140.208" y2="3140.208"/><!--MD5=[25f814b3c49657de4480485a5d55310a]
class parser.Mutation--><rect codeLine="1001" fill="#2A9FD6" height="424.165" id="parser.Mutation" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="168.75" x="7759.375" y="4927.0833"/><ellipse cx="7813.0208" cy="4949.5833" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M7815.2181,4945.7747 Q7815.5924,4945.7747 7815.7064,4945.9863 Q7815.8366,4946.1979 7815.8366,4946.5885 L7815.8366,4947.6953 Q7815.8366,4948.5253 7815.2181,4948.5253 Q7815.1204,4948.5253 7815.0391,4948.5091 Q7814.9577,4948.4928 7814.8926,4948.4602 Q7814.8438,4948.4277 7814.7949,4948.3789 Q7814.7461,4948.3138 7814.7135,4948.2812 Q7814.6973,4948.2486 7814.6647,4948.1673 Q7814.6484,4948.0859 7814.6322,4948.0696 Q7814.6322,4948.0371 7814.6159,4947.9557 Q7814.5996,4947.8743 7814.5996,4947.858 Q7814.5182,4947.4837 7814.1113,4947.2558 Q7813.7044,4947.0117 7813.1185,4947.0117 Q7812.5326,4947.0117 7812.1094,4947.2884 Q7811.7025,4947.5651 7811.7025,4947.972 Q7811.7025,4948.3951 7812.1094,4948.623 Q7812.5326,4948.8509 7813.0697,4948.9322 Q7813.623,4948.9973 7814.2904,4949.1764 Q7814.974,4949.3554 7815.3646,4949.6647 Q7816.097,4950.2506 7816.097,4951.2272 Q7816.097,4952.2037 7815.2995,4952.8059 Q7814.5182,4953.4082 7813.2324,4953.4082 Q7812.207,4953.4082 7811.2956,4952.9199 Q7811.0352,4953.2128 7810.791,4953.2128 Q7810.1563,4953.2128 7810.1563,4952.399 L7810.1563,4951.569 Q7810.1563,4951.1621 7810.2865,4950.9505 Q7810.4329,4950.7389 7810.7747,4950.7389 Q7810.8887,4950.7389 7810.9701,4950.7714 Q7811.0677,4950.7877 7811.1328,4950.8365 Q7811.1979,4950.8854 7811.2467,4950.9342 Q7811.2956,4950.983 7811.3118,4951.0644 Q7811.3444,4951.1295 7811.3607,4951.1783 Q7811.377,4951.2109 7811.3932,4951.276 Q7811.4095,4951.3248 7811.4095,4951.3411 Q7811.5072,4951.6829 7812.0117,4951.927 Q7812.5326,4952.1549 7813.151,4952.1549 Q7813.8509,4952.1549 7814.3229,4951.8782 Q7814.7949,4951.6015 7814.7949,4951.2109 Q7814.7949,4950.8365 7814.4206,4950.6087 Q7814.0625,4950.3808 7813.5742,4950.3157 Q7813.1022,4950.2343 7812.4512,4950.0878 Q7811.8164,4949.9251 7811.4258,4949.7135 Q7810.9538,4949.4368 7810.6771,4948.9811 Q7810.4004,4948.5091 7810.4004,4947.972 Q7810.4004,4947.0279 7811.1654,4946.4095 Q7811.9466,4945.7747 7813.1185,4945.7747 Q7814.0788,4945.7747 7814.7298,4946.1816 Q7814.8438,4945.9374 7814.9414,4945.8561 Q7815.0391,4945.7747 7815.2181,4945.7747 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="42.7083" x="7838.0208" y="4959.3749">Mutation</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7760.4167" x2="7927.0833" y1="4972.0832" y2="4972.0832"/><ellipse cx="7770.8333" cy="4983.5416" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="7784.375" y="4992.9165">Name string</text><ellipse cx="7770.8333" cy="5007.7081" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="7784.375" y="5017.083">Alias string</text><ellipse cx="7770.8333" cy="5031.8747" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="7784.375" y="5041.2496">Type MutationType</text><ellipse cx="7770.8333" cy="5056.0413" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="71.875" x="7784.375" y="5065.4162">Schema string</text><ellipse cx="7770.8333" cy="5080.2078" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="7784.375" y="5089.5827">IDs []string</text><ellipse cx="7770.8333" cy="5104.3744" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="7784.375" y="5113.7493">Filter *Filter</text><ellipse cx="7770.8333" cy="5128.5409" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="54.1667" x="7784.375" y="5137.9159">Data string</text><ellipse cx="7770.8333" cy="5152.7075" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="7784.375" y="5162.0824">Fields []Selection</text><ellipse cx="7770.8333" cy="5176.8741" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="7784.375" y="5186.249">Statement *ast.Field</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7760.4167" x2="7927.0833" y1="5197.9156" y2="5197.9156"/><ellipse cx="7770.8333" cy="5209.374" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="7784.375" y="5218.7489">GetRoot() SelectionType</text><ellipse cx="7770.8333" cy="5233.5405" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="7784.375" y="5242.9155">GetStatement() ast.Node</text><ellipse cx="7770.8333" cy="5257.7071" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="7784.375" y="5267.082">GetSelections() []Selection</text><ellipse cx="7770.8333" cy="5281.8737" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="86.4583" x="7784.375" y="5291.2486">GetName() string</text><ellipse cx="7770.8333" cy="5306.0402" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="79.1667" x="7784.375" y="5315.4151">GetAlias() string</text><ellipse cx="7770.8333" cy="5330.2068" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="91.6667" x="7784.375" y="5339.5817">ToSelect() *Select</text><!--MD5=[60880917434ce4f712a95c1ec656968e]
class parser.ObjectPayload--><rect codeLine="1020" fill="#2A9FD6" height="109.9997" id="parser.ObjectPayload" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="181.25" x="6903.125" y="3900"/><ellipse cx="6947.3958" cy="3922.4999" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M6949.5931,3918.6914 Q6949.9674,3918.6914 6950.0814,3918.9029 Q6950.2116,3919.1145 6950.2116,3919.5052 L6950.2116,3920.6119 Q6950.2116,3921.442 6949.5931,3921.442 Q6949.4954,3921.442 6949.4141,3921.4257 Q6949.3327,3921.4095 6949.2676,3921.3769 Q6949.2188,3921.3443 6949.1699,3921.2955 Q6949.1211,3921.2304 6949.0885,3921.1979 Q6949.0723,3921.1653 6949.0397,3921.0839 Q6949.0234,3921.0026 6949.0072,3920.9863 Q6949.0072,3920.9537 6948.9909,3920.8723 Q6948.9746,3920.791 6948.9746,3920.7747 Q6948.8932,3920.4003 6948.4863,3920.1725 Q6948.0794,3919.9283 6947.4935,3919.9283 Q6946.9076,3919.9283 6946.4844,3920.205 Q6946.0775,3920.4817 6946.0775,3920.8886 Q6946.0775,3921.3118 6946.4844,3921.5397 Q6946.9076,3921.7675 6947.4447,3921.8489 Q6947.998,3921.914 6948.6654,3922.093 Q6949.349,3922.2721 6949.7396,3922.5813 Q6950.472,3923.1673 6950.472,3924.1438 Q6950.472,3925.1204 6949.6745,3925.7226 Q6948.8932,3926.3248 6947.6074,3926.3248 Q6946.582,3926.3248 6945.6706,3925.8365 Q6945.4102,3926.1295 6945.166,3926.1295 Q6944.5313,3926.1295 6944.5313,3925.3157 L6944.5313,3924.4856 Q6944.5313,3924.0787 6944.6615,3923.8671 Q6944.8079,3923.6555 6945.1497,3923.6555 Q6945.2637,3923.6555 6945.3451,3923.6881 Q6945.4427,3923.7044 6945.5078,3923.7532 Q6945.5729,3923.802 6945.6217,3923.8509 Q6945.6706,3923.8997 6945.6868,3923.9811 Q6945.7194,3924.0462 6945.7357,3924.095 Q6945.752,3924.1276 6945.7682,3924.1927 Q6945.7845,3924.2415 6945.7845,3924.2578 Q6945.8822,3924.5996 6946.3867,3924.8437 Q6946.9076,3925.0716 6947.526,3925.0716 Q6948.2259,3925.0716 6948.6979,3924.7949 Q6949.1699,3924.5182 6949.1699,3924.1276 Q6949.1699,3923.7532 6948.7956,3923.5253 Q6948.4375,3923.2975 6947.9492,3923.2324 Q6947.4772,3923.151 6946.8262,3923.0045 Q6946.1914,3922.8417 6945.8008,3922.6302 Q6945.3288,3922.3535 6945.0521,3921.8977 Q6944.7754,3921.4257 6944.7754,3920.8886 Q6944.7754,3919.9446 6945.5404,3919.3261 Q6946.3216,3918.6914 6947.4935,3918.6914 Q6948.4538,3918.6914 6949.1048,3919.0983 Q6949.2188,3918.8541 6949.3164,3918.7727 Q6949.4141,3918.6914 6949.5931,3918.6914 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="73.9583" x="6972.3958" y="3932.2916">ObjectPayload</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="6904.1667" x2="7083.3333" y1="3944.9999" y2="3944.9999"/><ellipse cx="6914.5833" cy="3956.4582" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="34.375" x="6928.125" y="3965.8331">Object</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="6965.625" y="3965.8331">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="6987.5" y="3965.8331">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="7020.8333" y="3965.8331">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="7064.5833" y="3965.8331">{}</text><ellipse cx="6914.5833" cy="3980.6248" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="6928.125" y="3989.9997">Array []</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="6964.5833" y="3989.9997">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="7008.3333" y="3989.9997">{}</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="6904.1667" x2="7083.3333" y1="4001.6664" y2="4001.6664"/><!--MD5=[9ba21922c7a4234cc9a192d3d5eae84f]
class parser.OperationDefinition--><rect codeLine="1025" fill="#2A9FD6" height="158.3328" id="parser.OperationDefinition" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="208.3333" x="7839.5833" y="3876.0417"/><ellipse cx="7886.4583" cy="3898.5416" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M7888.6556,3894.733 Q7889.0299,3894.733 7889.1439,3894.9446 Q7889.2741,3895.1562 7889.2741,3895.5468 L7889.2741,3896.6536 Q7889.2741,3897.4837 7888.6556,3897.4837 Q7888.5579,3897.4837 7888.4766,3897.4674 Q7888.3952,3897.4511 7888.3301,3897.4186 Q7888.2813,3897.386 7888.2324,3897.3372 Q7888.1836,3897.2721 7888.151,3897.2395 Q7888.1348,3897.207 7888.1022,3897.1256 Q7888.0859,3897.0442 7888.0697,3897.0279 Q7888.0697,3896.9954 7888.0534,3896.914 Q7888.0371,3896.8326 7888.0371,3896.8164 Q7887.9557,3896.442 7887.5488,3896.2141 Q7887.1419,3895.97 7886.556,3895.97 Q7885.9701,3895.97 7885.5469,3896.2467 Q7885.14,3896.5234 7885.14,3896.9303 Q7885.14,3897.3535 7885.5469,3897.5813 Q7885.9701,3897.8092 7886.5072,3897.8906 Q7887.0605,3897.9557 7887.7279,3898.1347 Q7888.4115,3898.3138 7888.8021,3898.623 Q7889.5345,3899.2089 7889.5345,3900.1855 Q7889.5345,3901.1621 7888.737,3901.7643 Q7887.9557,3902.3665 7886.6699,3902.3665 Q7885.6445,3902.3665 7884.7331,3901.8782 Q7884.4727,3902.1712 7884.2285,3902.1712 Q7883.5938,3902.1712 7883.5938,3901.3574 L7883.5938,3900.5273 Q7883.5938,3900.1204 7883.724,3899.9088 Q7883.8704,3899.6972 7884.2122,3899.6972 Q7884.3262,3899.6972 7884.4076,3899.7298 Q7884.5052,3899.746 7884.5703,3899.7949 Q7884.6354,3899.8437 7884.6842,3899.8925 Q7884.7331,3899.9414 7884.7493,3900.0227 Q7884.7819,3900.0878 7884.7982,3900.1367 Q7884.8145,3900.1692 7884.8307,3900.2343 Q7884.847,3900.2832 7884.847,3900.2994 Q7884.9447,3900.6412 7885.4492,3900.8854 Q7885.9701,3901.1132 7886.5885,3901.1132 Q7887.2884,3901.1132 7887.7604,3900.8365 Q7888.2324,3900.5598 7888.2324,3900.1692 Q7888.2324,3899.7949 7887.8581,3899.567 Q7887.5,3899.3391 7887.0117,3899.274 Q7886.5397,3899.1927 7885.8887,3899.0462 Q7885.2539,3898.8834 7884.8633,3898.6718 Q7884.3913,3898.3951 7884.1146,3897.9394 Q7883.8379,3897.4674 7883.8379,3896.9303 Q7883.8379,3895.9863 7884.6029,3895.3678 Q7885.3841,3894.733 7886.556,3894.733 Q7887.5163,3894.733 7888.1673,3895.1399 Q7888.2813,3894.8958 7888.3789,3894.8144 Q7888.4766,3894.733 7888.6556,3894.733 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="7911.4583" y="3908.3332">OperationDefinition</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7840.625" x2="8046.875" y1="3921.0416" y2="3921.0416"/><ellipse cx="7851.0417" cy="3932.4999" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="7864.5833" y="3941.8748">Name string</text><ellipse cx="7851.0417" cy="3956.6665" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="7864.5833" y="3966.0414">Selections []Selection</text><ellipse cx="7851.0417" cy="3980.833" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="171.875" x="7864.5833" y="3990.2079">Statement *ast.OperationDefinition</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7840.625" x2="8046.875" y1="4001.8746" y2="4001.8746"/><ellipse cx="7851.0417" cy="4013.3329" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="7864.5833" y="4022.7078">GetStatement() ast.Node</text><!--MD5=[f6ef474e31a7661e2916266d6133cd3b]
class parser.OrderBy--><rect codeLine="1033" fill="#2A9FD6" height="109.9997" id="parser.OrderBy" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="175" x="7120.8333" y="3900"/><ellipse cx="7177.6042" cy="3922.4999" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M7179.8014,3918.6914 Q7180.1758,3918.6914 7180.2897,3918.9029 Q7180.4199,3919.1145 7180.4199,3919.5052 L7180.4199,3920.6119 Q7180.4199,3921.442 7179.8014,3921.442 Q7179.7038,3921.442 7179.6224,3921.4257 Q7179.541,3921.4095 7179.4759,3921.3769 Q7179.4271,3921.3443 7179.3783,3921.2955 Q7179.3294,3921.2304 7179.2969,3921.1979 Q7179.2806,3921.1653 7179.248,3921.0839 Q7179.2318,3921.0026 7179.2155,3920.9863 Q7179.2155,3920.9537 7179.1992,3920.8723 Q7179.1829,3920.791 7179.1829,3920.7747 Q7179.1016,3920.4003 7178.6947,3920.1725 Q7178.2878,3919.9283 7177.7018,3919.9283 Q7177.1159,3919.9283 7176.6927,3920.205 Q7176.2858,3920.4817 7176.2858,3920.8886 Q7176.2858,3921.3118 7176.6927,3921.5397 Q7177.1159,3921.7675 7177.653,3921.8489 Q7178.2064,3921.914 7178.8737,3922.093 Q7179.5573,3922.2721 7179.9479,3922.5813 Q7180.6803,3923.1673 7180.6803,3924.1438 Q7180.6803,3925.1204 7179.8828,3925.7226 Q7179.1016,3926.3248 7177.8158,3926.3248 Q7176.7904,3926.3248 7175.8789,3925.8365 Q7175.6185,3926.1295 7175.3743,3926.1295 Q7174.7396,3926.1295 7174.7396,3925.3157 L7174.7396,3924.4856 Q7174.7396,3924.0787 7174.8698,3923.8671 Q7175.0163,3923.6555 7175.3581,3923.6555 Q7175.472,3923.6555 7175.5534,3923.6881 Q7175.651,3923.7044 7175.7161,3923.7532 Q7175.7813,3923.802 7175.8301,3923.8509 Q7175.8789,3923.8997 7175.8952,3923.9811 Q7175.9277,3924.0462 7175.944,3924.095 Q7175.9603,3924.1276 7175.9766,3924.1927 Q7175.9928,3924.2415 7175.9928,3924.2578 Q7176.0905,3924.5996 7176.5951,3924.8437 Q7177.1159,3925.0716 7177.7344,3925.0716 Q7178.4342,3925.0716 7178.9063,3924.7949 Q7179.3783,3924.5182 7179.3783,3924.1276 Q7179.3783,3923.7532 7179.0039,3923.5253 Q7178.6458,3923.2975 7178.1576,3923.2324 Q7177.6855,3923.151 7177.0345,3923.0045 Q7176.3997,3922.8417 7176.0091,3922.6302 Q7175.5371,3922.3535 7175.2604,3921.8977 Q7174.9837,3921.4257 7174.9837,3920.8886 Q7174.9837,3919.9446 7175.7487,3919.3261 Q7176.5299,3918.6914 7177.7018,3918.6914 Q7178.6621,3918.6914 7179.3132,3919.0983 Q7179.4271,3918.8541 7179.5247,3918.7727 Q7179.6224,3918.6914 7179.8014,3918.6914 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="42.7083" x="7202.6042" y="3932.2916">OrderBy</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7121.875" x2="7294.7917" y1="3944.9999" y2="3944.9999"/><ellipse cx="7132.2917" cy="3956.4582" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="7145.8333" y="3965.8331">Conditions []SortCondition</text><ellipse cx="7132.2917" cy="3980.6248" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="138.5417" x="7145.8333" y="3989.9997">Statement *ast.ObjectValue</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7121.875" x2="7294.7917" y1="4001.6664" y2="4001.6664"/><!--MD5=[a349c9ca814c23274fa404db0499ca3d]
class parser.Query--><rect codeLine="1038" fill="#2A9FD6" height="158.3328" id="parser.Query" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="193.75" x="8084.375" y="3876.0417"/><ellipse cx="8156.25" cy="3898.5416" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M8158.4473,3894.733 Q8158.8216,3894.733 8158.9355,3894.9446 Q8159.0658,3895.1562 8159.0658,3895.5468 L8159.0658,3896.6536 Q8159.0658,3897.4837 8158.4473,3897.4837 Q8158.3496,3897.4837 8158.2682,3897.4674 Q8158.1868,3897.4511 8158.1217,3897.4186 Q8158.0729,3897.386 8158.0241,3897.3372 Q8157.9753,3897.2721 8157.9427,3897.2395 Q8157.9264,3897.207 8157.8939,3897.1256 Q8157.8776,3897.0442 8157.8613,3897.0279 Q8157.8613,3896.9954 8157.8451,3896.914 Q8157.8288,3896.8326 8157.8288,3896.8164 Q8157.7474,3896.442 8157.3405,3896.2141 Q8156.9336,3895.97 8156.3477,3895.97 Q8155.7617,3895.97 8155.3385,3896.2467 Q8154.9316,3896.5234 8154.9316,3896.9303 Q8154.9316,3897.3535 8155.3385,3897.5813 Q8155.7617,3897.8092 8156.2988,3897.8906 Q8156.8522,3897.9557 8157.5195,3898.1347 Q8158.2031,3898.3138 8158.5938,3898.623 Q8159.3262,3899.2089 8159.3262,3900.1855 Q8159.3262,3901.1621 8158.5286,3901.7643 Q8157.7474,3902.3665 8156.4616,3902.3665 Q8155.4362,3902.3665 8154.5247,3901.8782 Q8154.2643,3902.1712 8154.0202,3902.1712 Q8153.3854,3902.1712 8153.3854,3901.3574 L8153.3854,3900.5273 Q8153.3854,3900.1204 8153.5156,3899.9088 Q8153.6621,3899.6972 8154.0039,3899.6972 Q8154.1178,3899.6972 8154.1992,3899.7298 Q8154.2969,3899.746 8154.362,3899.7949 Q8154.4271,3899.8437 8154.4759,3899.8925 Q8154.5247,3899.9414 8154.541,3900.0227 Q8154.5736,3900.0878 8154.5898,3900.1367 Q8154.6061,3900.1692 8154.6224,3900.2343 Q8154.6387,3900.2832 8154.6387,3900.2994 Q8154.7363,3900.6412 8155.2409,3900.8854 Q8155.7617,3901.1132 8156.3802,3901.1132 Q8157.0801,3901.1132 8157.5521,3900.8365 Q8158.0241,3900.5598 8158.0241,3900.1692 Q8158.0241,3899.7949 8157.6497,3899.567 Q8157.2917,3899.3391 8156.8034,3899.274 Q8156.3314,3899.1927 8155.6803,3899.0462 Q8155.0456,3898.8834 8154.6549,3898.6718 Q8154.1829,3898.3951 8153.9063,3897.9394 Q8153.6296,3897.4674 8153.6296,3896.9303 Q8153.6296,3895.9863 8154.3945,3895.3678 Q8155.1758,3894.733 8156.3477,3894.733 Q8157.3079,3894.733 8157.959,3895.1399 Q8158.0729,3894.8958 8158.1706,3894.8144 Q8158.2682,3894.733 8158.4473,3894.733 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="31.25" x="8181.25" y="3908.3332">Query</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="8085.4167" x2="8277.0833" y1="3921.0416" y2="3921.0416"/><ellipse cx="8095.8333" cy="3932.4999" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="8109.375" y="3941.8748">Queries []*OperationDefinition</text><ellipse cx="8095.8333" cy="3956.6665" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="157.2917" x="8109.375" y="3966.0414">Mutations []*OperationDefinition</text><ellipse cx="8095.8333" cy="3980.833" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="8109.375" y="3990.2079">Statement *ast.Document</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="8085.4167" x2="8277.0833" y1="4001.8746" y2="4001.8746"/><ellipse cx="8095.8333" cy="4013.3329" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="8109.375" y="4022.7078">GetStatement() ast.Node</text><!--MD5=[23121de3f35933cc4f8ce89690337d4f]
class parser.Select--><rect codeLine="1046" fill="#2A9FD6" height="472.4982" id="parser.Select" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="168.75" x="8097.9167" y="4902.6042"/><ellipse cx="8157.2917" cy="4925.1041" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M8159.4889,4921.2955 Q8159.8633,4921.2955 8159.9772,4921.5071 Q8160.1074,4921.7187 8160.1074,4922.1093 L8160.1074,4923.2161 Q8160.1074,4924.0462 8159.4889,4924.0462 Q8159.3913,4924.0462 8159.3099,4924.0299 Q8159.2285,4924.0136 8159.1634,4923.9811 Q8159.1146,4923.9485 8159.0658,4923.8997 Q8159.0169,4923.8346 8158.9844,4923.802 Q8158.9681,4923.7695 8158.9355,4923.6881 Q8158.9193,4923.6067 8158.903,4923.5904 Q8158.903,4923.5579 8158.8867,4923.4765 Q8158.8704,4923.3951 8158.8704,4923.3789 Q8158.7891,4923.0045 8158.3822,4922.7766 Q8157.9753,4922.5325 8157.3893,4922.5325 Q8156.8034,4922.5325 8156.3802,4922.8092 Q8155.9733,4923.0859 8155.9733,4923.4928 Q8155.9733,4923.916 8156.3802,4924.1438 Q8156.8034,4924.3717 8157.3405,4924.4531 Q8157.8939,4924.5182 8158.5612,4924.6972 Q8159.2448,4924.8763 8159.6354,4925.1855 Q8160.3678,4925.7714 8160.3678,4926.748 Q8160.3678,4927.7246 8159.5703,4928.3268 Q8158.7891,4928.929 8157.5033,4928.929 Q8156.4779,4928.929 8155.5664,4928.4407 Q8155.306,4928.7337 8155.0618,4928.7337 Q8154.4271,4928.7337 8154.4271,4927.9199 L8154.4271,4927.0898 Q8154.4271,4926.6829 8154.5573,4926.4713 Q8154.7038,4926.2597 8155.0456,4926.2597 Q8155.1595,4926.2597 8155.2409,4926.2923 Q8155.3385,4926.3085 8155.4036,4926.3574 Q8155.4688,4926.4062 8155.5176,4926.455 Q8155.5664,4926.5039 8155.5827,4926.5852 Q8155.6152,4926.6503 8155.6315,4926.6992 Q8155.6478,4926.7317 8155.6641,4926.7968 Q8155.6803,4926.8457 8155.6803,4926.8619 Q8155.778,4927.2037 8156.2826,4927.4479 Q8156.8034,4927.6757 8157.4219,4927.6757 Q8158.1217,4927.6757 8158.5938,4927.399 Q8159.0658,4927.1223 8159.0658,4926.7317 Q8159.0658,4926.3574 8158.6914,4926.1295 Q8158.3333,4925.9016 8157.8451,4925.8365 Q8157.373,4925.7552 8156.722,4925.6087 Q8156.0872,4925.4459 8155.6966,4925.2343 Q8155.2246,4924.9576 8154.9479,4924.5019 Q8154.6712,4924.0299 8154.6712,4923.4928 Q8154.6712,4922.5488 8155.4362,4921.9303 Q8156.2174,4921.2955 8157.3893,4921.2955 Q8158.3496,4921.2955 8159.0007,4921.7024 Q8159.1146,4921.4583 8159.2122,4921.3769 Q8159.3099,4921.2955 8159.4889,4921.2955 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="31.25" x="8182.2917" y="4934.8957">Select</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="8098.9583" x2="8265.625" y1="4947.6041" y2="4947.6041"/><ellipse cx="8109.375" cy="4959.0624" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="8122.9167" y="4968.4373">Name string</text><ellipse cx="8109.375" cy="4983.229" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="8122.9167" y="4992.6039">Alias string</text><ellipse cx="8109.375" cy="5007.3955" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="109.375" x="8122.9167" y="5016.7704">CollectionName string</text><ellipse cx="8109.375" cy="5031.5621" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="97.9167" x="8122.9167" y="5040.937">Root SelectionType</text><ellipse cx="8109.375" cy="5055.7287" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="69.7917" x="8122.9167" y="5065.1036">DocKey string</text><ellipse cx="8109.375" cy="5079.8952" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="8122.9167" y="5089.2701">CID string</text><ellipse cx="8109.375" cy="5104.0618" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="8122.9167" y="5113.4367">Filter *Filter</text><ellipse cx="8109.375" cy="5128.2283" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="8122.9167" y="5137.6033">Limit *Limit</text><ellipse cx="8109.375" cy="5152.3949" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="8122.9167" y="5161.7698">OrderBy *OrderBy</text><ellipse cx="8109.375" cy="5176.5615" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="8122.9167" y="5185.9364">GroupBy *GroupBy</text><ellipse cx="8109.375" cy="5200.728" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="8122.9167" y="5210.103">Fields []Selection</text><ellipse cx="8109.375" cy="5224.8946" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="8122.9167" y="5234.2695">Statement *ast.Field</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="8098.9583" x2="8265.625" y1="5245.9362" y2="5245.9362"/><ellipse cx="8109.375" cy="5257.3945" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="8122.9167" y="5266.7694">GetRoot() SelectionType</text><ellipse cx="8109.375" cy="5281.5611" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="8122.9167" y="5290.936">GetStatement() ast.Node</text><ellipse cx="8109.375" cy="5305.7276" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="8122.9167" y="5315.1025">GetSelections() []Selection</text><ellipse cx="8109.375" cy="5329.8942" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="86.4583" x="8122.9167" y="5339.2691">GetName() string</text><ellipse cx="8109.375" cy="5354.0608" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="79.1667" x="8122.9167" y="5363.4357">GetAlias() string</text><!--MD5=[9e76bdde3ee83bddb55b8a9fffa27700]
class parser.Selection--><rect codeLine="1067" fill="#2A9FD6" height="147.9162" id="parser.Selection" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="168.75" x="7595.8333" y="3881.25"/><ellipse cx="7647.9167" cy="3898.5416" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M7649.9023,3900.9342 Q7650.3092,3900.9342 7650.5208,3901.0644 Q7650.7324,3901.1946 7650.7324,3901.569 Q7650.7324,3902.1874 7649.9023,3902.1874 L7646.1263,3902.1874 Q7645.3125,3902.1874 7645.3125,3901.569 Q7645.3125,3901.1946 7645.5241,3901.0644 Q7645.7357,3900.9342 7646.1263,3900.9342 L7647.3958,3900.9342 L7647.3958,3896.149 L7646.1263,3896.149 Q7645.3125,3896.149 7645.3125,3895.5305 Q7645.3125,3895.1562 7645.5241,3895.026 Q7645.7357,3894.8958 7646.1263,3894.8958 L7649.9023,3894.8958 Q7650.3092,3894.8958 7650.5208,3895.026 Q7650.7324,3895.1562 7650.7324,3895.5305 Q7650.7324,3896.149 7649.9023,3896.149 L7648.6491,3896.149 L7648.6491,3900.9342 L7649.9023,3900.9342 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="45.8333" x="7672.9167" y="3903.1249">Selection</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7596.875" x2="7763.5417" y1="3915.8332" y2="3915.8332"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7596.875" x2="7763.5417" y1="3924.1666" y2="3924.1666"/><ellipse cx="7607.2917" cy="3935.6249" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="86.4583" x="7620.8333" y="3944.9998">GetName() string</text><ellipse cx="7607.2917" cy="3959.7915" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="79.1667" x="7620.8333" y="3969.1664">GetAlias() string</text><ellipse cx="7607.2917" cy="3983.958" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="7620.8333" y="3993.3329">GetSelections() []Selection</text><ellipse cx="7607.2917" cy="4008.1246" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="7620.8333" y="4017.4995">GetRoot() SelectionType</text><!--MD5=[e97f43673683dec59dc6dd460ead5be9]
class parser.SortCondition--><rect codeLine="1074" fill="#2A9FD6" height="109.9997" id="parser.SortCondition" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="150" x="7332.2917" y="3900"/><ellipse cx="7365.1563" cy="3922.4999" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M7367.3535,3918.6914 Q7367.7279,3918.6914 7367.8418,3918.9029 Q7367.972,3919.1145 7367.972,3919.5052 L7367.972,3920.6119 Q7367.972,3921.442 7367.3535,3921.442 Q7367.2559,3921.442 7367.1745,3921.4257 Q7367.0931,3921.4095 7367.028,3921.3769 Q7366.9792,3921.3443 7366.9303,3921.2955 Q7366.8815,3921.2304 7366.849,3921.1979 Q7366.8327,3921.1653 7366.8001,3921.0839 Q7366.7839,3921.0026 7366.7676,3920.9863 Q7366.7676,3920.9537 7366.7513,3920.8723 Q7366.735,3920.791 7366.735,3920.7747 Q7366.6536,3920.4003 7366.2467,3920.1725 Q7365.8398,3919.9283 7365.2539,3919.9283 Q7364.668,3919.9283 7364.2448,3920.205 Q7363.8379,3920.4817 7363.8379,3920.8886 Q7363.8379,3921.3118 7364.2448,3921.5397 Q7364.668,3921.7675 7365.2051,3921.8489 Q7365.7585,3921.914 7366.4258,3922.093 Q7367.1094,3922.2721 7367.5,3922.5813 Q7368.2324,3923.1673 7368.2324,3924.1438 Q7368.2324,3925.1204 7367.4349,3925.7226 Q7366.6536,3926.3248 7365.3678,3926.3248 Q7364.3424,3926.3248 7363.431,3925.8365 Q7363.1706,3926.1295 7362.9264,3926.1295 Q7362.2917,3926.1295 7362.2917,3925.3157 L7362.2917,3924.4856 Q7362.2917,3924.0787 7362.4219,3923.8671 Q7362.5684,3923.6555 7362.9102,3923.6555 Q7363.0241,3923.6555 7363.1055,3923.6881 Q7363.2031,3923.7044 7363.2682,3923.7532 Q7363.3333,3923.802 7363.3822,3923.8509 Q7363.431,3923.8997 7363.4473,3923.9811 Q7363.4798,3924.0462 7363.4961,3924.095 Q7363.5124,3924.1276 7363.5286,3924.1927 Q7363.5449,3924.2415 7363.5449,3924.2578 Q7363.6426,3924.5996 7364.1471,3924.8437 Q7364.668,3925.0716 7365.2865,3925.0716 Q7365.9863,3925.0716 7366.4583,3924.7949 Q7366.9303,3924.5182 7366.9303,3924.1276 Q7366.9303,3923.7532 7366.556,3923.5253 Q7366.1979,3923.2975 7365.7096,3923.2324 Q7365.2376,3923.151 7364.5866,3923.0045 Q7363.9518,3922.8417 7363.5612,3922.6302 Q7363.0892,3922.3535 7362.8125,3921.8977 Q7362.5358,3921.4257 7362.5358,3920.8886 Q7362.5358,3919.9446 7363.3008,3919.3261 Q7364.082,3918.6914 7365.2539,3918.6914 Q7366.2142,3918.6914 7366.8652,3919.0983 Q7366.9792,3918.8541 7367.0768,3918.7727 Q7367.1745,3918.6914 7367.3535,3918.6914 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="67.7083" x="7387.9688" y="3932.2916">SortCondition</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7333.3333" x2="7481.25" y1="3944.9999" y2="3944.9999"/><ellipse cx="7343.75" cy="3956.4582" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="54.1667" x="7357.2917" y="3965.8331">Field string</text><ellipse cx="7343.75" cy="3980.6248" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="113.5417" x="7357.2917" y="3989.9997">Direction SortDirection</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7333.3333" x2="7481.25" y1="4001.6664" y2="4001.6664"/><!--MD5=[a412ce8ea0f75ae9aebdaa55eabb3bfc]
class parser.Statement--><rect codeLine="1079" fill="#2A9FD6" height="75.4165" id="parser.Statement" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="161.4583" x="7615.1042" y="3056.25"/><ellipse cx="7660.9375" cy="3073.5416" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M7662.9232,3075.9342 Q7663.3301,3075.9342 7663.5417,3076.0644 Q7663.7533,3076.1946 7663.7533,3076.569 Q7663.7533,3077.1874 7662.9232,3077.1874 L7659.1471,3077.1874 Q7658.3333,3077.1874 7658.3333,3076.569 Q7658.3333,3076.1946 7658.5449,3076.0644 Q7658.7565,3075.9342 7659.1471,3075.9342 L7660.4167,3075.9342 L7660.4167,3071.149 L7659.1471,3071.149 Q7658.3333,3071.149 7658.3333,3070.5305 Q7658.3333,3070.1562 7658.5449,3070.026 Q7658.7565,3069.8958 7659.1471,3069.8958 L7662.9232,3069.8958 Q7663.3301,3069.8958 7663.5417,3070.026 Q7663.7533,3070.1562 7663.7533,3070.5305 Q7663.7533,3071.149 7662.9232,3071.149 L7661.6699,3071.149 L7661.6699,3075.9342 L7662.9232,3075.9342 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="51.0417" x="7685.9375" y="3078.1249">Statement</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7616.1458" x2="7775.5208" y1="3090.8332" y2="3090.8332"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7616.1458" x2="7775.5208" y1="3099.1666" y2="3099.1666"/><ellipse cx="7626.5625" cy="3110.6249" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="7640.1042" y="3119.9998">GetStatement() ast.Node</text><!--MD5=[ef016f41be6da8a734fbd2188d748a4a]
class parser.CommitType--><rect codeLine="1083" fill="#2A9FD6" height="61.6666" id="parser.CommitType" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="105.2083" x="7958.8542" y="3063.0208"/><ellipse cx="7973.4375" cy="3085.5208" fill="#FF7700" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M7974.7233,3088.4342 Q7975.5371,3088.4342 7975.5371,3089.069 Q7975.5371,3089.6874 7974.7233,3089.6874 L7971.8262,3089.6874 Q7971.0124,3089.6874 7971.0124,3089.069 Q7971.0124,3088.6946 7971.224,3088.5644 Q7971.4355,3088.4342 7971.8262,3088.4342 L7972.64,3088.4342 L7972.64,3083.649 L7971.3053,3083.649 L7971.3053,3084.8046 Q7971.3053,3085.6347 7970.6706,3085.6347 Q7970.0521,3085.6347 7970.0521,3084.8046 L7970.0521,3082.3958 L7976.5137,3082.3958 L7976.5137,3084.8046 Q7976.5137,3085.2115 7976.3672,3085.4231 Q7976.237,3085.6347 7975.8789,3085.6347 Q7975.2604,3085.6347 7975.2604,3084.8046 L7975.2604,3083.649 L7973.8932,3083.649 L7973.8932,3088.4342 L7974.7233,3088.4342 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="63.5417" x="7992.1875" y="3095.3124">CommitType</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7959.8958" x2="8063.0208" y1="3108.0207" y2="3108.0207"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7959.8958" x2="8063.0208" y1="3116.3541" y2="3116.3541"/><!--MD5=[bcec5555e99609c46fe2a7363e947ed2]
class parser.MutationType--><rect codeLine="1085" fill="#2A9FD6" height="61.6666" id="parser.MutationType" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="109.375" x="7813.0208" y="3063.0208"/><ellipse cx="7827.6042" cy="3085.5208" fill="#FF7700" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M7828.89,3088.4342 Q7829.7038,3088.4342 7829.7038,3089.069 Q7829.7038,3089.6874 7828.89,3089.6874 L7825.9928,3089.6874 Q7825.179,3089.6874 7825.179,3089.069 Q7825.179,3088.6946 7825.3906,3088.5644 Q7825.6022,3088.4342 7825.9928,3088.4342 L7826.8066,3088.4342 L7826.8066,3083.649 L7825.472,3083.649 L7825.472,3084.8046 Q7825.472,3085.6347 7824.8372,3085.6347 Q7824.2188,3085.6347 7824.2188,3084.8046 L7824.2188,3082.3958 L7830.6803,3082.3958 L7830.6803,3084.8046 Q7830.6803,3085.2115 7830.5339,3085.4231 Q7830.4036,3085.6347 7830.0456,3085.6347 Q7829.4271,3085.6347 7829.4271,3084.8046 L7829.4271,3083.649 L7828.0599,3083.649 L7828.0599,3088.4342 L7828.89,3088.4342 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="67.7083" x="7846.3542" y="3095.3124">MutationType</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7814.0625" x2="7921.3542" y1="3108.0207" y2="3108.0207"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="7814.0625" x2="7921.3542" y1="3116.3541" y2="3116.3541"/><!--MD5=[eb0eb736018e7c86f0eab60bf98fca0e]
class parser.SelectionType--><rect codeLine="1087" fill="#2A9FD6" height="61.6666" id="parser.SelectionType" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="112.5" x="8101.0417" y="3063.0208"/><ellipse cx="8115.625" cy="3085.5208" fill="#FF7700" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M8116.9108,3088.4342 Q8117.7246,3088.4342 8117.7246,3089.069 Q8117.7246,3089.6874 8116.9108,3089.6874 L8114.0137,3089.6874 Q8113.1999,3089.6874 8113.1999,3089.069 Q8113.1999,3088.6946 8113.4115,3088.5644 Q8113.623,3088.4342 8114.0137,3088.4342 L8114.8275,3088.4342 L8114.8275,3083.649 L8113.4928,3083.649 L8113.4928,3084.8046 Q8113.4928,3085.6347 8112.8581,3085.6347 Q8112.2396,3085.6347 8112.2396,3084.8046 L8112.2396,3082.3958 L8118.7012,3082.3958 L8118.7012,3084.8046 Q8118.7012,3085.2115 8118.5547,3085.4231 Q8118.4245,3085.6347 8118.0664,3085.6347 Q8117.4479,3085.6347 8117.4479,3084.8046 L8117.4479,3083.649 L8116.0807,3083.649 L8116.0807,3088.4342 L8116.9108,3088.4342 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="8134.375" y="3095.3124">SelectionType</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="8102.0833" x2="8212.5" y1="3108.0207" y2="3108.0207"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="8102.0833" x2="8212.5" y1="3116.3541" y2="3116.3541"/><!--MD5=[cfcc327064fc32e1c7be07a85495c9fc]
class parser.SortDirection--><rect codeLine="1089" fill="#2A9FD6" height="61.6666" id="parser.SortDirection" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="107.2917" x="8250.5208" y="3063.0208"/><ellipse cx="8265.1042" cy="3085.5208" fill="#FF7700" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M8266.39,3088.4342 Q8267.2038,3088.4342 8267.2038,3089.069 Q8267.2038,3089.6874 8266.39,3089.6874 L8263.4928,3089.6874 Q8262.679,3089.6874 8262.679,3089.069 Q8262.679,3088.6946 8262.8906,3088.5644 Q8263.1022,3088.4342 8263.4928,3088.4342 L8264.3066,3088.4342 L8264.3066,3083.649 L8262.972,3083.649 L8262.972,3084.8046 Q8262.972,3085.6347 8262.3372,3085.6347 Q8261.7188,3085.6347 8261.7188,3084.8046 L8261.7188,3082.3958 L8268.1803,3082.3958 L8268.1803,3084.8046 Q8268.1803,3085.2115 8268.0339,3085.4231 Q8267.9036,3085.6347 8267.5456,3085.6347 Q8266.9271,3085.6347 8266.9271,3084.8046 L8266.9271,3083.649 L8265.5599,3083.649 L8265.5599,3088.4342 L8266.39,3088.4342 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="65.625" x="8283.8542" y="3095.3124">SortDirection</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="8251.5625" x2="8356.7708" y1="3108.0207" y2="3108.0207"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="8251.5625" x2="8356.7708" y1="3116.3541" y2="3116.3541"/><!--MD5=[b2ee3f7b67471fce70da0de78b94f90c]
class parser.parseFn--><rect codeLine="1091" fill="#2A9FD6" height="61.6666" id="parser.parseFn" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="83.3333" x="6768.75" y="3924.4792"/><ellipse cx="6783.3333" cy="3946.9791" fill="#FF7700" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M6784.6191,3949.8925 Q6785.4329,3949.8925 6785.4329,3950.5273 Q6785.4329,3951.1458 6784.6191,3951.1458 L6781.722,3951.1458 Q6780.9082,3951.1458 6780.9082,3950.5273 Q6780.9082,3950.1529 6781.1198,3950.0227 Q6781.3314,3949.8925 6781.722,3949.8925 L6782.5358,3949.8925 L6782.5358,3945.1074 L6781.2012,3945.1074 L6781.2012,3946.263 Q6781.2012,3947.093 6780.5664,3947.093 Q6779.9479,3947.093 6779.9479,3946.263 L6779.9479,3943.8541 L6786.4095,3943.8541 L6786.4095,3946.263 Q6786.4095,3946.6699 6786.263,3946.8815 Q6786.1328,3947.093 6785.7747,3947.093 Q6785.1563,3947.093 6785.1563,3946.263 L6785.1563,3945.1074 L6783.7891,3945.1074 L6783.7891,3949.8925 L6784.6191,3949.8925 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="6802.0833" y="3956.7707">parseFn</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="6769.7917" x2="6851.0417" y1="3969.4791" y2="3969.4791"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="6769.7917" x2="6851.0417" y1="3977.8124" y2="3977.8124"/><!--MD5=[79723334d64b88f968edd6ffd54f915c]
class parser.fontcolorbluefuncfontastObjectValuefontcolorblueinterfacefonterror--><rect codeLine="1093" fill="#2A9FD6" height="51.2499" id="parser.fontcolorbluefuncfontastObjectValuefontcolorblueinterfacefonterror" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="251.0417" x="6684.8958" y="3068.2292"/><ellipse cx="6699.4792" cy="3085.5208" fill="#777777" rx="10.4167" ry="10.4167" style="stroke:#444444;stroke-width:1.0416666666666667;"/><path d="M6699.9512,3088.0924 Q6700.5534,3088.0924 6700.9603,3087.9459 Q6701.3835,3087.7994 6701.5462,3087.6367 Q6701.7253,3087.4739 6701.9043,3087.3274 Q6702.0996,3087.1809 6702.2624,3087.1809 Q6702.5065,3087.1809 6702.6855,3087.3763 Q6702.8809,3087.5553 6702.8809,3087.7994 Q6702.8809,3088.3365 6702.0182,3088.8411 Q6701.1719,3089.3457 6699.9186,3089.3457 Q6698.3398,3089.3457 6697.2819,3088.4179 Q6696.2402,3087.4739 6696.2402,3086.0579 L6696.2402,3085.2278 Q6696.2402,3083.7304 6697.2168,3082.7213 Q6698.1934,3081.7122 6699.6419,3081.7122 Q6700.5208,3081.7122 6701.416,3082.1354 L6701.5462,3082.1842 Q6701.7578,3081.8749 6702.0671,3081.8749 Q6702.4414,3081.8749 6702.5716,3082.0865 Q6702.7018,3082.2981 6702.7018,3082.705 L6702.7018,3083.7467 Q6702.7018,3084.5768 6702.0671,3084.5768 Q6701.8392,3084.5768 6701.6927,3084.4628 Q6701.5625,3084.3326 6701.5299,3084.235 Q6701.4974,3084.121 6701.4648,3083.9095 Q6701.3835,3083.5351 6700.9928,3083.3072 Q6700.6185,3083.0794 6700.293,3083.0143 Q6699.9674,3082.9492 6699.6908,3082.9492 Q6698.7467,3082.9492 6698.112,3083.6002 Q6697.4935,3084.235 6697.4935,3085.2278 L6697.4935,3086.0253 Q6697.4935,3086.9693 6698.1608,3087.539 Q6698.8281,3088.0924 6699.9512,3088.0924 Z " fill="#000000"/><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="6718.2292" y="3090.1041">func</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="6740.1042" y="3090.1041">(*ast.ObjectValue) (</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="6840.1042" y="3090.1041">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="6883.8542" y="3090.1041">{}, error)</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="6685.9375" x2="6934.8958" y1="3102.8124" y2="3102.8124"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="6685.9375" x2="6934.8958" y1="3111.1457" y2="3111.1457"/><!--MD5=[d512ff61fb9de3e2bb243399dccba904]
class context.Context--><rect fill="#2A9FD6" height="51.2499" id="context.Context" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="80.2083" x="4973.4375" y="2354.6875"/><ellipse cx="4988.0208" cy="2371.9791" fill="#777777" rx="10.4167" ry="10.4167" style="stroke:#444444;stroke-width:1.0416666666666667;"/><path d="M4988.4928,2374.5507 Q4989.0951,2374.5507 4989.502,2374.4042 Q4989.9251,2374.2578 4990.0879,2374.095 Q4990.2669,2373.9322 4990.446,2373.7858 Q4990.6413,2373.6393 4990.804,2373.6393 Q4991.0482,2373.6393 4991.2272,2373.8346 Q4991.4225,2374.0136 4991.4225,2374.2578 Q4991.4225,2374.7949 4990.5599,2375.2994 Q4989.7135,2375.804 4988.4603,2375.804 Q4986.8815,2375.804 4985.8236,2374.8763 Q4984.7819,2373.9322 4984.7819,2372.5162 L4984.7819,2371.6861 Q4984.7819,2370.1888 4985.7585,2369.1796 Q4986.735,2368.1705 4988.1836,2368.1705 Q4989.0625,2368.1705 4989.9577,2368.5937 L4990.0879,2368.6425 Q4990.2995,2368.3333 4990.6087,2368.3333 Q4990.9831,2368.3333 4991.1133,2368.5449 Q4991.2435,2368.7565 4991.2435,2369.1634 L4991.2435,2370.205 Q4991.2435,2371.0351 4990.6087,2371.0351 Q4990.3809,2371.0351 4990.2344,2370.9212 Q4990.1042,2370.791 4990.0716,2370.6933 Q4990.0391,2370.5794 4990.0065,2370.3678 Q4989.9251,2369.9934 4989.5345,2369.7656 Q4989.1602,2369.5377 4988.8346,2369.4726 Q4988.5091,2369.4075 4988.2324,2369.4075 Q4987.2884,2369.4075 4986.6536,2370.0585 Q4986.0352,2370.6933 4986.0352,2371.6861 L4986.0352,2372.4837 Q4986.0352,2373.4277 4986.7025,2373.9973 Q4987.3698,2374.5507 4988.4928,2374.5507 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="38.5417" x="5006.7708" y="2376.5624">Context</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="4974.4792" x2="5052.6042" y1="2389.2707" y2="2389.2707"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="4974.4792" x2="5052.6042" y1="2397.6041" y2="2397.6041"/><!--MD5=[5f1b6701c0a1bb82dd33f111b4da97f3]
class planner.ExecutionContext--><rect codeLine="1112" fill="#2A9FD6" height="61.6666" id="planner.ExecutionContext" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="129.1667" x="4948.9583" y="3063.0208"/><ellipse cx="4963.5417" cy="3085.5208" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M4965.7389,3081.7122 Q4966.1133,3081.7122 4966.2272,3081.9238 Q4966.3574,3082.1354 4966.3574,3082.526 L4966.3574,3083.6328 Q4966.3574,3084.4628 4965.7389,3084.4628 Q4965.6413,3084.4628 4965.5599,3084.4466 Q4965.4785,3084.4303 4965.4134,3084.3977 Q4965.3646,3084.3652 4965.3158,3084.3164 Q4965.2669,3084.2513 4965.2344,3084.2187 Q4965.2181,3084.1861 4965.1855,3084.1048 Q4965.1693,3084.0234 4965.153,3084.0071 Q4965.153,3083.9746 4965.1367,3083.8932 Q4965.1204,3083.8118 4965.1204,3083.7955 Q4965.0391,3083.4212 4964.6322,3083.1933 Q4964.2253,3082.9492 4963.6393,3082.9492 Q4963.0534,3082.9492 4962.6302,3083.2259 Q4962.2233,3083.5026 4962.2233,3083.9095 Q4962.2233,3084.3326 4962.6302,3084.5605 Q4963.0534,3084.7884 4963.5905,3084.8697 Q4964.1439,3084.9348 4964.8112,3085.1139 Q4965.4948,3085.2929 4965.8854,3085.6022 Q4966.6178,3086.1881 4966.6178,3087.1647 Q4966.6178,3088.1412 4965.8203,3088.7434 Q4965.0391,3089.3457 4963.7533,3089.3457 Q4962.7279,3089.3457 4961.8164,3088.8574 Q4961.556,3089.1503 4961.3118,3089.1503 Q4960.6771,3089.1503 4960.6771,3088.3365 L4960.6771,3087.5065 Q4960.6771,3087.0996 4960.8073,3086.888 Q4960.9538,3086.6764 4961.2956,3086.6764 Q4961.4095,3086.6764 4961.4909,3086.7089 Q4961.5885,3086.7252 4961.6536,3086.774 Q4961.7188,3086.8229 4961.7676,3086.8717 Q4961.8164,3086.9205 4961.8327,3087.0019 Q4961.8652,3087.067 4961.8815,3087.1158 Q4961.8978,3087.1484 4961.9141,3087.2135 Q4961.9303,3087.2623 4961.9303,3087.2786 Q4962.028,3087.6204 4962.5326,3087.8645 Q4963.0534,3088.0924 4963.6719,3088.0924 Q4964.3717,3088.0924 4964.8438,3087.8157 Q4965.3158,3087.539 4965.3158,3087.1484 Q4965.3158,3086.774 4964.9414,3086.5462 Q4964.5833,3086.3183 4964.0951,3086.2532 Q4963.623,3086.1718 4962.972,3086.0253 Q4962.3372,3085.8626 4961.9466,3085.651 Q4961.4746,3085.3743 4961.1979,3084.9186 Q4960.9212,3084.4466 4960.9212,3083.9095 Q4960.9212,3082.9654 4961.6862,3082.347 Q4962.4674,3081.7122 4963.6393,3081.7122 Q4964.5996,3081.7122 4965.2507,3082.1191 Q4965.3646,3081.8749 4965.4622,3081.7936 Q4965.5599,3081.7122 4965.7389,3081.7122 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="87.5" x="4982.2917" y="3095.3124">ExecutionContext</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="4950" x2="5077.0833" y1="3108.0207" y2="3108.0207"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="4950" x2="5077.0833" y1="3116.3541" y2="3116.3541"/><!--MD5=[083e67272ac943e8ed5d052988f87e11]
class planner.MultiNode--><rect codeLine="1114" fill="#2A9FD6" height="147.9162" id="planner.MultiNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="258.3333" x="2571.875" y="3881.25"/><ellipse cx="2666.6667" cy="3898.5416" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M2668.6523,3900.9342 Q2669.0592,3900.9342 2669.2708,3901.0644 Q2669.4824,3901.1946 2669.4824,3901.569 Q2669.4824,3902.1874 2668.6523,3902.1874 L2664.8763,3902.1874 Q2664.0625,3902.1874 2664.0625,3901.569 Q2664.0625,3901.1946 2664.2741,3901.0644 Q2664.4857,3900.9342 2664.8763,3900.9342 L2666.1458,3900.9342 L2666.1458,3896.149 L2664.8763,3896.149 Q2664.0625,3896.149 2664.0625,3895.5305 Q2664.0625,3895.1562 2664.2741,3895.026 Q2664.4857,3894.8958 2664.8763,3894.8958 L2668.6523,3894.8958 Q2669.0592,3894.8958 2669.2708,3895.026 Q2669.4824,3895.1562 2669.4824,3895.5305 Q2669.4824,3896.149 2668.6523,3896.149 L2667.3991,3896.149 L2667.3991,3900.9342 L2668.6523,3900.9342 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="50" x="2691.6667" y="3903.1249">MultiNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="2572.9167" x2="2829.1667" y1="3915.8332" y2="3915.8332"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="2572.9167" x2="2829.1667" y1="3924.1666" y2="3924.1666"/><ellipse cx="2583.3333" cy="3935.6249" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="107.2917" x="2596.875" y="3944.9998">Children() []planNode</text><ellipse cx="2583.3333" cy="3959.7915" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="168.75" x="2596.875" y="3969.1664">AddChild( string,  planNode) error</text><ellipse cx="2583.3333" cy="3983.958" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="221.875" x="2596.875" y="3993.3329">ReplaceChildAt( int,  string,  planNode) error</text><ellipse cx="2583.3333" cy="4008.1246" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="173.9583" x="2596.875" y="4017.4995">SetMultiScanner( *multiScanNode)</text><!--MD5=[ba957cc38589901301fb709c27d98e9e]
class planner.PlanContext--><rect codeLine="1121" fill="#2A9FD6" height="61.6666" id="planner.PlanContext" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="102.0833" x="4810.4167" y="3063.0208"/><ellipse cx="4825" cy="3085.5208" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M4827.1973,3081.7122 Q4827.5716,3081.7122 4827.6855,3081.9238 Q4827.8158,3082.1354 4827.8158,3082.526 L4827.8158,3083.6328 Q4827.8158,3084.4628 4827.1973,3084.4628 Q4827.0996,3084.4628 4827.0182,3084.4466 Q4826.9368,3084.4303 4826.8717,3084.3977 Q4826.8229,3084.3652 4826.7741,3084.3164 Q4826.7253,3084.2513 4826.6927,3084.2187 Q4826.6764,3084.1861 4826.6439,3084.1048 Q4826.6276,3084.0234 4826.6113,3084.0071 Q4826.6113,3083.9746 4826.5951,3083.8932 Q4826.5788,3083.8118 4826.5788,3083.7955 Q4826.4974,3083.4212 4826.0905,3083.1933 Q4825.6836,3082.9492 4825.0977,3082.9492 Q4824.5117,3082.9492 4824.0885,3083.2259 Q4823.6816,3083.5026 4823.6816,3083.9095 Q4823.6816,3084.3326 4824.0885,3084.5605 Q4824.5117,3084.7884 4825.0488,3084.8697 Q4825.6022,3084.9348 4826.2695,3085.1139 Q4826.9531,3085.2929 4827.3438,3085.6022 Q4828.0762,3086.1881 4828.0762,3087.1647 Q4828.0762,3088.1412 4827.2786,3088.7434 Q4826.4974,3089.3457 4825.2116,3089.3457 Q4824.1862,3089.3457 4823.2747,3088.8574 Q4823.0143,3089.1503 4822.7702,3089.1503 Q4822.1354,3089.1503 4822.1354,3088.3365 L4822.1354,3087.5065 Q4822.1354,3087.0996 4822.2656,3086.888 Q4822.4121,3086.6764 4822.7539,3086.6764 Q4822.8678,3086.6764 4822.9492,3086.7089 Q4823.0469,3086.7252 4823.112,3086.774 Q4823.1771,3086.8229 4823.2259,3086.8717 Q4823.2747,3086.9205 4823.291,3087.0019 Q4823.3236,3087.067 4823.3398,3087.1158 Q4823.3561,3087.1484 4823.3724,3087.2135 Q4823.3887,3087.2623 4823.3887,3087.2786 Q4823.4863,3087.6204 4823.9909,3087.8645 Q4824.5117,3088.0924 4825.1302,3088.0924 Q4825.8301,3088.0924 4826.3021,3087.8157 Q4826.7741,3087.539 4826.7741,3087.1484 Q4826.7741,3086.774 4826.3997,3086.5462 Q4826.0417,3086.3183 4825.5534,3086.2532 Q4825.0814,3086.1718 4824.4303,3086.0253 Q4823.7956,3085.8626 4823.4049,3085.651 Q4822.9329,3085.3743 4822.6563,3084.9186 Q4822.3796,3084.4466 4822.3796,3083.9095 Q4822.3796,3082.9654 4823.1445,3082.347 Q4823.9258,3081.7122 4825.0977,3081.7122 Q4826.0579,3081.7122 4826.709,3082.1191 Q4826.8229,3081.8749 4826.9206,3081.7936 Q4827.0182,3081.7122 4827.1973,3081.7122 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="4843.75" y="3095.3124">PlanContext</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="4811.4583" x2="4911.4583" y1="3108.0207" y2="3108.0207"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="4811.4583" x2="4911.4583" y1="3116.3541" y2="3116.3541"/><!--MD5=[09ed82ae4242ce6f89c5f2a1e4b8626c]
class planner.Planner--><rect codeLine="1123" fill="#2A9FD6" height="1076.6623" id="planner.Planner" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="696.875" x="5115.1042" y="2555.2083"/><ellipse cx="5434.8958" cy="2577.7083" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M5437.0931,2573.8997 Q5437.4674,2573.8997 5437.5814,2574.1113 Q5437.7116,2574.3229 5437.7116,2574.7135 L5437.7116,2575.8203 Q5437.7116,2576.6503 5437.0931,2576.6503 Q5436.9954,2576.6503 5436.9141,2576.6341 Q5436.8327,2576.6178 5436.7676,2576.5852 Q5436.7188,2576.5527 5436.6699,2576.5039 Q5436.6211,2576.4388 5436.5885,2576.4062 Q5436.5723,2576.3736 5436.5397,2576.2923 Q5436.5234,2576.2109 5436.5072,2576.1946 Q5436.5072,2576.1621 5436.4909,2576.0807 Q5436.4746,2575.9993 5436.4746,2575.983 Q5436.3932,2575.6087 5435.9863,2575.3808 Q5435.5794,2575.1367 5434.9935,2575.1367 Q5434.4076,2575.1367 5433.9844,2575.4134 Q5433.5775,2575.6901 5433.5775,2576.097 Q5433.5775,2576.5201 5433.9844,2576.748 Q5434.4076,2576.9759 5434.9447,2577.0572 Q5435.498,2577.1223 5436.1654,2577.3014 Q5436.849,2577.4804 5437.2396,2577.7897 Q5437.972,2578.3756 5437.972,2579.3522 Q5437.972,2580.3287 5437.1745,2580.9309 Q5436.3932,2581.5332 5435.1074,2581.5332 Q5434.082,2581.5332 5433.1706,2581.0449 Q5432.9102,2581.3378 5432.666,2581.3378 Q5432.0313,2581.3378 5432.0313,2580.524 L5432.0313,2579.694 Q5432.0313,2579.2871 5432.1615,2579.0755 Q5432.3079,2578.8639 5432.6497,2578.8639 Q5432.7637,2578.8639 5432.8451,2578.8964 Q5432.9427,2578.9127 5433.0078,2578.9615 Q5433.0729,2579.0104 5433.1217,2579.0592 Q5433.1706,2579.108 5433.1868,2579.1894 Q5433.2194,2579.2545 5433.2357,2579.3033 Q5433.252,2579.3359 5433.2682,2579.401 Q5433.2845,2579.4498 5433.2845,2579.4661 Q5433.3822,2579.8079 5433.8867,2580.052 Q5434.4076,2580.2799 5435.026,2580.2799 Q5435.7259,2580.2799 5436.1979,2580.0032 Q5436.6699,2579.7265 5436.6699,2579.3359 Q5436.6699,2578.9615 5436.2956,2578.7337 Q5435.9375,2578.5058 5435.4492,2578.4407 Q5434.9772,2578.3593 5434.3262,2578.2128 Q5433.6914,2578.0501 5433.3008,2577.8385 Q5432.8288,2577.5618 5432.5521,2577.1061 Q5432.2754,2576.6341 5432.2754,2576.097 Q5432.2754,2575.1529 5433.0404,2574.5345 Q5433.8216,2573.8997 5434.9935,2573.8997 Q5435.9538,2573.8997 5436.6048,2574.3066 Q5436.7188,2574.0624 5436.8164,2573.9811 Q5436.9141,2573.8997 5437.0931,2573.8997 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="38.5417" x="5459.8958" y="2587.4999">Planner</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="5116.1458" x2="5810.9375" y1="2600.2082" y2="2600.2082"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="2608.5416"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="65.625" x="5140.1042" y="2621.0415">txn client.Txn</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="2632.7081"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="5140.1042" y="2645.208">db client.DB</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="2656.8747"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="5140.1042" y="2669.3746">ctx context.Context</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="2681.0413"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="5140.1042" y="2693.5412">evalCtx parser.EvalContext</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="5116.1458" x2="5810.9375" y1="2705.2078" y2="2705.2078"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="2713.5412"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="394.7917" x="5140.1042" y="2726.0411">commitSelectLatest(parsed *parser.CommitSelect) (*commitSelectNode, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="2737.7077"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="392.7083" x="5140.1042" y="2750.2076">commitSelectBlock(parsed *parser.CommitSelect) (*commitSelectNode, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="2761.8743"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="376.0417" x="5140.1042" y="2774.3742">commitSelectAll(parsed *parser.CommitSelect) (*commitSelectNode, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="2786.0408"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="237.5" x="5140.1042" y="2798.5408">getSource(collection string) (planSource, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="2810.2074"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="297.9167" x="5140.1042" y="2822.7073">getCollectionScanPlan(collection string) (planSource, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="2834.374"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="332.2917" x="5140.1042" y="2846.8739">getCollectionDesc(name string) (base.CollectionDescription, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="2858.5405"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="252.0833" x="5140.1042" y="2871.0405">newPlan(stmt parser.Statement) (planNode, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="2882.7071"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="325" x="5140.1042" y="2895.207">newObjectMutationPlan(stmt *parser.Mutation) (planNode, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="2906.8737"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="259.375" x="5140.1042" y="2919.3736">makePlan(stmt parser.Statement) (planNode, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="2931.0402"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="5140.1042" y="2943.5401">optimizePlan(plan planNode) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="2955.2068"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="5140.1042" y="2967.7067">expandPlan(plan planNode) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="2979.3734"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="277.0833" x="5140.1042" y="2991.8733">expandSelectTopNodePlan(plan *selectTopNode) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="3003.5399"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="196.875" x="5140.1042" y="3016.0398">expandMultiNode(plan MultiNode) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="3027.7065"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="264.5833" x="5140.1042" y="3040.2064">expandTypeIndexJoinPlan(plan *typeIndexJoin) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="3051.8731"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="257.2917" x="5140.1042" y="3064.373">expandGroupNodePlan(plan *selectTopNode) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="3076.0396"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="395.8333" x="5140.1042" y="3088.5395">walkAndReplacePlan(plan planNode, target planNode, replace planNode) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="3100.2062"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="329.1667" x="5140.1042" y="3112.7061">walkAndFindPlanType(plan planNode, target planNode) planNode</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="3124.3727"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="178.125" x="5140.1042" y="3136.8727">queryDocs(query *parser.Query) ([]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="5318.2292" y="3136.8727">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="5340.1042" y="3136.8727">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="5373.4375" y="3136.8727">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="5417.1875" y="3136.8727">{}, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="3148.5393"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="5140.1042" y="3161.0392">query(query *parser.Query) (planNode, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="3172.7059"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="217.7083" x="5140.1042" y="3185.2058">render(parsed *parser.Select) *renderNode</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="3196.8724"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="535.4167" x="5140.1042" y="3209.3724">makeTypeIndexJoin(parent *selectNode, source planNode, subType *parser.Select) (*typeIndexJoin, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="3221.039"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="525" x="5140.1042" y="3233.5389">makeTypeJoinOne(parent *selectNode, source planNode, subType *parser.Select) (*typeJoinOne, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="3245.2056"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="535.4167" x="5140.1042" y="3257.7055">makeTypeJoinMany(parent *selectNode, source planNode, subType *parser.Select) (*typeJoinMany, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5123.4375" y="3269.3721"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="358.3333" x="5140.1042" y="3281.872">newContainerValuesNode(ordering []parser.SortCondition) *valuesNode</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="5143.2292" y="3306.0386"/><ellipse cx="5126.5625" cy="3320.8303" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="315.625" x="5140.1042" y="3330.2052">CommitSelect(parsed *parser.CommitSelect) (planNode, error)</text><ellipse cx="5126.5625" cy="3344.9968" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="273.9583" x="5140.1042" y="3354.3717">CreateDoc(parsed *parser.Mutation) (planNode, error)</text><ellipse cx="5126.5625" cy="3369.1634" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="161.4583" x="5140.1042" y="3378.5383">HeadScan() *headsetScanNode</text><ellipse cx="5126.5625" cy="3393.33" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="137.5" x="5140.1042" y="3402.7049">DAGScan() *dagScanNode</text><ellipse cx="5126.5625" cy="3417.4965" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="277.0833" x="5140.1042" y="3426.8714">DeleteDocs(parsed *parser.Mutation) (planNode, error)</text><ellipse cx="5126.5625" cy="3441.6631" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="382.2917" x="5140.1042" y="3451.038">GroupBy(n *parser.GroupBy, childSelect *parser.Select) (*groupNode, error)</text><ellipse cx="5126.5625" cy="3465.8296" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="195.8333" x="5140.1042" y="3475.2046">Limit(n *parser.Limit) (*limitNode, error)</text><ellipse cx="5126.5625" cy="3489.9962" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="5140.1042" y="3499.3711">Scan() *scanNode</text><ellipse cx="5126.5625" cy="3514.1628" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="258.3333" x="5140.1042" y="3523.5377">SubSelect(parsed *parser.Select) (planNode, error)</text><ellipse cx="5126.5625" cy="3538.3293" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="660.4167" x="5140.1042" y="3547.7042">SelectFromSource(parsed *parser.Select, source planNode, fromCollection bool, providedSourceInfo *sourceInfo) (planNode, error)</text><ellipse cx="5126.5625" cy="3562.4959" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="238.5417" x="5140.1042" y="3571.8708">Select(parsed *parser.Select) (planNode, error)</text><ellipse cx="5126.5625" cy="3586.6625" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="235.4167" x="5140.1042" y="3596.0374">OrderBy(n *parser.OrderBy) (*sortNode, error)</text><ellipse cx="5126.5625" cy="3610.829" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="281.25" x="5140.1042" y="3620.2039">UpdateDocs(parsed *parser.Mutation) (planNode, error)</text><!--MD5=[6a5c3ee06be97b85eb4f4b89acaec519]
class planner.QueryExecutor--><rect codeLine="1169" fill="#2A9FD6" height="182.4994" id="planner.QueryExecutor" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="648.9583" x="5848.4375" y="3002.6042"/><ellipse cx="6125.5208" cy="3025.1041" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M6127.7181,3021.2955 Q6128.0924,3021.2955 6128.2064,3021.5071 Q6128.3366,3021.7187 6128.3366,3022.1093 L6128.3366,3023.2161 Q6128.3366,3024.0462 6127.7181,3024.0462 Q6127.6204,3024.0462 6127.5391,3024.0299 Q6127.4577,3024.0136 6127.3926,3023.9811 Q6127.3438,3023.9485 6127.2949,3023.8997 Q6127.2461,3023.8346 6127.2135,3023.802 Q6127.1973,3023.7695 6127.1647,3023.6881 Q6127.1484,3023.6067 6127.1322,3023.5904 Q6127.1322,3023.5579 6127.1159,3023.4765 Q6127.0996,3023.3951 6127.0996,3023.3789 Q6127.0182,3023.0045 6126.6113,3022.7766 Q6126.2044,3022.5325 6125.6185,3022.5325 Q6125.0326,3022.5325 6124.6094,3022.8092 Q6124.2025,3023.0859 6124.2025,3023.4928 Q6124.2025,3023.916 6124.6094,3024.1438 Q6125.0326,3024.3717 6125.5697,3024.4531 Q6126.123,3024.5182 6126.7904,3024.6972 Q6127.474,3024.8763 6127.8646,3025.1855 Q6128.597,3025.7714 6128.597,3026.748 Q6128.597,3027.7246 6127.7995,3028.3268 Q6127.0182,3028.929 6125.7324,3028.929 Q6124.707,3028.929 6123.7956,3028.4407 Q6123.5352,3028.7337 6123.291,3028.7337 Q6122.6563,3028.7337 6122.6563,3027.9199 L6122.6563,3027.0898 Q6122.6563,3026.6829 6122.7865,3026.4713 Q6122.9329,3026.2597 6123.2747,3026.2597 Q6123.3887,3026.2597 6123.4701,3026.2923 Q6123.5677,3026.3085 6123.6328,3026.3574 Q6123.6979,3026.4062 6123.7467,3026.455 Q6123.7956,3026.5039 6123.8118,3026.5852 Q6123.8444,3026.6503 6123.8607,3026.6992 Q6123.877,3026.7317 6123.8932,3026.7968 Q6123.9095,3026.8457 6123.9095,3026.8619 Q6124.0072,3027.2037 6124.5117,3027.4479 Q6125.0326,3027.6757 6125.651,3027.6757 Q6126.3509,3027.6757 6126.8229,3027.399 Q6127.2949,3027.1223 6127.2949,3026.7317 Q6127.2949,3026.3574 6126.9206,3026.1295 Q6126.5625,3025.9016 6126.0742,3025.8365 Q6125.6022,3025.7552 6124.9512,3025.6087 Q6124.3164,3025.4459 6123.9258,3025.2343 Q6123.4538,3024.9576 6123.1771,3024.5019 Q6122.9004,3024.0299 6122.9004,3023.4928 Q6122.9004,3022.5488 6123.6654,3021.9303 Q6124.4466,3021.2955 6125.6185,3021.2955 Q6126.5788,3021.2955 6127.2298,3021.7024 Q6127.3438,3021.4583 6127.4414,3021.3769 Q6127.5391,3021.2955 6127.7181,3021.2955 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="76.0417" x="6150.5208" y="3034.8957">QueryExecutor</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="5849.4792" x2="6496.3542" y1="3047.6041" y2="3047.6041"/><ellipse cx="5859.8958" cy="3059.0624" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="222.9167" x="5873.4375" y="3068.4373">SchemaManager *schema.SchemaManager</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="5849.4792" x2="6496.3542" y1="3080.104" y2="3080.104"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5856.7708" y="3088.4373"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="268.75" x="5873.4375" y="3100.9372">parseQueryString(query string) (*parser.Query, error)</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="5876.5625" y="3125.1038"/><ellipse cx="5859.8958" cy="3139.8954" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="539.5833" x="5873.4375" y="3149.2703">MakeSelectQuery(ctx context.Context, db client.DB, txn client.Txn, selectStmt *parser.Select) (Query, error)</text><ellipse cx="5859.8958" cy="3164.062" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="400" x="5873.4375" y="3173.4369">ExecQuery(ctx context.Context, db client.DB, txn client.Txn, query string, args ...</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="6273.4375" y="3173.4369">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="26.0417" x="6317.1875" y="3173.4369">{}) ([]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="6343.2292" y="3173.4369">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="6365.1042" y="3173.4369">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="6398.4375" y="3173.4369">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="6442.1875" y="3173.4369">{}, error)</text><!--MD5=[3ff1e332a8a0774f41ff4aaf0fd8bc32]
class planner.Statement--><rect codeLine="1178" fill="#2A9FD6" height="61.6666" id="planner.Statement" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="92.7083" x="6533.8542" y="3063.0208"/><ellipse cx="6548.4375" cy="3085.5208" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M6550.6348,3081.7122 Q6551.0091,3081.7122 6551.123,3081.9238 Q6551.2533,3082.1354 6551.2533,3082.526 L6551.2533,3083.6328 Q6551.2533,3084.4628 6550.6348,3084.4628 Q6550.5371,3084.4628 6550.4557,3084.4466 Q6550.3743,3084.4303 6550.3092,3084.3977 Q6550.2604,3084.3652 6550.2116,3084.3164 Q6550.1628,3084.2513 6550.1302,3084.2187 Q6550.1139,3084.1861 6550.0814,3084.1048 Q6550.0651,3084.0234 6550.0488,3084.0071 Q6550.0488,3083.9746 6550.0326,3083.8932 Q6550.0163,3083.8118 6550.0163,3083.7955 Q6549.9349,3083.4212 6549.528,3083.1933 Q6549.1211,3082.9492 6548.5352,3082.9492 Q6547.9492,3082.9492 6547.526,3083.2259 Q6547.1191,3083.5026 6547.1191,3083.9095 Q6547.1191,3084.3326 6547.526,3084.5605 Q6547.9492,3084.7884 6548.4863,3084.8697 Q6549.0397,3084.9348 6549.707,3085.1139 Q6550.3906,3085.2929 6550.7813,3085.6022 Q6551.5137,3086.1881 6551.5137,3087.1647 Q6551.5137,3088.1412 6550.7161,3088.7434 Q6549.9349,3089.3457 6548.6491,3089.3457 Q6547.6237,3089.3457 6546.7122,3088.8574 Q6546.4518,3089.1503 6546.2077,3089.1503 Q6545.5729,3089.1503 6545.5729,3088.3365 L6545.5729,3087.5065 Q6545.5729,3087.0996 6545.7031,3086.888 Q6545.8496,3086.6764 6546.1914,3086.6764 Q6546.3053,3086.6764 6546.3867,3086.7089 Q6546.4844,3086.7252 6546.5495,3086.774 Q6546.6146,3086.8229 6546.6634,3086.8717 Q6546.7122,3086.9205 6546.7285,3087.0019 Q6546.7611,3087.067 6546.7773,3087.1158 Q6546.7936,3087.1484 6546.8099,3087.2135 Q6546.8262,3087.2623 6546.8262,3087.2786 Q6546.9238,3087.6204 6547.4284,3087.8645 Q6547.9492,3088.0924 6548.5677,3088.0924 Q6549.2676,3088.0924 6549.7396,3087.8157 Q6550.2116,3087.539 6550.2116,3087.1484 Q6550.2116,3086.774 6549.8372,3086.5462 Q6549.4792,3086.3183 6548.9909,3086.2532 Q6548.5189,3086.1718 6547.8678,3086.0253 Q6547.2331,3085.8626 6546.8424,3085.651 Q6546.3704,3085.3743 6546.0938,3084.9186 Q6545.8171,3084.4466 6545.8171,3083.9095 Q6545.8171,3082.9654 6546.582,3082.347 Q6547.3633,3081.7122 6548.5352,3081.7122 Q6549.4954,3081.7122 6550.1465,3082.1191 Q6550.2604,3081.8749 6550.3581,3081.7936 Q6550.4557,3081.7122 6550.6348,3081.7122 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="6567.1875" y="3095.3124">Statement</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="6534.8958" x2="6625.5208" y1="3108.0207" y2="3108.0207"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="6534.8958" x2="6625.5208" y1="3116.3541" y2="3116.3541"/><!--MD5=[1d3b9cd2b7f73bae58966092b3eb8d17]
class planner.allSortStrategy--><rect codeLine="1180" fill="#2A9FD6" height="206.6659" id="planner.allSortStrategy" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="221.875" x="409.8958" y="5035.9375"/><ellipse cx="475" cy="5058.4374" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M477.1973,5054.6289 Q477.5716,5054.6289 477.6855,5054.8404 Q477.8158,5055.052 477.8158,5055.4427 L477.8158,5056.5494 Q477.8158,5057.3795 477.1973,5057.3795 Q477.0996,5057.3795 477.0182,5057.3632 Q476.9368,5057.347 476.8717,5057.3144 Q476.8229,5057.2818 476.7741,5057.233 Q476.7253,5057.1679 476.6927,5057.1354 Q476.6764,5057.1028 476.6439,5057.0214 Q476.6276,5056.9401 476.6113,5056.9238 Q476.6113,5056.8912 476.5951,5056.8098 Q476.5788,5056.7285 476.5788,5056.7122 Q476.4974,5056.3378 476.0905,5056.11 Q475.6836,5055.8658 475.0977,5055.8658 Q474.5117,5055.8658 474.0885,5056.1425 Q473.6816,5056.4192 473.6816,5056.8261 Q473.6816,5057.2493 474.0885,5057.4772 Q474.5117,5057.705 475.0488,5057.7864 Q475.6022,5057.8515 476.2695,5058.0305 Q476.9531,5058.2096 477.3438,5058.5188 Q478.0762,5059.1048 478.0762,5060.0813 Q478.0762,5061.0579 477.2786,5061.6601 Q476.4974,5062.2623 475.2116,5062.2623 Q474.1862,5062.2623 473.2747,5061.774 Q473.0143,5062.067 472.7702,5062.067 Q472.1354,5062.067 472.1354,5061.2532 L472.1354,5060.4231 Q472.1354,5060.0162 472.2656,5059.8046 Q472.4121,5059.593 472.7539,5059.593 Q472.8678,5059.593 472.9492,5059.6256 Q473.0469,5059.6419 473.112,5059.6907 Q473.1771,5059.7395 473.2259,5059.7884 Q473.2747,5059.8372 473.291,5059.9186 Q473.3236,5059.9837 473.3398,5060.0325 Q473.3561,5060.0651 473.3724,5060.1302 Q473.3887,5060.179 473.3887,5060.1953 Q473.4863,5060.5371 473.9909,5060.7812 Q474.5117,5061.0091 475.1302,5061.0091 Q475.8301,5061.0091 476.3021,5060.7324 Q476.7741,5060.4557 476.7741,5060.0651 Q476.7741,5059.6907 476.3997,5059.4628 Q476.0417,5059.235 475.5534,5059.1699 Q475.0814,5059.0885 474.4303,5058.942 Q473.7956,5058.7792 473.4049,5058.5677 Q472.9329,5058.291 472.6563,5057.8352 Q472.3796,5057.3632 472.3796,5056.8261 Q472.3796,5055.8821 473.1445,5055.2636 Q473.9258,5054.6289 475.0977,5054.6289 Q476.0579,5054.6289 476.709,5055.0358 Q476.8229,5054.7916 476.9206,5054.7102 Q477.0182,5054.6289 477.1973,5054.6289 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="72.9167" x="500" y="5068.2291">allSortStrategy</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="410.9375" x2="630.7292" y1="5080.9374" y2="5080.9374"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="418.2292" y="5089.2707"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="118.75" x="434.8958" y="5101.7706">valueNode *valuesNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="410.9375" x2="630.7292" y1="5113.4373" y2="5113.4373"/><ellipse cx="421.3542" cy="5124.8956" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="42.7083" x="434.8958" y="5134.2705">Add(doc</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="480.7292" y="5134.2705">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="502.6042" y="5134.2705">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="535.9375" y="5134.2705">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="40.625" x="579.6875" y="5134.2705">{}) error</text><ellipse cx="421.3542" cy="5149.0622" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="37.5" x="434.8958" y="5158.4371">Finish()</text><ellipse cx="421.3542" cy="5173.2288" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="434.8958" y="5182.6037">Next() (bool, error)</text><ellipse cx="421.3542" cy="5197.3953" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="434.8958" y="5206.7702">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="479.6875" y="5206.7702">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="501.5625" y="5206.7702">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="534.8958" y="5206.7702">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="578.6458" y="5206.7702">{}</text><ellipse cx="421.3542" cy="5221.5619" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="434.8958" y="5230.9368">Close()</text><!--MD5=[8884ac428a46434a6f45f644f3b4f6c7]
class planner.appendNode--><rect codeLine="1190" fill="#2A9FD6" height="75.4165" id="planner.appendNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="107.2917" x="3350.5208" y="3917.7083"/><ellipse cx="3365.5729" cy="3934.9999" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M3367.5586,3937.3925 Q3367.9655,3937.3925 3368.1771,3937.5227 Q3368.3887,3937.6529 3368.3887,3938.0273 Q3368.3887,3938.6458 3367.5586,3938.6458 L3363.7826,3938.6458 Q3362.9688,3938.6458 3362.9688,3938.0273 Q3362.9688,3937.6529 3363.1803,3937.5227 Q3363.3919,3937.3925 3363.7826,3937.3925 L3365.0521,3937.3925 L3365.0521,3932.6074 L3363.7826,3932.6074 Q3362.9688,3932.6074 3362.9688,3931.9889 Q3362.9688,3931.6145 3363.1803,3931.4843 Q3363.3919,3931.3541 3363.7826,3931.3541 L3367.5586,3931.3541 Q3367.9655,3931.3541 3368.1771,3931.4843 Q3368.3887,3931.6145 3368.3887,3931.9889 Q3368.3887,3932.6074 3367.5586,3932.6074 L3366.3053,3932.6074 L3366.3053,3937.3925 L3367.5586,3937.3925 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="64.5833" x="3384.4271" y="3939.5832">appendNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="3351.5625" x2="3456.7708" y1="3952.2916" y2="3952.2916"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="3351.5625" x2="3456.7708" y1="3960.6249" y2="3960.6249"/><ellipse cx="3361.9792" cy="3972.0832" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="3375.5208" y="3981.4581">Append() bool</text><!--MD5=[5e5cd504bc94ee965b14e70bafbfdf3d]
class planner.baseNode--><rect codeLine="1194" fill="#2A9FD6" height="254.9991" id="planner.baseNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="188.5417" x="2867.1875" y="3827.6042"/><ellipse cx="2926.5625" cy="3850.1041" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M2928.7598,3846.2955 Q2929.1341,3846.2955 2929.248,3846.5071 Q2929.3783,3846.7187 2929.3783,3847.1093 L2929.3783,3848.2161 Q2929.3783,3849.0462 2928.7598,3849.0462 Q2928.6621,3849.0462 2928.5807,3849.0299 Q2928.4993,3849.0136 2928.4342,3848.9811 Q2928.3854,3848.9485 2928.3366,3848.8997 Q2928.2878,3848.8346 2928.2552,3848.802 Q2928.2389,3848.7695 2928.2064,3848.6881 Q2928.1901,3848.6067 2928.1738,3848.5904 Q2928.1738,3848.5579 2928.1576,3848.4765 Q2928.1413,3848.3951 2928.1413,3848.3789 Q2928.0599,3848.0045 2927.653,3847.7766 Q2927.2461,3847.5325 2926.6602,3847.5325 Q2926.0742,3847.5325 2925.651,3847.8092 Q2925.2441,3848.0859 2925.2441,3848.4928 Q2925.2441,3848.916 2925.651,3849.1438 Q2926.0742,3849.3717 2926.6113,3849.4531 Q2927.1647,3849.5182 2927.832,3849.6972 Q2928.5156,3849.8763 2928.9063,3850.1855 Q2929.6387,3850.7714 2929.6387,3851.748 Q2929.6387,3852.7246 2928.8411,3853.3268 Q2928.0599,3853.929 2926.7741,3853.929 Q2925.7487,3853.929 2924.8372,3853.4407 Q2924.5768,3853.7337 2924.3327,3853.7337 Q2923.6979,3853.7337 2923.6979,3852.9199 L2923.6979,3852.0898 Q2923.6979,3851.6829 2923.8281,3851.4713 Q2923.9746,3851.2597 2924.3164,3851.2597 Q2924.4303,3851.2597 2924.5117,3851.2923 Q2924.6094,3851.3085 2924.6745,3851.3574 Q2924.7396,3851.4062 2924.7884,3851.455 Q2924.8372,3851.5039 2924.8535,3851.5852 Q2924.8861,3851.6503 2924.9023,3851.6992 Q2924.9186,3851.7317 2924.9349,3851.7968 Q2924.9512,3851.8457 2924.9512,3851.8619 Q2925.0488,3852.2037 2925.5534,3852.4479 Q2926.0742,3852.6757 2926.6927,3852.6757 Q2927.3926,3852.6757 2927.8646,3852.399 Q2928.3366,3852.1223 2928.3366,3851.7317 Q2928.3366,3851.3574 2927.9622,3851.1295 Q2927.6042,3850.9016 2927.1159,3850.8365 Q2926.6439,3850.7552 2925.9928,3850.6087 Q2925.3581,3850.4459 2924.9674,3850.2343 Q2924.4954,3849.9576 2924.2188,3849.5019 Q2923.9421,3849.0299 2923.9421,3848.4928 Q2923.9421,3847.5488 2924.707,3846.9303 Q2925.4883,3846.2955 2926.6602,3846.2955 Q2927.6204,3846.2955 2928.2715,3846.7024 Q2928.3854,3846.4583 2928.4831,3846.3769 Q2928.5807,3846.2955 2928.7598,3846.2955 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="2951.5625" y="3859.8957">baseNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="2868.2292" x2="3054.6875" y1="3872.6041" y2="3872.6041"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="2875.5208" y="3880.9374"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="71.875" x="2892.1875" y="3893.4373">plan planNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="2868.2292" x2="3054.6875" y1="3905.104" y2="3905.104"/><ellipse cx="2878.6458" cy="3916.5623" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="2892.1875" y="3925.9372">Init() error</text><ellipse cx="2878.6458" cy="3940.7289" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="2892.1875" y="3950.1038">Start() error</text><ellipse cx="2878.6458" cy="3964.8954" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="2892.1875" y="3974.2703">Next() (bool, error)</text><ellipse cx="2878.6458" cy="3989.062" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="2892.1875" y="3998.4369">Spans(spans core.Spans)</text><ellipse cx="2878.6458" cy="4013.2286" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="2892.1875" y="4022.6035">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="2936.9792" y="4022.6035">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="2958.8542" y="4022.6035">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="2992.1875" y="4022.6035">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="3035.9375" y="4022.6035">{}</text><ellipse cx="2878.6458" cy="4037.3951" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="2892.1875" y="4046.77">Close() error</text><ellipse cx="2878.6458" cy="4061.5617" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="2892.1875" y="4070.9366">Source() planNode</text><!--MD5=[80eeec369b50fc713a1ca281a58555c6]
class planner.commitSelectNode--><rect codeLine="1206" fill="#2A9FD6" height="327.4988" id="planner.commitSelectNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="220.8333" x="3092.7083" y="3791.6667"/><ellipse cx="3146.3542" cy="3814.1666" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M3148.5514,3810.358 Q3148.9258,3810.358 3149.0397,3810.5696 Q3149.1699,3810.7812 3149.1699,3811.1718 L3149.1699,3812.2786 Q3149.1699,3813.1087 3148.5514,3813.1087 Q3148.4538,3813.1087 3148.3724,3813.0924 Q3148.291,3813.0761 3148.2259,3813.0436 Q3148.1771,3813.011 3148.1283,3812.9622 Q3148.0794,3812.8971 3148.0469,3812.8645 Q3148.0306,3812.832 3147.998,3812.7506 Q3147.9818,3812.6692 3147.9655,3812.6529 Q3147.9655,3812.6204 3147.9492,3812.539 Q3147.9329,3812.4576 3147.9329,3812.4414 Q3147.8516,3812.067 3147.4447,3811.8391 Q3147.0378,3811.595 3146.4518,3811.595 Q3145.8659,3811.595 3145.4427,3811.8717 Q3145.0358,3812.1484 3145.0358,3812.5553 Q3145.0358,3812.9785 3145.4427,3813.2063 Q3145.8659,3813.4342 3146.403,3813.5156 Q3146.9564,3813.5807 3147.6237,3813.7597 Q3148.3073,3813.9388 3148.6979,3814.248 Q3149.4303,3814.8339 3149.4303,3815.8105 Q3149.4303,3816.7871 3148.6328,3817.3893 Q3147.8516,3817.9915 3146.5658,3817.9915 Q3145.5404,3817.9915 3144.6289,3817.5032 Q3144.3685,3817.7962 3144.1243,3817.7962 Q3143.4896,3817.7962 3143.4896,3816.9824 L3143.4896,3816.1523 Q3143.4896,3815.7454 3143.6198,3815.5338 Q3143.7663,3815.3222 3144.1081,3815.3222 Q3144.222,3815.3222 3144.3034,3815.3548 Q3144.401,3815.371 3144.4661,3815.4199 Q3144.5313,3815.4687 3144.5801,3815.5175 Q3144.6289,3815.5664 3144.6452,3815.6477 Q3144.6777,3815.7128 3144.694,3815.7617 Q3144.7103,3815.7942 3144.7266,3815.8593 Q3144.7428,3815.9082 3144.7428,3815.9244 Q3144.8405,3816.2662 3145.3451,3816.5104 Q3145.8659,3816.7382 3146.4844,3816.7382 Q3147.1842,3816.7382 3147.6563,3816.4615 Q3148.1283,3816.1848 3148.1283,3815.7942 Q3148.1283,3815.4199 3147.7539,3815.192 Q3147.3958,3814.9641 3146.9076,3814.899 Q3146.4355,3814.8177 3145.7845,3814.6712 Q3145.1497,3814.5084 3144.7591,3814.2968 Q3144.2871,3814.0201 3144.0104,3813.5644 Q3143.7337,3813.0924 3143.7337,3812.5553 Q3143.7337,3811.6113 3144.4987,3810.9928 Q3145.2799,3810.358 3146.4518,3810.358 Q3147.4121,3810.358 3148.0632,3810.7649 Q3148.1771,3810.5208 3148.2747,3810.4394 Q3148.3724,3810.358 3148.5514,3810.358 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="3171.3542" y="3823.9582">commitSelectNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="3093.75" x2="3312.5" y1="3836.6666" y2="3836.6666"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3101.0417" y="3844.9999"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="3117.7083" y="3857.4998">p *Planner</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3101.0417" y="3869.1665"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="113.5417" x="3117.7083" y="3881.6664">source *dagScanNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3101.0417" y="3893.333"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="73.9583" x="3117.7083" y="3905.8329">subRenderInfo</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="3194.7917" y="3905.8329">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="85.4167" x="3216.6667" y="3905.8329">[string]renderInfo</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3101.0417" y="3917.4996"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="18.75" x="3117.7083" y="3929.9995">doc</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="3139.5833" y="3929.9995">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="3161.4583" y="3929.9995">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="3194.7917" y="3929.9995">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="3238.5417" y="3929.9995">{}</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="3093.75" x2="3312.5" y1="3941.6662" y2="3941.6662"/><ellipse cx="3104.1667" cy="3953.1245" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="3117.7083" y="3962.4994">Init() error</text><ellipse cx="3104.1667" cy="3977.2911" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="3117.7083" y="3986.666">Start() error</text><ellipse cx="3104.1667" cy="4001.4576" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="3117.7083" y="4010.8325">Next() (bool, error)</text><ellipse cx="3104.1667" cy="4025.6242" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="3117.7083" y="4034.9991">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="3162.5" y="4034.9991">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="3184.375" y="4034.9991">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="3217.7083" y="4034.9991">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="3261.4583" y="4034.9991">{}</text><ellipse cx="3104.1667" cy="4049.7907" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="3117.7083" y="4059.1657">Spans(spans core.Spans)</text><ellipse cx="3104.1667" cy="4073.9573" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="3117.7083" y="4083.3322">Close() error</text><ellipse cx="3104.1667" cy="4098.1239" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="3117.7083" y="4107.4988">Source() planNode</text><!--MD5=[cef86ac02144aedfde30257289199e5d]
class planner.commitSelectTopNode--><rect codeLine="1221" fill="#2A9FD6" height="303.3322" id="planner.commitSelectTopNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="188.5417" x="4060.9375" y="4987.5"/><ellipse cx="4090.0521" cy="5009.9999" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M4092.2493,5006.1914 Q4092.6237,5006.1914 4092.7376,5006.4029 Q4092.8678,5006.6145 4092.8678,5007.0052 L4092.8678,5008.1119 Q4092.8678,5008.942 4092.2493,5008.942 Q4092.1517,5008.942 4092.0703,5008.9257 Q4091.9889,5008.9095 4091.9238,5008.8769 Q4091.875,5008.8443 4091.8262,5008.7955 Q4091.7773,5008.7304 4091.7448,5008.6979 Q4091.7285,5008.6653 4091.696,5008.5839 Q4091.6797,5008.5026 4091.6634,5008.4863 Q4091.6634,5008.4537 4091.6471,5008.3723 Q4091.6309,5008.291 4091.6309,5008.2747 Q4091.5495,5007.9003 4091.1426,5007.6725 Q4090.7357,5007.4283 4090.1497,5007.4283 Q4089.5638,5007.4283 4089.1406,5007.705 Q4088.7337,5007.9817 4088.7337,5008.3886 Q4088.7337,5008.8118 4089.1406,5009.0397 Q4089.5638,5009.2675 4090.1009,5009.3489 Q4090.6543,5009.414 4091.3216,5009.593 Q4092.0052,5009.7721 4092.3958,5010.0813 Q4093.1283,5010.6673 4093.1283,5011.6438 Q4093.1283,5012.6204 4092.3307,5013.2226 Q4091.5495,5013.8248 4090.2637,5013.8248 Q4089.2383,5013.8248 4088.3268,5013.3365 Q4088.0664,5013.6295 4087.8223,5013.6295 Q4087.1875,5013.6295 4087.1875,5012.8157 L4087.1875,5011.9856 Q4087.1875,5011.5787 4087.3177,5011.3671 Q4087.4642,5011.1555 4087.806,5011.1555 Q4087.9199,5011.1555 4088.0013,5011.1881 Q4088.099,5011.2044 4088.1641,5011.2532 Q4088.2292,5011.302 4088.278,5011.3509 Q4088.3268,5011.3997 4088.3431,5011.4811 Q4088.3757,5011.5462 4088.3919,5011.595 Q4088.4082,5011.6276 4088.4245,5011.6927 Q4088.4408,5011.7415 4088.4408,5011.7578 Q4088.5384,5012.0996 4089.043,5012.3437 Q4089.5638,5012.5716 4090.1823,5012.5716 Q4090.8822,5012.5716 4091.3542,5012.2949 Q4091.8262,5012.0182 4091.8262,5011.6276 Q4091.8262,5011.2532 4091.4518,5011.0253 Q4091.0938,5010.7975 4090.6055,5010.7324 Q4090.1335,5010.651 4089.4824,5010.5045 Q4088.8477,5010.3417 4088.457,5010.1302 Q4087.985,5009.8535 4087.7083,5009.3977 Q4087.4316,5008.9257 4087.4316,5008.3886 Q4087.4316,5007.4446 4088.1966,5006.8261 Q4088.9779,5006.1914 4090.1497,5006.1914 Q4091.11,5006.1914 4091.7611,5006.5983 Q4091.875,5006.3541 4091.9727,5006.2727 Q4092.0703,5006.1914 4092.2493,5006.1914 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="114.5833" x="4112.0313" y="5019.7916">commitSelectTopNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="4061.9792" x2="4248.4375" y1="5032.4999" y2="5032.4999"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4069.2708" y="5040.8332"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="4085.9375" y="5053.3331">p *Planner</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4069.2708" y="5064.9998"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="71.875" x="4085.9375" y="5077.4997">plan planNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="4061.9792" x2="4248.4375" y1="5089.1664" y2="5089.1664"/><ellipse cx="4072.3958" cy="5100.6247" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="4085.9375" y="5109.9996">Init() error</text><ellipse cx="4072.3958" cy="5124.7913" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="4085.9375" y="5134.1662">Start() error</text><ellipse cx="4072.3958" cy="5148.9578" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="4085.9375" y="5158.3327">Next() (bool, error)</text><ellipse cx="4072.3958" cy="5173.1244" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="4085.9375" y="5182.4993">Spans(spans core.Spans)</text><ellipse cx="4072.3958" cy="5197.2909" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="4085.9375" y="5206.6659">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="4130.7292" y="5206.6659">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="4152.6042" y="5206.6659">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="4185.9375" y="5206.6659">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="4229.6875" y="5206.6659">{}</text><ellipse cx="4072.3958" cy="5221.4575" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="4085.9375" y="5230.8324">Source() planNode</text><ellipse cx="4072.3958" cy="5245.6241" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="4085.9375" y="5254.999">Close() error</text><ellipse cx="4072.3958" cy="5269.7906" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="4085.9375" y="5279.1656">Append() bool</text><!--MD5=[c1efd3092a11f7e87d210fedcbcee698]
class planner.createNode--><rect codeLine="1235" fill="#2A9FD6" height="375.8319" id="planner.createNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="188.5417" x="3494.2708" y="3767.1875"/><ellipse cx="3549.4792" cy="3789.6874" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M3551.6764,3785.8789 Q3552.0508,3785.8789 3552.1647,3786.0904 Q3552.2949,3786.302 3552.2949,3786.6927 L3552.2949,3787.7994 Q3552.2949,3788.6295 3551.6764,3788.6295 Q3551.5788,3788.6295 3551.4974,3788.6132 Q3551.416,3788.597 3551.3509,3788.5644 Q3551.3021,3788.5318 3551.2533,3788.483 Q3551.2044,3788.4179 3551.1719,3788.3854 Q3551.1556,3788.3528 3551.123,3788.2714 Q3551.1068,3788.1901 3551.0905,3788.1738 Q3551.0905,3788.1412 3551.0742,3788.0598 Q3551.0579,3787.9785 3551.0579,3787.9622 Q3550.9766,3787.5878 3550.5697,3787.36 Q3550.1628,3787.1158 3549.5768,3787.1158 Q3548.9909,3787.1158 3548.5677,3787.3925 Q3548.1608,3787.6692 3548.1608,3788.0761 Q3548.1608,3788.4993 3548.5677,3788.7272 Q3548.9909,3788.955 3549.528,3789.0364 Q3550.0814,3789.1015 3550.7487,3789.2805 Q3551.4323,3789.4596 3551.8229,3789.7688 Q3552.5553,3790.3548 3552.5553,3791.3313 Q3552.5553,3792.3079 3551.7578,3792.9101 Q3550.9766,3793.5123 3549.6908,3793.5123 Q3548.6654,3793.5123 3547.7539,3793.024 Q3547.4935,3793.317 3547.2493,3793.317 Q3546.6146,3793.317 3546.6146,3792.5032 L3546.6146,3791.6731 Q3546.6146,3791.2662 3546.7448,3791.0546 Q3546.8913,3790.843 3547.2331,3790.843 Q3547.347,3790.843 3547.4284,3790.8756 Q3547.526,3790.8919 3547.5911,3790.9407 Q3547.6563,3790.9895 3547.7051,3791.0384 Q3547.7539,3791.0872 3547.7702,3791.1686 Q3547.8027,3791.2337 3547.819,3791.2825 Q3547.8353,3791.3151 3547.8516,3791.3802 Q3547.8678,3791.429 3547.8678,3791.4453 Q3547.9655,3791.7871 3548.4701,3792.0312 Q3548.9909,3792.2591 3549.6094,3792.2591 Q3550.3092,3792.2591 3550.7813,3791.9824 Q3551.2533,3791.7057 3551.2533,3791.3151 Q3551.2533,3790.9407 3550.8789,3790.7128 Q3550.5208,3790.485 3550.0326,3790.4199 Q3549.5605,3790.3385 3548.9095,3790.192 Q3548.2747,3790.0292 3547.8841,3789.8177 Q3547.4121,3789.541 3547.1354,3789.0852 Q3546.8587,3788.6132 3546.8587,3788.0761 Q3546.8587,3787.1321 3547.6237,3786.5136 Q3548.4049,3785.8789 3549.5768,3785.8789 Q3550.5371,3785.8789 3551.1882,3786.2858 Q3551.3021,3786.0416 3551.3997,3785.9602 Q3551.4974,3785.8789 3551.6764,3785.8789 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="59.375" x="3574.4792" y="3799.4791">createNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="3495.3125" x2="3681.7708" y1="3812.1874" y2="3812.1874"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3502.6042" y="3820.5207"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="3519.2708" y="3833.0206">p *Planner</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3502.6042" y="3844.6873"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="3519.2708" y="3857.1872">collection client.Collection</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3502.6042" y="3868.8539"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="86.4583" x="3519.2708" y="3881.3538">newDocStr string</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3502.6042" y="3893.0204"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="131.25" x="3519.2708" y="3905.5203">doc *document.Document</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3502.6042" y="3917.187"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="42.7083" x="3519.2708" y="3929.6869">err error</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3502.6042" y="3941.3536"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="66.6667" x="3519.2708" y="3953.8535">returned bool</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="3495.3125" x2="3681.7708" y1="3965.5201" y2="3965.5201"/><ellipse cx="3505.7292" cy="3976.9784" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="3519.2708" y="3986.3534">Init() error</text><ellipse cx="3505.7292" cy="4001.145" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="3519.2708" y="4010.5199">Start() error</text><ellipse cx="3505.7292" cy="4025.3116" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="3519.2708" y="4034.6865">Next() (bool, error)</text><ellipse cx="3505.7292" cy="4049.4781" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="3519.2708" y="4058.8531">Spans(spans core.Spans)</text><ellipse cx="3505.7292" cy="4073.6447" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="3519.2708" y="4083.0196">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="3564.0625" y="4083.0196">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="3585.9375" y="4083.0196">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="3619.2708" y="4083.0196">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="3663.0208" y="4083.0196">{}</text><ellipse cx="3505.7292" cy="4097.8113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="3519.2708" y="4107.1862">Close() error</text><ellipse cx="3505.7292" cy="4121.9778" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="3519.2708" y="4131.3527">Source() planNode</text><!--MD5=[67f363516a469045abe76b0669ff4dd6]
class planner.dagScanNode--><rect codeLine="1252" fill="#2A9FD6" height="448.3316" id="planner.dagScanNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="188.5417" x="3719.2708" y="3731.25"/><ellipse cx="3768.2292" cy="3753.7499" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M3770.4264,3749.9414 Q3770.8008,3749.9414 3770.9147,3750.1529 Q3771.0449,3750.3645 3771.0449,3750.7552 L3771.0449,3751.8619 Q3771.0449,3752.692 3770.4264,3752.692 Q3770.3288,3752.692 3770.2474,3752.6757 Q3770.166,3752.6595 3770.1009,3752.6269 Q3770.0521,3752.5943 3770.0033,3752.5455 Q3769.9544,3752.4804 3769.9219,3752.4479 Q3769.9056,3752.4153 3769.873,3752.3339 Q3769.8568,3752.2526 3769.8405,3752.2363 Q3769.8405,3752.2037 3769.8242,3752.1223 Q3769.8079,3752.041 3769.8079,3752.0247 Q3769.7266,3751.6503 3769.3197,3751.4225 Q3768.9128,3751.1783 3768.3268,3751.1783 Q3767.7409,3751.1783 3767.3177,3751.455 Q3766.9108,3751.7317 3766.9108,3752.1386 Q3766.9108,3752.5618 3767.3177,3752.7897 Q3767.7409,3753.0175 3768.278,3753.0989 Q3768.8314,3753.164 3769.4987,3753.343 Q3770.1823,3753.5221 3770.5729,3753.8313 Q3771.3053,3754.4173 3771.3053,3755.3938 Q3771.3053,3756.3704 3770.5078,3756.9726 Q3769.7266,3757.5748 3768.4408,3757.5748 Q3767.4154,3757.5748 3766.5039,3757.0865 Q3766.2435,3757.3795 3765.9993,3757.3795 Q3765.3646,3757.3795 3765.3646,3756.5657 L3765.3646,3755.7356 Q3765.3646,3755.3287 3765.4948,3755.1171 Q3765.6413,3754.9055 3765.9831,3754.9055 Q3766.097,3754.9055 3766.1784,3754.9381 Q3766.276,3754.9544 3766.3411,3755.0032 Q3766.4063,3755.052 3766.4551,3755.1009 Q3766.5039,3755.1497 3766.5202,3755.2311 Q3766.5527,3755.2962 3766.569,3755.345 Q3766.5853,3755.3776 3766.6016,3755.4427 Q3766.6178,3755.4915 3766.6178,3755.5078 Q3766.7155,3755.8496 3767.2201,3756.0937 Q3767.7409,3756.3216 3768.3594,3756.3216 Q3769.0592,3756.3216 3769.5313,3756.0449 Q3770.0033,3755.7682 3770.0033,3755.3776 Q3770.0033,3755.0032 3769.6289,3754.7753 Q3769.2708,3754.5475 3768.7826,3754.4824 Q3768.3105,3754.401 3767.6595,3754.2545 Q3767.0247,3754.0917 3766.6341,3753.8802 Q3766.1621,3753.6035 3765.8854,3753.1477 Q3765.6087,3752.6757 3765.6087,3752.1386 Q3765.6087,3751.1946 3766.3737,3750.5761 Q3767.1549,3749.9414 3768.3268,3749.9414 Q3769.2871,3749.9414 3769.9382,3750.3483 Q3770.0521,3750.1041 3770.1497,3750.0227 Q3770.2474,3749.9414 3770.4264,3749.9414 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="71.875" x="3793.2292" y="3763.5416">dagScanNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="3720.3125" x2="3906.7708" y1="3776.2499" y2="3776.2499"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3727.6042" y="3784.5832"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="3744.2708" y="3797.0831">p *Planner</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3727.6042" y="3808.7498"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="72.9167" x="3744.2708" y="3821.2497">cid *go-cid.Cid</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3727.6042" y="3832.9164"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="3744.2708" y="3845.4163">field string</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3727.6042" y="3857.0829"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="3744.2708" y="3869.5828">depthLimit uint32</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3727.6042" y="3881.2495"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="93.75" x="3744.2708" y="3893.7494">depthVisited uint32</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3727.6042" y="3905.4161"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="3744.2708" y="3917.916">visitedNodes</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="3809.8958" y="3917.916">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="54.1667" x="3831.7708" y="3917.916">[string]bool</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3727.6042" y="3929.5826"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="98.9583" x="3744.2708" y="3942.0825">queuedCids *list.List</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3727.6042" y="3953.7492"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="3744.2708" y="3966.2491">headset *headsetScanNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3727.6042" y="3977.9157"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="18.75" x="3744.2708" y="3990.4157">doc</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="3766.1458" y="3990.4157">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="3788.0208" y="3990.4157">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="3821.3542" y="3990.4157">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="3865.1042" y="3990.4157">{}</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="3720.3125" x2="3906.7708" y1="4002.0823" y2="4002.0823"/><ellipse cx="3730.7292" cy="4013.5406" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="3744.2708" y="4022.9156">Init() error</text><ellipse cx="3730.7292" cy="4037.7072" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="3744.2708" y="4047.0821">Start() error</text><ellipse cx="3730.7292" cy="4061.8738" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="3744.2708" y="4071.2487">Spans(spans core.Spans)</text><ellipse cx="3730.7292" cy="4086.0403" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="3744.2708" y="4095.4152">Close() error</text><ellipse cx="3730.7292" cy="4110.2069" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="3744.2708" y="4119.5818">Source() planNode</text><ellipse cx="3730.7292" cy="4134.3735" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="3744.2708" y="4143.7484">Next() (bool, error)</text><ellipse cx="3730.7292" cy="4158.54" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="3744.2708" y="4167.9149">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="3789.0625" y="4167.9149">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="3810.9375" y="4167.9149">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="3844.2708" y="4167.9149">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="3888.0208" y="4167.9149">{}</text><!--MD5=[a26327925f89c49c8d276ef862207fd8]
class planner.dataSource--><rect codeLine="1272" fill="#2A9FD6" height="399.9985" id="planner.dataSource" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="505.2083" x="5535.9375" y="3755.2083"/><ellipse cx="5750" cy="3777.7083" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M5752.1973,3773.8997 Q5752.5716,3773.8997 5752.6855,3774.1113 Q5752.8158,3774.3229 5752.8158,3774.7135 L5752.8158,3775.8203 Q5752.8158,3776.6503 5752.1973,3776.6503 Q5752.0996,3776.6503 5752.0182,3776.6341 Q5751.9368,3776.6178 5751.8717,3776.5852 Q5751.8229,3776.5527 5751.7741,3776.5039 Q5751.7253,3776.4388 5751.6927,3776.4062 Q5751.6764,3776.3736 5751.6439,3776.2923 Q5751.6276,3776.2109 5751.6113,3776.1946 Q5751.6113,3776.1621 5751.5951,3776.0807 Q5751.5788,3775.9993 5751.5788,3775.983 Q5751.4974,3775.6087 5751.0905,3775.3808 Q5750.6836,3775.1367 5750.0977,3775.1367 Q5749.5117,3775.1367 5749.0885,3775.4134 Q5748.6816,3775.6901 5748.6816,3776.097 Q5748.6816,3776.5201 5749.0885,3776.748 Q5749.5117,3776.9759 5750.0488,3777.0572 Q5750.6022,3777.1223 5751.2695,3777.3014 Q5751.9531,3777.4804 5752.3438,3777.7897 Q5753.0762,3778.3756 5753.0762,3779.3522 Q5753.0762,3780.3287 5752.2786,3780.9309 Q5751.4974,3781.5332 5750.2116,3781.5332 Q5749.1862,3781.5332 5748.2747,3781.0449 Q5748.0143,3781.3378 5747.7702,3781.3378 Q5747.1354,3781.3378 5747.1354,3780.524 L5747.1354,3779.694 Q5747.1354,3779.2871 5747.2656,3779.0755 Q5747.4121,3778.8639 5747.7539,3778.8639 Q5747.8678,3778.8639 5747.9492,3778.8964 Q5748.0469,3778.9127 5748.112,3778.9615 Q5748.1771,3779.0104 5748.2259,3779.0592 Q5748.2747,3779.108 5748.291,3779.1894 Q5748.3236,3779.2545 5748.3398,3779.3033 Q5748.3561,3779.3359 5748.3724,3779.401 Q5748.3887,3779.4498 5748.3887,3779.4661 Q5748.4863,3779.8079 5748.9909,3780.052 Q5749.5117,3780.2799 5750.1302,3780.2799 Q5750.8301,3780.2799 5751.3021,3780.0032 Q5751.7741,3779.7265 5751.7741,3779.3359 Q5751.7741,3778.9615 5751.3997,3778.7337 Q5751.0417,3778.5058 5750.5534,3778.4407 Q5750.0814,3778.3593 5749.4303,3778.2128 Q5748.7956,3778.0501 5748.4049,3777.8385 Q5747.9329,3777.5618 5747.6563,3777.1061 Q5747.3796,3776.6341 5747.3796,3776.097 Q5747.3796,3775.1529 5748.1445,3774.5345 Q5748.9258,3773.8997 5750.0977,3773.8997 Q5751.0579,3773.8997 5751.709,3774.3066 Q5751.8229,3774.0624 5751.9206,3773.9811 Q5752.0182,3773.8997 5752.1973,3773.8997 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="58.3333" x="5775" y="3787.4999">dataSource</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="5536.9792" x2="6040.1042" y1="3800.2082" y2="3800.2082"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5544.2708" y="3808.5416"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="5560.9375" y="3821.0415">pipeNode *pipeNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5544.2708" y="3832.7081"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="119.7917" x="5560.9375" y="3845.208">parentSource planNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5544.2708" y="3856.8747"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="110.4167" x="5560.9375" y="3869.3746">childSource planNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5544.2708" y="3881.0413"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="83.3333" x="5560.9375" y="3893.5412">childName string</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5544.2708" y="3905.2078"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="5560.9375" y="3917.7077">lastParentDocIndex int</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5544.2708" y="3929.3744"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="5560.9375" y="3941.8743">lastChildDocIndex int</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="5536.9792" x2="6040.1042" y1="3953.5409" y2="3953.5409"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5544.2708" y="3961.8743"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="292.7083" x="5560.9375" y="3974.3742">mergeParent(keyFields []string, destination *orderedMap) (</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="5853.6458" y="3974.3742">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="5875.5208" y="3974.3742">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="5908.8542" y="3974.3742">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="5952.6042" y="3974.3742">{}, bool, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5544.2708" y="3986.0408"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="298.9583" x="5560.9375" y="3998.5408">appendChild(keyFields []string, valuesByKey *orderedMap) (</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="5859.8958" y="3998.5408">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="5881.7708" y="3998.5408">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="5915.1042" y="3998.5408">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="5958.8542" y="3998.5408">{}, bool, error)</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="5564.0625" y="4022.7073"/><ellipse cx="5547.3958" cy="4037.499" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="5560.9375" y="4046.8739">Init() error</text><ellipse cx="5547.3958" cy="4061.6655" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="5560.9375" y="4071.0405">Start() error</text><ellipse cx="5547.3958" cy="4085.8321" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="5560.9375" y="4095.207">Spans(spans core.Spans)</text><ellipse cx="5547.3958" cy="4109.9987" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="5560.9375" y="4119.3736">Close() error</text><ellipse cx="5547.3958" cy="4134.1652" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="5560.9375" y="4143.5401">Source() planNode</text><!--MD5=[0293f661e44384e9843e748fec60ac8f]
class planner.deleteNode--><rect codeLine="1290" fill="#2A9FD6" height="424.165" id="planner.deleteNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="188.5417" x="3944.2708" y="3743.2292"/><ellipse cx="4000.5208" cy="3765.7291" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M4002.7181,3761.9205 Q4003.0924,3761.9205 4003.2064,3762.1321 Q4003.3366,3762.3437 4003.3366,3762.7343 L4003.3366,3763.8411 Q4003.3366,3764.6712 4002.7181,3764.6712 Q4002.6204,3764.6712 4002.5391,3764.6549 Q4002.4577,3764.6386 4002.3926,3764.6061 Q4002.3438,3764.5735 4002.2949,3764.5247 Q4002.2461,3764.4596 4002.2135,3764.427 Q4002.1973,3764.3945 4002.1647,3764.3131 Q4002.1484,3764.2317 4002.1322,3764.2154 Q4002.1322,3764.1829 4002.1159,3764.1015 Q4002.0996,3764.0201 4002.0996,3764.0039 Q4002.0182,3763.6295 4001.6113,3763.4016 Q4001.2044,3763.1575 4000.6185,3763.1575 Q4000.0326,3763.1575 3999.6094,3763.4342 Q3999.2025,3763.7109 3999.2025,3764.1178 Q3999.2025,3764.541 3999.6094,3764.7688 Q4000.0326,3764.9967 4000.5697,3765.0781 Q4001.123,3765.1432 4001.7904,3765.3222 Q4002.474,3765.5013 4002.8646,3765.8105 Q4003.597,3766.3964 4003.597,3767.373 Q4003.597,3768.3496 4002.7995,3768.9518 Q4002.0182,3769.554 4000.7324,3769.554 Q3999.707,3769.554 3998.7956,3769.0657 Q3998.5352,3769.3587 3998.291,3769.3587 Q3997.6563,3769.3587 3997.6563,3768.5449 L3997.6563,3767.7148 Q3997.6563,3767.3079 3997.7865,3767.0963 Q3997.9329,3766.8847 3998.2747,3766.8847 Q3998.3887,3766.8847 3998.4701,3766.9173 Q3998.5677,3766.9335 3998.6328,3766.9824 Q3998.6979,3767.0312 3998.7467,3767.08 Q3998.7956,3767.1289 3998.8118,3767.2102 Q3998.8444,3767.2753 3998.8607,3767.3242 Q3998.877,3767.3567 3998.8932,3767.4218 Q3998.9095,3767.4707 3998.9095,3767.4869 Q3999.0072,3767.8287 3999.5117,3768.0729 Q4000.0326,3768.3007 4000.651,3768.3007 Q4001.3509,3768.3007 4001.8229,3768.024 Q4002.2949,3767.7473 4002.2949,3767.3567 Q4002.2949,3766.9824 4001.9206,3766.7545 Q4001.5625,3766.5266 4001.0742,3766.4615 Q4000.6022,3766.3802 3999.9512,3766.2337 Q3999.3164,3766.0709 3998.9258,3765.8593 Q3998.4538,3765.5826 3998.1771,3765.1269 Q3997.9004,3764.6549 3997.9004,3764.1178 Q3997.9004,3763.1738 3998.6654,3762.5553 Q3999.4466,3761.9205 4000.6185,3761.9205 Q4001.5788,3761.9205 4002.2298,3762.3274 Q4002.3438,3762.0833 4002.4414,3762.0019 Q4002.5391,3761.9205 4002.7181,3761.9205 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="4025.5208" y="3775.5207">deleteNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="3945.3125" x2="4131.7708" y1="3788.2291" y2="3788.2291"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3952.6042" y="3796.5624"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="3969.2708" y="3809.0623">p *Planner</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3952.6042" y="3820.729"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="3969.2708" y="3833.2289">collection client.Collection</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3952.6042" y="3844.8955"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="88.5417" x="3969.2708" y="3857.3954">filter *parser.Filter</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3952.6042" y="3869.0621"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="3969.2708" y="3881.562">ids []string</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3952.6042" y="3893.2287"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="58.3333" x="3969.2708" y="3905.7286">patch string</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3952.6042" y="3917.3952"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="76.0417" x="3969.2708" y="3929.8951">isUpdating bool</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3952.6042" y="3941.5618"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="3969.2708" y="3954.0617">deleteIter *valuesNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3952.6042" y="3965.7283"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="83.3333" x="3969.2708" y="3978.2283">results planNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="3945.3125" x2="4131.7708" y1="3989.8949" y2="3989.8949"/><ellipse cx="3955.7292" cy="4001.3532" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="3969.2708" y="4010.7282">Next() (bool, error)</text><ellipse cx="3955.7292" cy="4025.5198" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="3969.2708" y="4034.8947">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="4014.0625" y="4034.8947">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="4035.9375" y="4034.8947">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="4069.2708" y="4034.8947">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="4113.0208" y="4034.8947">{}</text><ellipse cx="3955.7292" cy="4049.6864" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="3969.2708" y="4059.0613">Spans(spans core.Spans)</text><ellipse cx="3955.7292" cy="4073.8529" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="3969.2708" y="4083.2279">Init() error</text><ellipse cx="3955.7292" cy="4098.0195" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="3969.2708" y="4107.3944">Start() error</text><ellipse cx="3955.7292" cy="4122.1861" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="3969.2708" y="4131.561">Close() error</text><ellipse cx="3955.7292" cy="4146.3526" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="3969.2708" y="4155.7275">Source() planNode</text><!--MD5=[1bf058b310b4857ac951045b8d257a60]
class planner.groupNode--><rect codeLine="1309" fill="#2A9FD6" height="399.9985" id="planner.groupNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="211.4583" x="4169.2708" y="3755.2083"/><ellipse cx="4237.5" cy="3777.7083" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M4239.6973,3773.8997 Q4240.0716,3773.8997 4240.1855,3774.1113 Q4240.3158,3774.3229 4240.3158,3774.7135 L4240.3158,3775.8203 Q4240.3158,3776.6503 4239.6973,3776.6503 Q4239.5996,3776.6503 4239.5182,3776.6341 Q4239.4368,3776.6178 4239.3717,3776.5852 Q4239.3229,3776.5527 4239.2741,3776.5039 Q4239.2253,3776.4388 4239.1927,3776.4062 Q4239.1764,3776.3736 4239.1439,3776.2923 Q4239.1276,3776.2109 4239.1113,3776.1946 Q4239.1113,3776.1621 4239.0951,3776.0807 Q4239.0788,3775.9993 4239.0788,3775.983 Q4238.9974,3775.6087 4238.5905,3775.3808 Q4238.1836,3775.1367 4237.5977,3775.1367 Q4237.0117,3775.1367 4236.5885,3775.4134 Q4236.1816,3775.6901 4236.1816,3776.097 Q4236.1816,3776.5201 4236.5885,3776.748 Q4237.0117,3776.9759 4237.5488,3777.0572 Q4238.1022,3777.1223 4238.7695,3777.3014 Q4239.4531,3777.4804 4239.8438,3777.7897 Q4240.5762,3778.3756 4240.5762,3779.3522 Q4240.5762,3780.3287 4239.7786,3780.9309 Q4238.9974,3781.5332 4237.7116,3781.5332 Q4236.6862,3781.5332 4235.7747,3781.0449 Q4235.5143,3781.3378 4235.2702,3781.3378 Q4234.6354,3781.3378 4234.6354,3780.524 L4234.6354,3779.694 Q4234.6354,3779.2871 4234.7656,3779.0755 Q4234.9121,3778.8639 4235.2539,3778.8639 Q4235.3678,3778.8639 4235.4492,3778.8964 Q4235.5469,3778.9127 4235.612,3778.9615 Q4235.6771,3779.0104 4235.7259,3779.0592 Q4235.7747,3779.108 4235.791,3779.1894 Q4235.8236,3779.2545 4235.8398,3779.3033 Q4235.8561,3779.3359 4235.8724,3779.401 Q4235.8887,3779.4498 4235.8887,3779.4661 Q4235.9863,3779.8079 4236.4909,3780.052 Q4237.0117,3780.2799 4237.6302,3780.2799 Q4238.3301,3780.2799 4238.8021,3780.0032 Q4239.2741,3779.7265 4239.2741,3779.3359 Q4239.2741,3778.9615 4238.8997,3778.7337 Q4238.5417,3778.5058 4238.0534,3778.4407 Q4237.5814,3778.3593 4236.9303,3778.2128 Q4236.2956,3778.0501 4235.9049,3777.8385 Q4235.4329,3777.5618 4235.1563,3777.1061 Q4234.8796,3776.6341 4234.8796,3776.097 Q4234.8796,3775.1529 4235.6445,3774.5345 Q4236.4258,3773.8997 4237.5977,3773.8997 Q4238.5579,3773.8997 4239.209,3774.3066 Q4239.3229,3774.0624 4239.4206,3773.9811 Q4239.5182,3773.8997 4239.6973,3773.8997 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="56.25" x="4262.5" y="3787.4999">groupNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="4170.3125" x2="4379.6875" y1="3800.2082" y2="3800.2082"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4177.6042" y="3808.5416"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="4194.2708" y="3821.0415">p *Planner</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4177.6042" y="3832.7081"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="4194.2708" y="3845.208">childSelect *parser.Select</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4177.6042" y="3856.8747"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="107.2917" x="4194.2708" y="3869.3746">groupByFields []string</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4177.6042" y="3881.0413"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="119.7917" x="4194.2708" y="3893.5412">dataSource dataSource</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4177.6042" y="3905.2078"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="40.625" x="4194.2708" y="3917.7077">values []</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="4234.8958" y="3917.7077">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="4256.7708" y="3917.7077">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="4290.1042" y="3917.7077">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="4333.8542" y="3917.7077">{}</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4177.6042" y="3929.3744"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="78.125" x="4194.2708" y="3941.8743">currentIndex int</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4177.6042" y="3953.5409"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="4194.2708" y="3966.0409">currentValue</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="4261.9792" y="3966.0409">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="4283.8542" y="3966.0409">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="4317.1875" y="3966.0409">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="4360.9375" y="3966.0409">{}</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="4170.3125" x2="4379.6875" y1="3977.7075" y2="3977.7075"/><ellipse cx="4180.7292" cy="3989.1658" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="4194.2708" y="3998.5408">Init() error</text><ellipse cx="4180.7292" cy="4013.3324" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="4194.2708" y="4022.7073">Start() error</text><ellipse cx="4180.7292" cy="4037.499" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="4194.2708" y="4046.8739">Spans(spans core.Spans)</text><ellipse cx="4180.7292" cy="4061.6655" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="4194.2708" y="4071.0405">Close() error</text><ellipse cx="4180.7292" cy="4085.8321" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="4194.2708" y="4095.207">Source() planNode</text><ellipse cx="4180.7292" cy="4109.9987" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="4194.2708" y="4119.3736">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="4239.0625" y="4119.3736">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="4260.9375" y="4119.3736">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="4294.2708" y="4119.3736">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="4338.0208" y="4119.3736">{}</text><ellipse cx="4180.7292" cy="4134.1652" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="4194.2708" y="4143.5401">Next() (bool, error)</text><!--MD5=[525ebd5c20046270e28a159699904f48]
class planner.headsetScanNode--><rect codeLine="1327" fill="#2A9FD6" height="424.165" id="planner.headsetScanNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="188.5417" x="4417.1875" y="3743.2292"/><ellipse cx="4456.1458" cy="3765.7291" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M4458.3431,3761.9205 Q4458.7174,3761.9205 4458.8314,3762.1321 Q4458.9616,3762.3437 4458.9616,3762.7343 L4458.9616,3763.8411 Q4458.9616,3764.6712 4458.3431,3764.6712 Q4458.2454,3764.6712 4458.1641,3764.6549 Q4458.0827,3764.6386 4458.0176,3764.6061 Q4457.9688,3764.5735 4457.9199,3764.5247 Q4457.8711,3764.4596 4457.8385,3764.427 Q4457.8223,3764.3945 4457.7897,3764.3131 Q4457.7734,3764.2317 4457.7572,3764.2154 Q4457.7572,3764.1829 4457.7409,3764.1015 Q4457.7246,3764.0201 4457.7246,3764.0039 Q4457.6432,3763.6295 4457.2363,3763.4016 Q4456.8294,3763.1575 4456.2435,3763.1575 Q4455.6576,3763.1575 4455.2344,3763.4342 Q4454.8275,3763.7109 4454.8275,3764.1178 Q4454.8275,3764.541 4455.2344,3764.7688 Q4455.6576,3764.9967 4456.1947,3765.0781 Q4456.748,3765.1432 4457.4154,3765.3222 Q4458.099,3765.5013 4458.4896,3765.8105 Q4459.222,3766.3964 4459.222,3767.373 Q4459.222,3768.3496 4458.4245,3768.9518 Q4457.6432,3769.554 4456.3574,3769.554 Q4455.332,3769.554 4454.4206,3769.0657 Q4454.1602,3769.3587 4453.916,3769.3587 Q4453.2813,3769.3587 4453.2813,3768.5449 L4453.2813,3767.7148 Q4453.2813,3767.3079 4453.4115,3767.0963 Q4453.5579,3766.8847 4453.8997,3766.8847 Q4454.0137,3766.8847 4454.0951,3766.9173 Q4454.1927,3766.9335 4454.2578,3766.9824 Q4454.3229,3767.0312 4454.3717,3767.08 Q4454.4206,3767.1289 4454.4368,3767.2102 Q4454.4694,3767.2753 4454.4857,3767.3242 Q4454.502,3767.3567 4454.5182,3767.4218 Q4454.5345,3767.4707 4454.5345,3767.4869 Q4454.6322,3767.8287 4455.1367,3768.0729 Q4455.6576,3768.3007 4456.276,3768.3007 Q4456.9759,3768.3007 4457.4479,3768.024 Q4457.9199,3767.7473 4457.9199,3767.3567 Q4457.9199,3766.9824 4457.5456,3766.7545 Q4457.1875,3766.5266 4456.6992,3766.4615 Q4456.2272,3766.3802 4455.5762,3766.2337 Q4454.9414,3766.0709 4454.5508,3765.8593 Q4454.0788,3765.5826 4453.8021,3765.1269 Q4453.5254,3764.6549 4453.5254,3764.1178 Q4453.5254,3763.1738 4454.2904,3762.5553 Q4455.0716,3761.9205 4456.2435,3761.9205 Q4457.2038,3761.9205 4457.8548,3762.3274 Q4457.9688,3762.0833 4458.0664,3762.0019 Q4458.1641,3761.9205 4458.3431,3761.9205 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="4480.3125" y="3775.5207">headsetScanNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="4418.2292" x2="4604.6875" y1="3788.2291" y2="3788.2291"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4425.5208" y="3796.5624"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="4442.1875" y="3809.0623">p *Planner</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4425.5208" y="3820.729"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="65.625" x="4442.1875" y="3833.2289">key core.Key</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4425.5208" y="3844.8955"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="89.5833" x="4442.1875" y="3857.3954">spans core.Spans</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4425.5208" y="3869.0621"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="4442.1875" y="3881.562">scanInitialized bool</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4425.5208" y="3893.2287"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="72.9167" x="4442.1875" y="3905.7286">cid *go-cid.Cid</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4425.5208" y="3917.3952"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="4442.1875" y="3929.8951">fetcher fetcher.HeadFetcher</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="4418.2292" x2="4604.6875" y1="3941.5618" y2="3941.5618"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4425.5208" y="3949.8951"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="76.0417" x="4442.1875" y="3962.395">initScan() error</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="4445.3125" y="3986.5616"/><ellipse cx="4428.6458" cy="4001.3532" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="4442.1875" y="4010.7282">Init() error</text><ellipse cx="4428.6458" cy="4025.5198" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="4442.1875" y="4034.8947">Spans(spans core.Spans)</text><ellipse cx="4428.6458" cy="4049.6864" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="4442.1875" y="4059.0613">Start() error</text><ellipse cx="4428.6458" cy="4073.8529" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="4442.1875" y="4083.2279">Next() (bool, error)</text><ellipse cx="4428.6458" cy="4098.0195" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="4442.1875" y="4107.3944">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="4486.9792" y="4107.3944">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="4508.8542" y="4107.3944">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="4542.1875" y="4107.3944">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="4585.9375" y="4107.3944">{}</text><ellipse cx="4428.6458" cy="4122.1861" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="4442.1875" y="4131.561">Close() error</text><ellipse cx="4428.6458" cy="4146.3526" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="4442.1875" y="4155.7275">Source() planNode</text><!--MD5=[e99065a0e2b5a8c609c952cafffdd2f6]
class planner.limitNode--><rect codeLine="1346" fill="#2A9FD6" height="351.6653" id="planner.limitNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="188.5417" x="4642.1875" y="3779.1667"/><ellipse cx="4704.1667" cy="3801.6666" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M4706.3639,3797.858 Q4706.7383,3797.858 4706.8522,3798.0696 Q4706.9824,3798.2812 4706.9824,3798.6718 L4706.9824,3799.7786 Q4706.9824,3800.6087 4706.3639,3800.6087 Q4706.2663,3800.6087 4706.1849,3800.5924 Q4706.1035,3800.5761 4706.0384,3800.5436 Q4705.9896,3800.511 4705.9408,3800.4622 Q4705.8919,3800.3971 4705.8594,3800.3645 Q4705.8431,3800.332 4705.8105,3800.2506 Q4705.7943,3800.1692 4705.778,3800.1529 Q4705.778,3800.1204 4705.7617,3800.039 Q4705.7454,3799.9576 4705.7454,3799.9414 Q4705.6641,3799.567 4705.2572,3799.3391 Q4704.8503,3799.095 4704.2643,3799.095 Q4703.6784,3799.095 4703.2552,3799.3717 Q4702.8483,3799.6484 4702.8483,3800.0553 Q4702.8483,3800.4785 4703.2552,3800.7063 Q4703.6784,3800.9342 4704.2155,3801.0156 Q4704.7689,3801.0807 4705.4362,3801.2597 Q4706.1198,3801.4388 4706.5104,3801.748 Q4707.2428,3802.3339 4707.2428,3803.3105 Q4707.2428,3804.2871 4706.4453,3804.8893 Q4705.6641,3805.4915 4704.3783,3805.4915 Q4703.3529,3805.4915 4702.4414,3805.0032 Q4702.181,3805.2962 4701.9368,3805.2962 Q4701.3021,3805.2962 4701.3021,3804.4824 L4701.3021,3803.6523 Q4701.3021,3803.2454 4701.4323,3803.0338 Q4701.5788,3802.8222 4701.9206,3802.8222 Q4702.0345,3802.8222 4702.1159,3802.8548 Q4702.2135,3802.871 4702.2786,3802.9199 Q4702.3438,3802.9687 4702.3926,3803.0175 Q4702.4414,3803.0664 4702.4577,3803.1477 Q4702.4902,3803.2128 4702.5065,3803.2617 Q4702.5228,3803.2942 4702.5391,3803.3593 Q4702.5553,3803.4082 4702.5553,3803.4244 Q4702.653,3803.7662 4703.1576,3804.0104 Q4703.6784,3804.2382 4704.2969,3804.2382 Q4704.9967,3804.2382 4705.4688,3803.9615 Q4705.9408,3803.6848 4705.9408,3803.2942 Q4705.9408,3802.9199 4705.5664,3802.692 Q4705.2083,3802.4641 4704.7201,3802.399 Q4704.248,3802.3177 4703.597,3802.1712 Q4702.9622,3802.0084 4702.5716,3801.7968 Q4702.0996,3801.5201 4701.8229,3801.0644 Q4701.5462,3800.5924 4701.5462,3800.0553 Q4701.5462,3799.1113 4702.3112,3798.4928 Q4703.0924,3797.858 4704.2643,3797.858 Q4705.2246,3797.858 4705.8757,3798.2649 Q4705.9896,3798.0208 4706.0872,3797.9394 Q4706.1849,3797.858 4706.3639,3797.858 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="45.8333" x="4729.1667" y="3811.4582">limitNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="4643.2292" x2="4829.6875" y1="3824.1666" y2="3824.1666"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4650.5208" y="3832.4999"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="4667.1875" y="3844.9998">p *Planner</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4650.5208" y="3856.6665"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="71.875" x="4667.1875" y="3869.1664">plan planNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4650.5208" y="3880.833"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="45.8333" x="4667.1875" y="3893.3329">limit int64</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4650.5208" y="3904.9996"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="54.1667" x="4667.1875" y="3917.4995">offset int64</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4650.5208" y="3929.1662"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="72.9167" x="4667.1875" y="3941.6661">rowIndex int64</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="4643.2292" x2="4829.6875" y1="3953.3327" y2="3953.3327"/><ellipse cx="4653.6458" cy="3964.7911" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="4667.1875" y="3974.166">Init() error</text><ellipse cx="4653.6458" cy="3988.9576" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="4667.1875" y="3998.3325">Start() error</text><ellipse cx="4653.6458" cy="4013.1242" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="4667.1875" y="4022.4991">Spans(spans core.Spans)</text><ellipse cx="4653.6458" cy="4037.2907" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="4667.1875" y="4046.6657">Close() error</text><ellipse cx="4653.6458" cy="4061.4573" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="4667.1875" y="4070.8322">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="4711.9792" y="4070.8322">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="4733.8542" y="4070.8322">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="4767.1875" y="4070.8322">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="4810.9375" y="4070.8322">{}</text><ellipse cx="4653.6458" cy="4085.6239" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="4667.1875" y="4094.9988">Next() (bool, error)</text><ellipse cx="4653.6458" cy="4109.7904" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="4667.1875" y="4119.1654">Source() planNode</text><!--MD5=[da5cc29e757ee448e0762606ffb3d4de]
class planner.mergeNode--><rect codeLine="1362" fill="#2A9FD6" height="75.4165" id="planner.mergeNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="101.0417" x="749.4792" y="3917.7083"/><ellipse cx="764.0625" cy="3934.9999" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M766.0482,3937.3925 Q766.4551,3937.3925 766.6667,3937.5227 Q766.8783,3937.6529 766.8783,3938.0273 Q766.8783,3938.6458 766.0482,3938.6458 L762.2721,3938.6458 Q761.4583,3938.6458 761.4583,3938.0273 Q761.4583,3937.6529 761.6699,3937.5227 Q761.8815,3937.3925 762.2721,3937.3925 L763.5417,3937.3925 L763.5417,3932.6074 L762.2721,3932.6074 Q761.4583,3932.6074 761.4583,3931.9889 Q761.4583,3931.6145 761.6699,3931.4843 Q761.8815,3931.3541 762.2721,3931.3541 L766.0482,3931.3541 Q766.4551,3931.3541 766.6667,3931.4843 Q766.8783,3931.6145 766.8783,3931.9889 Q766.8783,3932.6074 766.0482,3932.6074 L764.7949,3932.6074 L764.7949,3937.3925 L766.0482,3937.3925 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="59.375" x="782.8125" y="3939.5832">mergeNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="750.5208" x2="849.4792" y1="3952.2916" y2="3952.2916"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="750.5208" x2="849.4792" y1="3960.6249" y2="3960.6249"/><ellipse cx="760.9375" cy="3972.0832" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="774.4792" y="3981.4581">Merge() bool</text><!--MD5=[aacb14fb71840deaee7222dbd1fe012a]
class planner.multiScanNode--><rect codeLine="1366" fill="#2A9FD6" height="254.9991" id="planner.multiScanNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="132.2917" x="924.4792" y="6090.1042"/><ellipse cx="945.625" cy="6112.6041" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M947.8223,6108.7955 Q948.1966,6108.7955 948.3105,6109.0071 Q948.4408,6109.2187 948.4408,6109.6093 L948.4408,6110.7161 Q948.4408,6111.5462 947.8223,6111.5462 Q947.7246,6111.5462 947.6432,6111.5299 Q947.5618,6111.5136 947.4967,6111.4811 Q947.4479,6111.4485 947.3991,6111.3997 Q947.3503,6111.3346 947.3177,6111.302 Q947.3014,6111.2695 947.2689,6111.1881 Q947.2526,6111.1067 947.2363,6111.0904 Q947.2363,6111.0579 947.2201,6110.9765 Q947.2038,6110.8951 947.2038,6110.8789 Q947.1224,6110.5045 946.7155,6110.2766 Q946.3086,6110.0325 945.7227,6110.0325 Q945.1367,6110.0325 944.7135,6110.3092 Q944.3066,6110.5859 944.3066,6110.9928 Q944.3066,6111.416 944.7135,6111.6438 Q945.1367,6111.8717 945.6738,6111.9531 Q946.2272,6112.0182 946.8945,6112.1972 Q947.5781,6112.3763 947.9688,6112.6855 Q948.7012,6113.2714 948.7012,6114.248 Q948.7012,6115.2246 947.9036,6115.8268 Q947.1224,6116.429 945.8366,6116.429 Q944.8112,6116.429 943.8997,6115.9407 Q943.6393,6116.2337 943.3952,6116.2337 Q942.7604,6116.2337 942.7604,6115.4199 L942.7604,6114.5898 Q942.7604,6114.1829 942.8906,6113.9713 Q943.0371,6113.7597 943.3789,6113.7597 Q943.4928,6113.7597 943.5742,6113.7923 Q943.6719,6113.8085 943.737,6113.8574 Q943.8021,6113.9062 943.8509,6113.955 Q943.8997,6114.0039 943.916,6114.0852 Q943.9486,6114.1503 943.9648,6114.1992 Q943.9811,6114.2317 943.9974,6114.2968 Q944.0137,6114.3457 944.0137,6114.3619 Q944.1113,6114.7037 944.6159,6114.9479 Q945.1367,6115.1757 945.7552,6115.1757 Q946.4551,6115.1757 946.9271,6114.899 Q947.3991,6114.6223 947.3991,6114.2317 Q947.3991,6113.8574 947.0247,6113.6295 Q946.6667,6113.4016 946.1784,6113.3365 Q945.7064,6113.2552 945.0553,6113.1087 Q944.4206,6112.9459 944.0299,6112.7343 Q943.5579,6112.4576 943.2813,6112.0019 Q943.0046,6111.5299 943.0046,6110.9928 Q943.0046,6110.0488 943.7695,6109.4303 Q944.5508,6108.7955 945.7227,6108.7955 Q946.6829,6108.7955 947.334,6109.2024 Q947.4479,6108.9583 947.5456,6108.8769 Q947.6432,6108.7955 947.8223,6108.7955 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="76.0417" x="965.8333" y="6122.3957">multiScanNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="925.5208" x2="1055.7292" y1="6135.1041" y2="6135.1041"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="932.8125" y="6143.4374"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="79.1667" x="949.4792" y="6155.9373">numReaders int</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="932.8125" y="6167.604"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="949.4792" y="6180.1039">numCalls int</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="932.8125" y="6191.7705"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="949.4792" y="6204.2704">lastBool bool</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="932.8125" y="6215.9371"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="949.4792" y="6228.437">lastErr error</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="925.5208" x2="1055.7292" y1="6240.1037" y2="6240.1037"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="932.8125" y="6248.437"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="949.4792" y="6260.9369">addReader()</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="952.6042" y="6285.1035"/><ellipse cx="935.9375" cy="6299.8951" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="949.4792" y="6309.27">Source() planNode</text><ellipse cx="935.9375" cy="6324.0617" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="949.4792" y="6333.4366">Next() (bool, error)</text><!--MD5=[0a77b3026f376e52c48a94f95d88a77a]
class planner.orderedMap--><rect codeLine="1378" fill="#2A9FD6" height="158.3328" id="planner.orderedMap" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="401.0417" x="6077.6042" y="3876.0417"/><ellipse cx="6238.0208" cy="3898.5416" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M6240.2181,3894.733 Q6240.5924,3894.733 6240.7064,3894.9446 Q6240.8366,3895.1562 6240.8366,3895.5468 L6240.8366,3896.6536 Q6240.8366,3897.4837 6240.2181,3897.4837 Q6240.1204,3897.4837 6240.0391,3897.4674 Q6239.9577,3897.4511 6239.8926,3897.4186 Q6239.8438,3897.386 6239.7949,3897.3372 Q6239.7461,3897.2721 6239.7135,3897.2395 Q6239.6973,3897.207 6239.6647,3897.1256 Q6239.6484,3897.0442 6239.6322,3897.0279 Q6239.6322,3896.9954 6239.6159,3896.914 Q6239.5996,3896.8326 6239.5996,3896.8164 Q6239.5182,3896.442 6239.1113,3896.2141 Q6238.7044,3895.97 6238.1185,3895.97 Q6237.5326,3895.97 6237.1094,3896.2467 Q6236.7025,3896.5234 6236.7025,3896.9303 Q6236.7025,3897.3535 6237.1094,3897.5813 Q6237.5326,3897.8092 6238.0697,3897.8906 Q6238.623,3897.9557 6239.2904,3898.1347 Q6239.974,3898.3138 6240.3646,3898.623 Q6241.097,3899.2089 6241.097,3900.1855 Q6241.097,3901.1621 6240.2995,3901.7643 Q6239.5182,3902.3665 6238.2324,3902.3665 Q6237.207,3902.3665 6236.2956,3901.8782 Q6236.0352,3902.1712 6235.791,3902.1712 Q6235.1563,3902.1712 6235.1563,3901.3574 L6235.1563,3900.5273 Q6235.1563,3900.1204 6235.2865,3899.9088 Q6235.4329,3899.6972 6235.7747,3899.6972 Q6235.8887,3899.6972 6235.9701,3899.7298 Q6236.0677,3899.746 6236.1328,3899.7949 Q6236.1979,3899.8437 6236.2467,3899.8925 Q6236.2956,3899.9414 6236.3118,3900.0227 Q6236.3444,3900.0878 6236.3607,3900.1367 Q6236.377,3900.1692 6236.3932,3900.2343 Q6236.4095,3900.2832 6236.4095,3900.2994 Q6236.5072,3900.6412 6237.0117,3900.8854 Q6237.5326,3901.1132 6238.151,3901.1132 Q6238.8509,3901.1132 6239.3229,3900.8365 Q6239.7949,3900.5598 6239.7949,3900.1692 Q6239.7949,3899.7949 6239.4206,3899.567 Q6239.0625,3899.3391 6238.5742,3899.274 Q6238.1022,3899.1927 6237.4512,3899.0462 Q6236.8164,3898.8834 6236.4258,3898.6718 Q6235.9538,3898.3951 6235.6771,3897.9394 Q6235.4004,3897.4674 6235.4004,3896.9303 Q6235.4004,3895.9863 6236.1654,3895.3678 Q6236.9466,3894.733 6238.1185,3894.733 Q6239.0788,3894.733 6239.7298,3895.1399 Q6239.8438,3894.8958 6239.9414,3894.8144 Q6240.0391,3894.733 6240.2181,3894.733 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="6263.0208" y="3908.3332">orderedMap</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="6078.6458" x2="6477.6042" y1="3921.0416" y2="3921.0416"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="6085.9375" y="3929.3749"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="40.625" x="6102.6042" y="3941.8748">values []</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="6143.2292" y="3941.8748">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="6165.1042" y="3941.8748">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="6198.4375" y="3941.8748">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="6242.1875" y="3941.8748">{}</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="6085.9375" y="3953.5415"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="68.75" x="6102.6042" y="3966.0414">indexesByKey</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="6174.4792" y="3966.0414">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="44.7917" x="6196.3542" y="3966.0414">[string]int</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="6078.6458" x2="6477.6042" y1="3977.708" y2="3977.708"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="6085.9375" y="3986.0414"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="250" x="6102.6042" y="3998.5413">mergeParent(key string, childAddress string, value</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="6355.7292" y="3998.5413">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="6377.6042" y="3998.5413">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="6410.9375" y="3998.5413">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="12.5" x="6454.6875" y="3998.5413">{})</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="6085.9375" y="4010.2079"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="246.875" x="6102.6042" y="4022.7078">appendChild(key string, childAddress string, value</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="6352.6042" y="4022.7078">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="6374.4792" y="4022.7078">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="6407.8125" y="4022.7078">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="12.5" x="6451.5625" y="4022.7078">{})</text><!--MD5=[3155431f260e6a358ea61d4498b8e6b9]
class planner.parallelNode--><rect codeLine="1386" fill="#2A9FD6" height="544.9978" id="planner.parallelNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="305.2083" x="2465.1042" y="4866.6667"/><ellipse cx="2577.0833" cy="4889.1666" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M2579.2806,4885.358 Q2579.6549,4885.358 2579.7689,4885.5696 Q2579.8991,4885.7812 2579.8991,4886.1718 L2579.8991,4887.2786 Q2579.8991,4888.1087 2579.2806,4888.1087 Q2579.1829,4888.1087 2579.1016,4888.0924 Q2579.0202,4888.0761 2578.9551,4888.0436 Q2578.9063,4888.011 2578.8574,4887.9622 Q2578.8086,4887.8971 2578.776,4887.8645 Q2578.7598,4887.832 2578.7272,4887.7506 Q2578.7109,4887.6692 2578.6947,4887.6529 Q2578.6947,4887.6204 2578.6784,4887.539 Q2578.6621,4887.4576 2578.6621,4887.4414 Q2578.5807,4887.067 2578.1738,4886.8391 Q2577.7669,4886.595 2577.181,4886.595 Q2576.5951,4886.595 2576.1719,4886.8717 Q2575.765,4887.1484 2575.765,4887.5553 Q2575.765,4887.9785 2576.1719,4888.2063 Q2576.5951,4888.4342 2577.1322,4888.5156 Q2577.6855,4888.5807 2578.3529,4888.7597 Q2579.0365,4888.9388 2579.4271,4889.248 Q2580.1595,4889.8339 2580.1595,4890.8105 Q2580.1595,4891.7871 2579.362,4892.3893 Q2578.5807,4892.9915 2577.2949,4892.9915 Q2576.2695,4892.9915 2575.3581,4892.5032 Q2575.0977,4892.7962 2574.8535,4892.7962 Q2574.2188,4892.7962 2574.2188,4891.9824 L2574.2188,4891.1523 Q2574.2188,4890.7454 2574.349,4890.5338 Q2574.4954,4890.3222 2574.8372,4890.3222 Q2574.9512,4890.3222 2575.0326,4890.3548 Q2575.1302,4890.371 2575.1953,4890.4199 Q2575.2604,4890.4687 2575.3092,4890.5175 Q2575.3581,4890.5664 2575.3743,4890.6477 Q2575.4069,4890.7128 2575.4232,4890.7617 Q2575.4395,4890.7942 2575.4557,4890.8593 Q2575.472,4890.9082 2575.472,4890.9244 Q2575.5697,4891.2662 2576.0742,4891.5104 Q2576.5951,4891.7382 2577.2135,4891.7382 Q2577.9134,4891.7382 2578.3854,4891.4615 Q2578.8574,4891.1848 2578.8574,4890.7942 Q2578.8574,4890.4199 2578.4831,4890.192 Q2578.125,4889.9641 2577.6367,4889.899 Q2577.1647,4889.8177 2576.5137,4889.6712 Q2575.8789,4889.5084 2575.4883,4889.2968 Q2575.0163,4889.0201 2574.7396,4888.5644 Q2574.4629,4888.0924 2574.4629,4887.5553 Q2574.4629,4886.6113 2575.2279,4885.9928 Q2576.0091,4885.358 2577.181,4885.358 Q2578.1413,4885.358 2578.7923,4885.7649 Q2578.9063,4885.5208 2579.0039,4885.4394 Q2579.1016,4885.358 2579.2806,4885.358 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2602.0833" y="4898.9582">parallelNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="2466.1458" x2="2769.2708" y1="4911.6666" y2="4911.6666"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="2473.4375" y="4919.9999"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="2490.1042" y="4932.4998">p *Planner</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="2473.4375" y="4944.1665"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="96.875" x="2490.1042" y="4956.6664">children []planNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="2473.4375" y="4968.333"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="88.5417" x="2490.1042" y="4980.8329">childFields []string</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="2473.4375" y="4992.4996"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="130.2083" x="2490.1042" y="5004.9995">multiscan *multiScanNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="2473.4375" y="5016.6662"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="18.75" x="2490.1042" y="5029.1661">doc</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="2511.9792" y="5029.1661">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="2533.8542" y="5029.1661">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="2567.1875" y="5029.1661">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="2610.9375" y="5029.1661">{}</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="2466.1458" x2="2769.2708" y1="5040.8327" y2="5040.8327"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="2473.4375" y="5049.1661"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="80.2083" x="2490.1042" y="5061.666">applyToPlans(fn</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="2573.4375" y="5061.666">func</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="116.6667" x="2595.3125" y="5061.666">(planNode) error) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="2473.4375" y="5073.3326"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="255.2083" x="2490.1042" y="5085.8325">nextMerge(index int, plan mergeNode) (bool, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="2473.4375" y="5097.4992"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="266.6667" x="2490.1042" y="5109.9991">nextAppend(index int, plan appendNode) (bool, error)</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="2493.2292" y="5134.1657"/><ellipse cx="2476.5625" cy="5148.9573" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="2490.1042" y="5158.3322">Init() error</text><ellipse cx="2476.5625" cy="5173.1239" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="2490.1042" y="5182.4988">Start() error</text><ellipse cx="2476.5625" cy="5197.2904" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="2490.1042" y="5206.6654">Spans(spans core.Spans)</text><ellipse cx="2476.5625" cy="5221.457" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="2490.1042" y="5230.8319">Close() error</text><ellipse cx="2476.5625" cy="5245.6236" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="2490.1042" y="5254.9985">Next() (bool, error)</text><ellipse cx="2476.5625" cy="5269.7901" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="2490.1042" y="5279.165">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="2534.8958" y="5279.165">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="2556.7708" y="5279.165">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="2590.1042" y="5279.165">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="2633.8542" y="5279.165">{}</text><ellipse cx="2476.5625" cy="5293.9567" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="2490.1042" y="5303.3316">Source() planNode</text><ellipse cx="2476.5625" cy="5318.1233" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="107.2917" x="2490.1042" y="5327.4982">Children() []planNode</text><ellipse cx="2476.5625" cy="5342.2898" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="213.5417" x="2490.1042" y="5351.6647">AddChild(field string, node planNode) error</text><ellipse cx="2476.5625" cy="5366.4564" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="268.75" x="2490.1042" y="5375.8313">ReplaceChildAt(i int, field string, node planNode) error</text><ellipse cx="2476.5625" cy="5390.6229" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="188.5417" x="2490.1042" y="5399.9979">SetMultiScanner(ms *multiScanNode)</text><!--MD5=[9f0038cfbbba32d60b8d55ca536bb024]
class planner.pipeNode--><rect codeLine="1410" fill="#2A9FD6" height="303.3322" id="planner.pipeNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="218.75" x="4944.7917" y="3803.6458"/><ellipse cx="5020.8333" cy="3826.1458" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M5023.0306,3822.3372 Q5023.4049,3822.3372 5023.5189,3822.5488 Q5023.6491,3822.7604 5023.6491,3823.151 L5023.6491,3824.2578 Q5023.6491,3825.0878 5023.0306,3825.0878 Q5022.9329,3825.0878 5022.8516,3825.0716 Q5022.7702,3825.0553 5022.7051,3825.0227 Q5022.6563,3824.9902 5022.6074,3824.9414 Q5022.5586,3824.8763 5022.526,3824.8437 Q5022.5098,3824.8111 5022.4772,3824.7298 Q5022.4609,3824.6484 5022.4447,3824.6321 Q5022.4447,3824.5996 5022.4284,3824.5182 Q5022.4121,3824.4368 5022.4121,3824.4205 Q5022.3307,3824.0462 5021.9238,3823.8183 Q5021.5169,3823.5742 5020.931,3823.5742 Q5020.3451,3823.5742 5019.9219,3823.8509 Q5019.515,3824.1276 5019.515,3824.5345 Q5019.515,3824.9576 5019.9219,3825.1855 Q5020.3451,3825.4134 5020.8822,3825.4947 Q5021.4355,3825.5598 5022.1029,3825.7389 Q5022.7865,3825.9179 5023.1771,3826.2272 Q5023.9095,3826.8131 5023.9095,3827.7897 Q5023.9095,3828.7662 5023.112,3829.3684 Q5022.3307,3829.9707 5021.0449,3829.9707 Q5020.0195,3829.9707 5019.1081,3829.4824 Q5018.8477,3829.7753 5018.6035,3829.7753 Q5017.9688,3829.7753 5017.9688,3828.9615 L5017.9688,3828.1315 Q5017.9688,3827.7246 5018.099,3827.513 Q5018.2454,3827.3014 5018.5872,3827.3014 Q5018.7012,3827.3014 5018.7826,3827.3339 Q5018.8802,3827.3502 5018.9453,3827.399 Q5019.0104,3827.4479 5019.0592,3827.4967 Q5019.1081,3827.5455 5019.1243,3827.6269 Q5019.1569,3827.692 5019.1732,3827.7408 Q5019.1895,3827.7734 5019.2057,3827.8385 Q5019.222,3827.8873 5019.222,3827.9036 Q5019.3197,3828.2454 5019.8242,3828.4895 Q5020.3451,3828.7174 5020.9635,3828.7174 Q5021.6634,3828.7174 5022.1354,3828.4407 Q5022.6074,3828.164 5022.6074,3827.7734 Q5022.6074,3827.399 5022.2331,3827.1712 Q5021.875,3826.9433 5021.3867,3826.8782 Q5020.9147,3826.7968 5020.2637,3826.6503 Q5019.6289,3826.4876 5019.2383,3826.276 Q5018.7663,3825.9993 5018.4896,3825.5436 Q5018.2129,3825.0716 5018.2129,3824.5345 Q5018.2129,3823.5904 5018.9779,3822.972 Q5019.7591,3822.3372 5020.931,3822.3372 Q5021.8913,3822.3372 5022.5423,3822.7441 Q5022.6563,3822.4999 5022.7539,3822.4186 Q5022.8516,3822.3372 5023.0306,3822.3372 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="47.9167" x="5045.8333" y="3835.9374">pipeNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="4945.8333" x2="5162.5" y1="3848.6457" y2="3848.6457"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4953.125" y="3856.9791"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="85.4167" x="4969.7917" y="3869.479">source planNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4953.125" y="3881.1456"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="4969.7917" y="3893.6455">docs *container.DocumentContainer</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="4953.125" y="3905.3122"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="4969.7917" y="3917.8121">docIndex int</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="4945.8333" x2="5162.5" y1="3929.4788" y2="3929.4788"/><ellipse cx="4956.25" cy="3940.9371" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="4969.7917" y="3950.312">Init() error</text><ellipse cx="4956.25" cy="3965.1037" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="4969.7917" y="3974.4786">Start() error</text><ellipse cx="4956.25" cy="3989.2702" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="4969.7917" y="3998.6451">Spans(spans core.Spans)</text><ellipse cx="4956.25" cy="4013.4368" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="4969.7917" y="4022.8117">Close() error</text><ellipse cx="4956.25" cy="4037.6033" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="4969.7917" y="4046.9783">Source() planNode</text><ellipse cx="4956.25" cy="4061.7699" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="4969.7917" y="4071.1448">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="5014.5833" y="4071.1448">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="5036.4583" y="4071.1448">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="5069.7917" y="4071.1448">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="5113.5417" y="4071.1448">{}</text><ellipse cx="4956.25" cy="4085.9365" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="4969.7917" y="4095.3114">Next() (bool, error)</text><!--MD5=[00c3ed8760333c9e4fea0c62a13bba89]
class planner.planNode--><rect codeLine="1424" fill="#2A9FD6" height="220.4158" id="planner.planNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="188.5417" x="3208.8542" y="2983.3333"/><ellipse cx="3269.7917" cy="3000.6249" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M3271.7773,3003.0175 Q3272.1842,3003.0175 3272.3958,3003.1477 Q3272.6074,3003.2779 3272.6074,3003.6523 Q3272.6074,3004.2708 3271.7773,3004.2708 L3268.0013,3004.2708 Q3267.1875,3004.2708 3267.1875,3003.6523 Q3267.1875,3003.2779 3267.3991,3003.1477 Q3267.6107,3003.0175 3268.0013,3003.0175 L3269.2708,3003.0175 L3269.2708,2998.2324 L3268.0013,2998.2324 Q3267.1875,2998.2324 3267.1875,2997.6139 Q3267.1875,2997.2395 3267.3991,2997.1093 Q3267.6107,2996.9791 3268.0013,2996.9791 L3271.7773,2996.9791 Q3272.1842,2996.9791 3272.3958,2997.1093 Q3272.6074,2997.2395 3272.6074,2997.6139 Q3272.6074,2998.2324 3271.7773,2998.2324 L3270.5241,2998.2324 L3270.5241,3003.0175 L3271.7773,3003.0175 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="47.9167" x="3294.7917" y="3005.2082">planNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="3209.8958" x2="3396.3542" y1="3017.9166" y2="3017.9166"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="3209.8958" x2="3396.3542" y1="3026.2499" y2="3026.2499"/><ellipse cx="3220.3125" cy="3037.7082" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="3233.8542" y="3047.0831">Init() error</text><ellipse cx="3220.3125" cy="3061.8748" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="3233.8542" y="3071.2497">Start() error</text><ellipse cx="3220.3125" cy="3086.0414" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="3233.8542" y="3095.4163">Next() (bool, error)</text><ellipse cx="3220.3125" cy="3110.2079" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="3233.8542" y="3119.5828">Spans( core.Spans)</text><ellipse cx="3220.3125" cy="3134.3745" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="3233.8542" y="3143.7494">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="3278.6458" y="3143.7494">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="3300.5208" y="3143.7494">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="3333.8542" y="3143.7494">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="3377.6042" y="3143.7494">{}</text><ellipse cx="3220.3125" cy="3158.5411" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="3233.8542" y="3167.916">Source() planNode</text><ellipse cx="3220.3125" cy="3182.7076" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="3233.8542" y="3192.0825">Close() error</text><!--MD5=[733750cb51835c0d9ed553f37d69fccc]
class planner.planSource--><rect codeLine="1434" fill="#2A9FD6" height="109.9997" id="planner.planSource" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="110.4167" x="6515.625" y="3900"/><ellipse cx="6535.3646" cy="3922.4999" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M6537.5618,3918.6914 Q6537.9362,3918.6914 6538.0501,3918.9029 Q6538.1803,3919.1145 6538.1803,3919.5052 L6538.1803,3920.6119 Q6538.1803,3921.442 6537.5618,3921.442 Q6537.4642,3921.442 6537.3828,3921.4257 Q6537.3014,3921.4095 6537.2363,3921.3769 Q6537.1875,3921.3443 6537.1387,3921.2955 Q6537.0898,3921.2304 6537.0573,3921.1979 Q6537.041,3921.1653 6537.0085,3921.0839 Q6536.9922,3921.0026 6536.9759,3920.9863 Q6536.9759,3920.9537 6536.9596,3920.8723 Q6536.9434,3920.791 6536.9434,3920.7747 Q6536.862,3920.4003 6536.4551,3920.1725 Q6536.0482,3919.9283 6535.4622,3919.9283 Q6534.8763,3919.9283 6534.4531,3920.205 Q6534.0462,3920.4817 6534.0462,3920.8886 Q6534.0462,3921.3118 6534.4531,3921.5397 Q6534.8763,3921.7675 6535.4134,3921.8489 Q6535.9668,3921.914 6536.6341,3922.093 Q6537.3177,3922.2721 6537.7083,3922.5813 Q6538.4408,3923.1673 6538.4408,3924.1438 Q6538.4408,3925.1204 6537.6432,3925.7226 Q6536.862,3926.3248 6535.5762,3926.3248 Q6534.5508,3926.3248 6533.6393,3925.8365 Q6533.3789,3926.1295 6533.1348,3926.1295 Q6532.5,3926.1295 6532.5,3925.3157 L6532.5,3924.4856 Q6532.5,3924.0787 6532.6302,3923.8671 Q6532.7767,3923.6555 6533.1185,3923.6555 Q6533.2324,3923.6555 6533.3138,3923.6881 Q6533.4115,3923.7044 6533.4766,3923.7532 Q6533.5417,3923.802 6533.5905,3923.8509 Q6533.6393,3923.8997 6533.6556,3923.9811 Q6533.6882,3924.0462 6533.7044,3924.095 Q6533.7207,3924.1276 6533.737,3924.1927 Q6533.7533,3924.2415 6533.7533,3924.2578 Q6533.8509,3924.5996 6534.3555,3924.8437 Q6534.8763,3925.0716 6535.4948,3925.0716 Q6536.1947,3925.0716 6536.6667,3924.7949 Q6537.1387,3924.5182 6537.1387,3924.1276 Q6537.1387,3923.7532 6536.7643,3923.5253 Q6536.4063,3923.2975 6535.918,3923.2324 Q6535.446,3923.151 6534.7949,3923.0045 Q6534.1602,3922.8417 6533.7695,3922.6302 Q6533.2975,3922.3535 6533.0208,3921.8977 Q6532.7441,3921.4257 6532.7441,3920.8886 Q6532.7441,3919.9446 6533.5091,3919.3261 Q6534.2904,3918.6914 6535.4622,3918.6914 Q6536.4225,3918.6914 6537.0736,3919.0983 Q6537.1875,3918.8541 6537.2852,3918.7727 Q6537.3828,3918.6914 6537.5618,3918.6914 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="6555.2604" y="3932.2916">planSource</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="6516.6667" x2="6625" y1="3944.9999" y2="3944.9999"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="6523.9583" y="3953.3332"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="73.9583" x="6540.625" y="3965.8331">info sourceInfo</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="6523.9583" y="3977.4998"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="71.875" x="6540.625" y="3989.9997">plan planNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="6516.6667" x2="6625" y1="4001.6664" y2="4001.6664"/><!--MD5=[e399ea420c708b5c5b185fe16aaea18b]
class planner.Query--><rect codeLine="1439" fill="#2A9FD6" height="61.6666" id="planner.Query" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="72.9167" x="5200" y="3924.4792"/><ellipse cx="5214.5833" cy="3946.9791" fill="#FF7700" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M5215.8691,3949.8925 Q5216.6829,3949.8925 5216.6829,3950.5273 Q5216.6829,3951.1458 5215.8691,3951.1458 L5212.972,3951.1458 Q5212.1582,3951.1458 5212.1582,3950.5273 Q5212.1582,3950.1529 5212.3698,3950.0227 Q5212.5814,3949.8925 5212.972,3949.8925 L5213.7858,3949.8925 L5213.7858,3945.1074 L5212.4512,3945.1074 L5212.4512,3946.263 Q5212.4512,3947.093 5211.8164,3947.093 Q5211.1979,3947.093 5211.1979,3946.263 L5211.1979,3943.8541 L5217.6595,3943.8541 L5217.6595,3946.263 Q5217.6595,3946.6699 5217.513,3946.8815 Q5217.3828,3947.093 5217.0247,3947.093 Q5216.4063,3947.093 5216.4063,3946.263 L5216.4063,3945.1074 L5215.0391,3945.1074 L5215.0391,3949.8925 L5215.8691,3949.8925 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="31.25" x="5233.3333" y="3956.7707">Query</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="5201.0417" x2="5271.875" y1="3969.4791" y2="3969.4791"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="5201.0417" x2="5271.875" y1="3977.8124" y2="3977.8124"/><!--MD5=[38e1b11a7af5c08f64a18c4d6531a8ac]
class planner.renderInfo--><rect codeLine="1441" fill="#2A9FD6" height="158.3328" id="planner.renderInfo" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="373.9583" x="5601.5625" y="5059.8958"/><ellipse cx="5753.125" cy="5082.3958" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M5755.3223,5078.5872 Q5755.6966,5078.5872 5755.8105,5078.7988 Q5755.9408,5079.0104 5755.9408,5079.401 L5755.9408,5080.5078 Q5755.9408,5081.3378 5755.3223,5081.3378 Q5755.2246,5081.3378 5755.1432,5081.3216 Q5755.0618,5081.3053 5754.9967,5081.2727 Q5754.9479,5081.2402 5754.8991,5081.1914 Q5754.8503,5081.1263 5754.8177,5081.0937 Q5754.8014,5081.0611 5754.7689,5080.9798 Q5754.7526,5080.8984 5754.7363,5080.8821 Q5754.7363,5080.8496 5754.7201,5080.7682 Q5754.7038,5080.6868 5754.7038,5080.6705 Q5754.6224,5080.2962 5754.2155,5080.0683 Q5753.8086,5079.8242 5753.2227,5079.8242 Q5752.6367,5079.8242 5752.2135,5080.1009 Q5751.8066,5080.3776 5751.8066,5080.7845 Q5751.8066,5081.2076 5752.2135,5081.4355 Q5752.6367,5081.6634 5753.1738,5081.7447 Q5753.7272,5081.8098 5754.3945,5081.9889 Q5755.0781,5082.1679 5755.4688,5082.4772 Q5756.2012,5083.0631 5756.2012,5084.0397 Q5756.2012,5085.0162 5755.4036,5085.6184 Q5754.6224,5086.2207 5753.3366,5086.2207 Q5752.3112,5086.2207 5751.3997,5085.7324 Q5751.1393,5086.0253 5750.8952,5086.0253 Q5750.2604,5086.0253 5750.2604,5085.2115 L5750.2604,5084.3815 Q5750.2604,5083.9746 5750.3906,5083.763 Q5750.5371,5083.5514 5750.8789,5083.5514 Q5750.9928,5083.5514 5751.0742,5083.5839 Q5751.1719,5083.6002 5751.237,5083.649 Q5751.3021,5083.6979 5751.3509,5083.7467 Q5751.3997,5083.7955 5751.416,5083.8769 Q5751.4486,5083.942 5751.4648,5083.9908 Q5751.4811,5084.0234 5751.4974,5084.0885 Q5751.5137,5084.1373 5751.5137,5084.1536 Q5751.6113,5084.4954 5752.1159,5084.7395 Q5752.6367,5084.9674 5753.2552,5084.9674 Q5753.9551,5084.9674 5754.4271,5084.6907 Q5754.8991,5084.414 5754.8991,5084.0234 Q5754.8991,5083.649 5754.5247,5083.4212 Q5754.1667,5083.1933 5753.6784,5083.1282 Q5753.2064,5083.0468 5752.5553,5082.9003 Q5751.9206,5082.7376 5751.5299,5082.526 Q5751.0579,5082.2493 5750.7813,5081.7936 Q5750.5046,5081.3216 5750.5046,5080.7845 Q5750.5046,5079.8404 5751.2695,5079.222 Q5752.0508,5078.5872 5753.2227,5078.5872 Q5754.1829,5078.5872 5754.834,5078.9941 Q5754.9479,5078.7499 5755.0456,5078.6686 Q5755.1432,5078.5872 5755.3223,5078.5872 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="5778.125" y="5092.1874">renderInfo</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="5602.6042" x2="5974.4792" y1="5104.8957" y2="5104.8957"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5609.8958" y="5113.2291"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="118.75" x="5626.5625" y="5125.729">sourceFieldName string</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5609.8958" y="5137.3956"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="137.5" x="5626.5625" y="5149.8955">destinationFieldName string</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5609.8958" y="5161.5622"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="101.0417" x="5626.5625" y="5174.0621">children []renderInfo</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="5602.6042" x2="5974.4792" y1="5185.7288" y2="5185.7288"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5609.8958" y="5194.0621"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="5626.5625" y="5206.562">render(src</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="5682.8125" y="5206.562">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="5704.6875" y="5206.562">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="5738.0208" y="5206.562">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="67.7083" x="5781.7708" y="5206.562">{}, destination</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="5852.6042" y="5206.562">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="5874.4792" y="5206.562">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="5907.8125" y="5206.562">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="12.5" x="5951.5625" y="5206.562">{})</text><!--MD5=[8b2c171f8d67c59709f2144ec434da03]
class planner.renderNode--><rect codeLine="1449" fill="#2A9FD6" height="303.3322" id="planner.renderNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="189.5833" x="5309.375" y="3803.6458"/><ellipse cx="5364.5833" cy="3826.1458" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M5366.7806,3822.3372 Q5367.1549,3822.3372 5367.2689,3822.5488 Q5367.3991,3822.7604 5367.3991,3823.151 L5367.3991,3824.2578 Q5367.3991,3825.0878 5366.7806,3825.0878 Q5366.6829,3825.0878 5366.6016,3825.0716 Q5366.5202,3825.0553 5366.4551,3825.0227 Q5366.4063,3824.9902 5366.3574,3824.9414 Q5366.3086,3824.8763 5366.276,3824.8437 Q5366.2598,3824.8111 5366.2272,3824.7298 Q5366.2109,3824.6484 5366.1947,3824.6321 Q5366.1947,3824.5996 5366.1784,3824.5182 Q5366.1621,3824.4368 5366.1621,3824.4205 Q5366.0807,3824.0462 5365.6738,3823.8183 Q5365.2669,3823.5742 5364.681,3823.5742 Q5364.0951,3823.5742 5363.6719,3823.8509 Q5363.265,3824.1276 5363.265,3824.5345 Q5363.265,3824.9576 5363.6719,3825.1855 Q5364.0951,3825.4134 5364.6322,3825.4947 Q5365.1855,3825.5598 5365.8529,3825.7389 Q5366.5365,3825.9179 5366.9271,3826.2272 Q5367.6595,3826.8131 5367.6595,3827.7897 Q5367.6595,3828.7662 5366.862,3829.3684 Q5366.0807,3829.9707 5364.7949,3829.9707 Q5363.7695,3829.9707 5362.8581,3829.4824 Q5362.5977,3829.7753 5362.3535,3829.7753 Q5361.7188,3829.7753 5361.7188,3828.9615 L5361.7188,3828.1315 Q5361.7188,3827.7246 5361.849,3827.513 Q5361.9954,3827.3014 5362.3372,3827.3014 Q5362.4512,3827.3014 5362.5326,3827.3339 Q5362.6302,3827.3502 5362.6953,3827.399 Q5362.7604,3827.4479 5362.8092,3827.4967 Q5362.8581,3827.5455 5362.8743,3827.6269 Q5362.9069,3827.692 5362.9232,3827.7408 Q5362.9395,3827.7734 5362.9557,3827.8385 Q5362.972,3827.8873 5362.972,3827.9036 Q5363.0697,3828.2454 5363.5742,3828.4895 Q5364.0951,3828.7174 5364.7135,3828.7174 Q5365.4134,3828.7174 5365.8854,3828.4407 Q5366.3574,3828.164 5366.3574,3827.7734 Q5366.3574,3827.399 5365.9831,3827.1712 Q5365.625,3826.9433 5365.1367,3826.8782 Q5364.6647,3826.7968 5364.0137,3826.6503 Q5363.3789,3826.4876 5362.9883,3826.276 Q5362.5163,3825.9993 5362.2396,3825.5436 Q5361.9629,3825.0716 5361.9629,3824.5345 Q5361.9629,3823.5904 5362.7279,3822.972 Q5363.5091,3822.3372 5364.681,3822.3372 Q5365.6413,3822.3372 5366.2923,3822.7441 Q5366.4063,3822.4999 5366.5039,3822.4186 Q5366.6016,3822.3372 5366.7806,3822.3372 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="5389.5833" y="3835.9374">renderNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="5310.4167" x2="5497.9167" y1="3848.6457" y2="3848.6457"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5317.7083" y="3856.9791"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="5334.375" y="3869.479">p *Planner</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5317.7083" y="3881.1456"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="71.875" x="5334.375" y="3893.6455">plan planNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="5317.7083" y="3905.3122"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="153.125" x="5334.375" y="3917.8121">renderInfo topLevelRenderInfo</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="5310.4167" x2="5497.9167" y1="3929.4788" y2="3929.4788"/><ellipse cx="5320.8333" cy="3940.9371" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="5334.375" y="3950.312">Init() error</text><ellipse cx="5320.8333" cy="3965.1037" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="5334.375" y="3974.4786">Start() error</text><ellipse cx="5320.8333" cy="3989.2702" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="5334.375" y="3998.6451">Next() (bool, error)</text><ellipse cx="5320.8333" cy="4013.4368" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="5334.375" y="4022.8117">Spans(spans core.Spans)</text><ellipse cx="5320.8333" cy="4037.6033" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="5334.375" y="4046.9783">Close() error</text><ellipse cx="5320.8333" cy="4061.7699" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="5334.375" y="4071.1448">Source() planNode</text><ellipse cx="5320.8333" cy="4085.9365" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="5334.375" y="4095.3114">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="5379.1667" y="4095.3114">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="5401.0417" y="4095.3114">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="5434.375" y="4095.3114">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="5478.125" y="4095.3114">{}</text><!--MD5=[58e8f60324c8a86c6934b927097c7888]
class planner.scanNode--><rect codeLine="1463" fill="#2A9FD6" height="593.331" id="planner.scanNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="294.7917" x="843.2292" y="4842.1875"/><ellipse cx="955.7292" cy="4864.6874" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M957.9264,4860.8789 Q958.3008,4860.8789 958.4147,4861.0904 Q958.5449,4861.302 958.5449,4861.6927 L958.5449,4862.7994 Q958.5449,4863.6295 957.9264,4863.6295 Q957.8288,4863.6295 957.7474,4863.6132 Q957.666,4863.597 957.6009,4863.5644 Q957.5521,4863.5318 957.5033,4863.483 Q957.4544,4863.4179 957.4219,4863.3854 Q957.4056,4863.3528 957.373,4863.2714 Q957.3568,4863.1901 957.3405,4863.1738 Q957.3405,4863.1412 957.3242,4863.0598 Q957.3079,4862.9785 957.3079,4862.9622 Q957.2266,4862.5878 956.8197,4862.36 Q956.4128,4862.1158 955.8268,4862.1158 Q955.2409,4862.1158 954.8177,4862.3925 Q954.4108,4862.6692 954.4108,4863.0761 Q954.4108,4863.4993 954.8177,4863.7272 Q955.2409,4863.955 955.778,4864.0364 Q956.3314,4864.1015 956.9987,4864.2805 Q957.6823,4864.4596 958.0729,4864.7688 Q958.8053,4865.3548 958.8053,4866.3313 Q958.8053,4867.3079 958.0078,4867.9101 Q957.2266,4868.5123 955.9408,4868.5123 Q954.9154,4868.5123 954.0039,4868.024 Q953.7435,4868.317 953.4993,4868.317 Q952.8646,4868.317 952.8646,4867.5032 L952.8646,4866.6731 Q952.8646,4866.2662 952.9948,4866.0546 Q953.1413,4865.843 953.4831,4865.843 Q953.597,4865.843 953.6784,4865.8756 Q953.776,4865.8919 953.8411,4865.9407 Q953.9063,4865.9895 953.9551,4866.0384 Q954.0039,4866.0872 954.0202,4866.1686 Q954.0527,4866.2337 954.069,4866.2825 Q954.0853,4866.3151 954.1016,4866.3802 Q954.1178,4866.429 954.1178,4866.4453 Q954.2155,4866.7871 954.7201,4867.0312 Q955.2409,4867.2591 955.8594,4867.2591 Q956.5592,4867.2591 957.0313,4866.9824 Q957.5033,4866.7057 957.5033,4866.3151 Q957.5033,4865.9407 957.1289,4865.7128 Q956.7708,4865.485 956.2826,4865.4199 Q955.8105,4865.3385 955.1595,4865.192 Q954.5247,4865.0292 954.1341,4864.8177 Q953.6621,4864.541 953.3854,4864.0852 Q953.1087,4863.6132 953.1087,4863.0761 Q953.1087,4862.1321 953.8737,4861.5136 Q954.6549,4860.8789 955.8268,4860.8789 Q956.7871,4860.8789 957.4382,4861.2858 Q957.5521,4861.0416 957.6497,4860.9602 Q957.7474,4860.8789 957.9264,4860.8789 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="980.7292" y="4874.4791">scanNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="844.2708" x2="1136.9792" y1="4887.1874" y2="4887.1874"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="851.5625" y="4895.5207"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="868.2292" y="4908.0206">p *Planner</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="851.5625" y="4919.6873"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="159.375" x="868.2292" y="4932.1872">desc base.CollectionDescription</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="851.5625" y="4943.8539"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="868.2292" y="4956.3538">index *base.IndexDescription</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="851.5625" y="4968.0204"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="145.8333" x="868.2292" y="4980.5203">fields []*base.FieldDescription</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="851.5625" y="4992.187"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="18.75" x="868.2292" y="5004.6869">doc</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="890.1042" y="5004.6869">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="911.9792" y="5004.6869">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="945.3125" y="5004.6869">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="989.0625" y="5004.6869">{}</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="851.5625" y="5016.3536"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="67.7083" x="868.2292" y="5028.8535">docKey []byte</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="851.5625" y="5040.5201"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="89.5833" x="868.2292" y="5053.02">spans core.Spans</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="851.5625" y="5064.6867"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="868.2292" y="5077.1866">reverse bool</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="851.5625" y="5088.8532"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="88.5417" x="868.2292" y="5101.3532">filter *parser.Filter</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="851.5625" y="5113.0198"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="868.2292" y="5125.5197">scanInitialized bool</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="851.5625" y="5137.1864"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="168.75" x="868.2292" y="5149.6863">fetcher fetcher.DocumentFetcher</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="844.2708" x2="1136.9792" y1="5161.3529" y2="5161.3529"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="851.5625" y="5169.6863"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="258.3333" x="868.2292" y="5182.1862">initCollection(desc base.CollectionDescription) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="851.5625" y="5193.8528"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="76.0417" x="868.2292" y="5206.3527">initScan() error</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="871.3542" y="5230.5193"/><ellipse cx="854.6875" cy="5245.311" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="868.2292" y="5254.6859">Init() error</text><ellipse cx="854.6875" cy="5269.4775" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="868.2292" y="5278.8524">Start() error</text><ellipse cx="854.6875" cy="5293.6441" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="868.2292" y="5303.019">Next() (bool, error)</text><ellipse cx="854.6875" cy="5317.8107" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="868.2292" y="5327.1856">Spans(spans core.Spans)</text><ellipse cx="854.6875" cy="5341.9772" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="868.2292" y="5351.3521">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="913.0208" y="5351.3521">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="934.8958" y="5351.3521">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="968.2292" y="5351.3521">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="1011.9792" y="5351.3521">{}</text><ellipse cx="854.6875" cy="5366.1438" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="868.2292" y="5375.5187">Close() error</text><ellipse cx="854.6875" cy="5390.3103" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="868.2292" y="5399.6853">Source() planNode</text><ellipse cx="854.6875" cy="5414.4769" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="868.2292" y="5423.8518">Merge() bool</text><!--MD5=[604b36b6d42f4f412039f90fb5adf1ab]
class planner.selectNode--><rect codeLine="1489" fill="#2A9FD6" height="520.8313" id="planner.selectNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="261.4583" x="886.9792" y="3694.7917"/><ellipse cx="980.2083" cy="3717.2916" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M982.4056,3713.483 Q982.7799,3713.483 982.8939,3713.6946 Q983.0241,3713.9062 983.0241,3714.2968 L983.0241,3715.4036 Q983.0241,3716.2337 982.4056,3716.2337 Q982.3079,3716.2337 982.2266,3716.2174 Q982.1452,3716.2011 982.0801,3716.1686 Q982.0313,3716.136 981.9824,3716.0872 Q981.9336,3716.0221 981.901,3715.9895 Q981.8848,3715.957 981.8522,3715.8756 Q981.8359,3715.7942 981.8197,3715.7779 Q981.8197,3715.7454 981.8034,3715.664 Q981.7871,3715.5826 981.7871,3715.5664 Q981.7057,3715.192 981.2988,3714.9641 Q980.8919,3714.72 980.306,3714.72 Q979.7201,3714.72 979.2969,3714.9967 Q978.89,3715.2734 978.89,3715.6803 Q978.89,3716.1035 979.2969,3716.3313 Q979.7201,3716.5592 980.2572,3716.6406 Q980.8105,3716.7057 981.4779,3716.8847 Q982.1615,3717.0638 982.5521,3717.373 Q983.2845,3717.9589 983.2845,3718.9355 Q983.2845,3719.9121 982.487,3720.5143 Q981.7057,3721.1165 980.4199,3721.1165 Q979.3945,3721.1165 978.4831,3720.6282 Q978.2227,3720.9212 977.9785,3720.9212 Q977.3438,3720.9212 977.3438,3720.1074 L977.3438,3719.2773 Q977.3438,3718.8704 977.474,3718.6588 Q977.6204,3718.4472 977.9622,3718.4472 Q978.0762,3718.4472 978.1576,3718.4798 Q978.2552,3718.496 978.3203,3718.5449 Q978.3854,3718.5937 978.4342,3718.6425 Q978.4831,3718.6914 978.4993,3718.7727 Q978.5319,3718.8378 978.5482,3718.8867 Q978.5645,3718.9192 978.5807,3718.9843 Q978.597,3719.0332 978.597,3719.0494 Q978.6947,3719.3912 979.1992,3719.6354 Q979.7201,3719.8632 980.3385,3719.8632 Q981.0384,3719.8632 981.5104,3719.5865 Q981.9824,3719.3098 981.9824,3718.9192 Q981.9824,3718.5449 981.6081,3718.317 Q981.25,3718.0891 980.7617,3718.024 Q980.2897,3717.9427 979.6387,3717.7962 Q979.0039,3717.6334 978.6133,3717.4218 Q978.1413,3717.1451 977.8646,3716.6894 Q977.5879,3716.2174 977.5879,3715.6803 Q977.5879,3714.7363 978.3529,3714.1178 Q979.1341,3713.483 980.306,3713.483 Q981.2663,3713.483 981.9173,3713.8899 Q982.0313,3713.6458 982.1289,3713.5644 Q982.2266,3713.483 982.4056,3713.483 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="56.25" x="1005.2083" y="3727.0832">selectNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="888.0208" x2="1147.3958" y1="3739.7916" y2="3739.7916"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="895.3125" y="3748.1249"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="911.9792" y="3760.6248">p *Planner</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="895.3125" y="3772.2915"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="85.4167" x="911.9792" y="3784.7914">source planNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="895.3125" y="3796.458"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="911.9792" y="3808.9579">origSource planNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="895.3125" y="3820.6246"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="109.375" x="911.9792" y="3833.1245">sourceInfo sourceInfo</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="895.3125" y="3844.7912"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="911.9792" y="3857.2911">renderInfo *renderInfo</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="895.3125" y="3868.9577"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="18.75" x="911.9792" y="3881.4576">doc</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="933.8542" y="3881.4576">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="955.7292" y="3881.4576">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="989.0625" y="3881.4576">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="1032.8125" y="3881.4576">{}</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="895.3125" y="3893.1243"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="88.5417" x="911.9792" y="3905.6242">filter *parser.Filter</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="895.3125" y="3917.2908"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="911.9792" y="3929.7908">groupSelect *parser.Select</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="888.0208" x2="1147.3958" y1="3941.4574" y2="3941.4574"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="895.3125" y="3949.7907"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="225" x="911.9792" y="3962.2907">addSubPlan(field string, plan planNode) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="895.3125" y="3973.9573"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="194.7917" x="911.9792" y="3986.4572">initSource(parsed *parser.Select) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="895.3125" y="3998.1239"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="911.9792" y="4010.6238">initFields(parsed *parser.Select) error</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="915.1042" y="4034.7904"/><ellipse cx="898.4375" cy="4049.582" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="911.9792" y="4058.9569">Init() error</text><ellipse cx="898.4375" cy="4073.7486" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="911.9792" y="4083.1235">Start() error</text><ellipse cx="898.4375" cy="4097.9151" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="911.9792" y="4107.29">Next() (bool, error)</text><ellipse cx="898.4375" cy="4122.0817" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="911.9792" y="4131.4566">Spans(spans core.Spans)</text><ellipse cx="898.4375" cy="4146.2483" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="911.9792" y="4155.6232">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="956.7708" y="4155.6232">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="978.6458" y="4155.6232">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="1011.9792" y="4155.6232">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="1055.7292" y="4155.6232">{}</text><ellipse cx="898.4375" cy="4170.4148" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="911.9792" y="4179.7897">Close() error</text><ellipse cx="898.4375" cy="4194.5814" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="911.9792" y="4203.9563">Source() planNode</text><!--MD5=[caf1f495c59e0b498d70f570b16b440f]
class planner.selectTopNode--><rect codeLine="1512" fill="#2A9FD6" height="375.8319" id="planner.selectTopNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="188.5417" x="1184.8958" y="3767.1875"/><ellipse cx="1231.7708" cy="3789.6874" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M1233.9681,3785.8789 Q1234.3424,3785.8789 1234.4564,3786.0904 Q1234.5866,3786.302 1234.5866,3786.6927 L1234.5866,3787.7994 Q1234.5866,3788.6295 1233.9681,3788.6295 Q1233.8704,3788.6295 1233.7891,3788.6132 Q1233.7077,3788.597 1233.6426,3788.5644 Q1233.5938,3788.5318 1233.5449,3788.483 Q1233.4961,3788.4179 1233.4635,3788.3854 Q1233.4473,3788.3528 1233.4147,3788.2714 Q1233.3984,3788.1901 1233.3822,3788.1738 Q1233.3822,3788.1412 1233.3659,3788.0598 Q1233.3496,3787.9785 1233.3496,3787.9622 Q1233.2682,3787.5878 1232.8613,3787.36 Q1232.4544,3787.1158 1231.8685,3787.1158 Q1231.2826,3787.1158 1230.8594,3787.3925 Q1230.4525,3787.6692 1230.4525,3788.0761 Q1230.4525,3788.4993 1230.8594,3788.7272 Q1231.2826,3788.955 1231.8197,3789.0364 Q1232.373,3789.1015 1233.0404,3789.2805 Q1233.724,3789.4596 1234.1146,3789.7688 Q1234.847,3790.3548 1234.847,3791.3313 Q1234.847,3792.3079 1234.0495,3792.9101 Q1233.2682,3793.5123 1231.9824,3793.5123 Q1230.957,3793.5123 1230.0456,3793.024 Q1229.7852,3793.317 1229.541,3793.317 Q1228.9063,3793.317 1228.9063,3792.5032 L1228.9063,3791.6731 Q1228.9063,3791.2662 1229.0365,3791.0546 Q1229.1829,3790.843 1229.5247,3790.843 Q1229.6387,3790.843 1229.7201,3790.8756 Q1229.8177,3790.8919 1229.8828,3790.9407 Q1229.9479,3790.9895 1229.9967,3791.0384 Q1230.0456,3791.0872 1230.0618,3791.1686 Q1230.0944,3791.2337 1230.1107,3791.2825 Q1230.127,3791.3151 1230.1432,3791.3802 Q1230.1595,3791.429 1230.1595,3791.4453 Q1230.2572,3791.7871 1230.7617,3792.0312 Q1231.2826,3792.2591 1231.901,3792.2591 Q1232.6009,3792.2591 1233.0729,3791.9824 Q1233.5449,3791.7057 1233.5449,3791.3151 Q1233.5449,3790.9407 1233.1706,3790.7128 Q1232.8125,3790.485 1232.3242,3790.4199 Q1231.8522,3790.3385 1231.2012,3790.192 Q1230.5664,3790.0292 1230.1758,3789.8177 Q1229.7038,3789.541 1229.4271,3789.0852 Q1229.1504,3788.6132 1229.1504,3788.0761 Q1229.1504,3787.1321 1229.9154,3786.5136 Q1230.6966,3785.8789 1231.8685,3785.8789 Q1232.8288,3785.8789 1233.4798,3786.2858 Q1233.5938,3786.0416 1233.6914,3785.9602 Q1233.7891,3785.8789 1233.9681,3785.8789 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="76.0417" x="1256.7708" y="3799.4791">selectTopNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="1185.9375" x2="1372.3958" y1="3812.1874" y2="3812.1874"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1193.2292" y="3820.5207"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="85.4167" x="1209.8958" y="3833.0206">source planNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1193.2292" y="3844.6873"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="1209.8958" y="3857.1872">group *groupNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1193.2292" y="3868.8539"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="71.875" x="1209.8958" y="3881.3538">sort *sortNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1193.2292" y="3893.0204"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="71.875" x="1209.8958" y="3905.5203">limit *limitNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1193.2292" y="3917.187"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="101.0417" x="1209.8958" y="3929.6869">render *renderNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1193.2292" y="3941.3536"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="71.875" x="1209.8958" y="3953.8535">plan planNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="1185.9375" x2="1372.3958" y1="3965.5201" y2="3965.5201"/><ellipse cx="1196.3542" cy="3976.9784" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="1209.8958" y="3986.3534">Init() error</text><ellipse cx="1196.3542" cy="4001.145" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="1209.8958" y="4010.5199">Start() error</text><ellipse cx="1196.3542" cy="4025.3116" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="1209.8958" y="4034.6865">Next() (bool, error)</text><ellipse cx="1196.3542" cy="4049.4781" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="1209.8958" y="4058.8531">Spans(spans core.Spans)</text><ellipse cx="1196.3542" cy="4073.6447" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="1209.8958" y="4083.0196">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="1254.6875" y="4083.0196">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="1276.5625" y="4083.0196">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="1309.8958" y="4083.0196">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="1353.6458" y="4083.0196">{}</text><ellipse cx="1196.3542" cy="4097.8113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="1209.8958" y="4107.1862">Source() planNode</text><ellipse cx="1196.3542" cy="4121.9778" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="1209.8958" y="4131.3527">Close() error</text><!--MD5=[7fd8069a7d2fe52f56c7261d3a2a3bbe]
class planner.sortNode--><rect codeLine="1529" fill="#2A9FD6" height="375.8319" id="planner.sortNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="190.625" x="1409.8958" y="3767.1875"/><ellipse cx="1472.9167" cy="3789.6874" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M1475.1139,3785.8789 Q1475.4883,3785.8789 1475.6022,3786.0904 Q1475.7324,3786.302 1475.7324,3786.6927 L1475.7324,3787.7994 Q1475.7324,3788.6295 1475.1139,3788.6295 Q1475.0163,3788.6295 1474.9349,3788.6132 Q1474.8535,3788.597 1474.7884,3788.5644 Q1474.7396,3788.5318 1474.6908,3788.483 Q1474.6419,3788.4179 1474.6094,3788.3854 Q1474.5931,3788.3528 1474.5605,3788.2714 Q1474.5443,3788.1901 1474.528,3788.1738 Q1474.528,3788.1412 1474.5117,3788.0598 Q1474.4954,3787.9785 1474.4954,3787.9622 Q1474.4141,3787.5878 1474.0072,3787.36 Q1473.6003,3787.1158 1473.0143,3787.1158 Q1472.4284,3787.1158 1472.0052,3787.3925 Q1471.5983,3787.6692 1471.5983,3788.0761 Q1471.5983,3788.4993 1472.0052,3788.7272 Q1472.4284,3788.955 1472.9655,3789.0364 Q1473.5189,3789.1015 1474.1862,3789.2805 Q1474.8698,3789.4596 1475.2604,3789.7688 Q1475.9928,3790.3548 1475.9928,3791.3313 Q1475.9928,3792.3079 1475.1953,3792.9101 Q1474.4141,3793.5123 1473.1283,3793.5123 Q1472.1029,3793.5123 1471.1914,3793.024 Q1470.931,3793.317 1470.6868,3793.317 Q1470.0521,3793.317 1470.0521,3792.5032 L1470.0521,3791.6731 Q1470.0521,3791.2662 1470.1823,3791.0546 Q1470.3288,3790.843 1470.6706,3790.843 Q1470.7845,3790.843 1470.8659,3790.8756 Q1470.9635,3790.8919 1471.0286,3790.9407 Q1471.0938,3790.9895 1471.1426,3791.0384 Q1471.1914,3791.0872 1471.2077,3791.1686 Q1471.2402,3791.2337 1471.2565,3791.2825 Q1471.2728,3791.3151 1471.2891,3791.3802 Q1471.3053,3791.429 1471.3053,3791.4453 Q1471.403,3791.7871 1471.9076,3792.0312 Q1472.4284,3792.2591 1473.0469,3792.2591 Q1473.7467,3792.2591 1474.2188,3791.9824 Q1474.6908,3791.7057 1474.6908,3791.3151 Q1474.6908,3790.9407 1474.3164,3790.7128 Q1473.9583,3790.485 1473.4701,3790.4199 Q1472.998,3790.3385 1472.347,3790.192 Q1471.7122,3790.0292 1471.3216,3789.8177 Q1470.8496,3789.541 1470.5729,3789.0852 Q1470.2962,3788.6132 1470.2962,3788.0761 Q1470.2962,3787.1321 1471.0612,3786.5136 Q1471.8424,3785.8789 1473.0143,3785.8789 Q1473.9746,3785.8789 1474.6257,3786.2858 Q1474.7396,3786.0416 1474.8372,3785.9602 Q1474.9349,3785.8789 1475.1139,3785.8789 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="45.8333" x="1497.9167" y="3799.4791">sortNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="1410.9375" x2="1599.4792" y1="3812.1874" y2="3812.1874"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1418.2292" y="3820.5207"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="1434.8958" y="3833.0206">p *Planner</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1418.2292" y="3844.6873"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="71.875" x="1434.8958" y="3857.1872">plan planNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1418.2292" y="3868.8539"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="154.1667" x="1434.8958" y="3881.3538">ordering []parser.SortCondition</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1418.2292" y="3893.0204"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="108.3333" x="1434.8958" y="3905.5203">valueIter valueIterator</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1418.2292" y="3917.187"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="138.5417" x="1434.8958" y="3929.6869">sortStrategy sortingStrategy</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1418.2292" y="3941.3536"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="69.7917" x="1434.8958" y="3953.8535">needSort bool</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="1410.9375" x2="1599.4792" y1="3965.5201" y2="3965.5201"/><ellipse cx="1421.3542" cy="3976.9784" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="1434.8958" y="3986.3534">Init() error</text><ellipse cx="1421.3542" cy="4001.145" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="1434.8958" y="4010.5199">Start() error</text><ellipse cx="1421.3542" cy="4025.3116" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="1434.8958" y="4034.6865">Spans(spans core.Spans)</text><ellipse cx="1421.3542" cy="4049.4781" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="1434.8958" y="4058.8531">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="1479.6875" y="4058.8531">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="1501.5625" y="4058.8531">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="1534.8958" y="4058.8531">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="1578.6458" y="4058.8531">{}</text><ellipse cx="1421.3542" cy="4073.6447" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="1434.8958" y="4083.0196">Next() (bool, error)</text><ellipse cx="1421.3542" cy="4097.8113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="1434.8958" y="4107.1862">Close() error</text><ellipse cx="1421.3542" cy="4121.9778" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="1434.8958" y="4131.3527">Source() planNode</text><!--MD5=[d172d5ad425b42d1bbbca86212c791a7]
class planner.sortingStrategy--><rect codeLine="1546" fill="#2A9FD6" height="99.583" id="planner.sortingStrategy" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="203.125" x="43.2292" y="3905.2083"/><ellipse cx="97.3958" cy="3922.4999" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M99.3815,3924.8925 Q99.7884,3924.8925 100,3925.0227 Q100.2116,3925.1529 100.2116,3925.5273 Q100.2116,3926.1458 99.3815,3926.1458 L95.6055,3926.1458 Q94.7917,3926.1458 94.7917,3925.5273 Q94.7917,3925.1529 95.0033,3925.0227 Q95.2148,3924.8925 95.6055,3924.8925 L96.875,3924.8925 L96.875,3920.1074 L95.6055,3920.1074 Q94.7917,3920.1074 94.7917,3919.4889 Q94.7917,3919.1145 95.0033,3918.9843 Q95.2148,3918.8541 95.6055,3918.8541 L99.3815,3918.8541 Q99.7884,3918.8541 100,3918.9843 Q100.2116,3919.1145 100.2116,3919.4889 Q100.2116,3920.1074 99.3815,3920.1074 L98.1283,3920.1074 L98.1283,3924.8925 L99.3815,3924.8925 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="76.0417" x="122.3958" y="3927.0832">sortingStrategy</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="44.2708" x2="245.3125" y1="3939.7916" y2="3939.7916"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="44.2708" x2="245.3125" y1="3948.1249" y2="3948.1249"/><ellipse cx="54.6875" cy="3959.5832" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="23.9583" x="68.2292" y="3968.9581">Add(</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="95.3125" y="3968.9581">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="117.1875" y="3968.9581">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="150.5208" y="3968.9581">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="40.625" x="194.2708" y="3968.9581">{}) error</text><ellipse cx="54.6875" cy="3983.7498" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="37.5" x="68.2292" y="3993.1247">Finish()</text><!--MD5=[c395ef13b2de41750f42f4028588d821]
class planner.sourceInfo--><rect codeLine="1551" fill="#2A9FD6" height="85.8331" id="planner.sourceInfo" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="275" x="6012.5" y="5096.3542"/><ellipse cx="6114.0625" cy="5118.8541" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M6116.2598,5115.0455 Q6116.6341,5115.0455 6116.748,5115.2571 Q6116.8783,5115.4687 6116.8783,5115.8593 L6116.8783,5116.9661 Q6116.8783,5117.7962 6116.2598,5117.7962 Q6116.1621,5117.7962 6116.0807,5117.7799 Q6115.9993,5117.7636 6115.9342,5117.7311 Q6115.8854,5117.6985 6115.8366,5117.6497 Q6115.7878,5117.5846 6115.7552,5117.552 Q6115.7389,5117.5195 6115.7064,5117.4381 Q6115.6901,5117.3567 6115.6738,5117.3404 Q6115.6738,5117.3079 6115.6576,5117.2265 Q6115.6413,5117.1451 6115.6413,5117.1289 Q6115.5599,5116.7545 6115.153,5116.5266 Q6114.7461,5116.2825 6114.1602,5116.2825 Q6113.5742,5116.2825 6113.151,5116.5592 Q6112.7441,5116.8359 6112.7441,5117.2428 Q6112.7441,5117.666 6113.151,5117.8938 Q6113.5742,5118.1217 6114.1113,5118.2031 Q6114.6647,5118.2682 6115.332,5118.4472 Q6116.0156,5118.6263 6116.4063,5118.9355 Q6117.1387,5119.5214 6117.1387,5120.498 Q6117.1387,5121.4746 6116.3411,5122.0768 Q6115.5599,5122.679 6114.2741,5122.679 Q6113.2487,5122.679 6112.3372,5122.1907 Q6112.0768,5122.4837 6111.8327,5122.4837 Q6111.1979,5122.4837 6111.1979,5121.6699 L6111.1979,5120.8398 Q6111.1979,5120.4329 6111.3281,5120.2213 Q6111.4746,5120.0097 6111.8164,5120.0097 Q6111.9303,5120.0097 6112.0117,5120.0423 Q6112.1094,5120.0585 6112.1745,5120.1074 Q6112.2396,5120.1562 6112.2884,5120.205 Q6112.3372,5120.2539 6112.3535,5120.3352 Q6112.3861,5120.4003 6112.4023,5120.4492 Q6112.4186,5120.4817 6112.4349,5120.5468 Q6112.4512,5120.5957 6112.4512,5120.6119 Q6112.5488,5120.9537 6113.0534,5121.1979 Q6113.5742,5121.4257 6114.1927,5121.4257 Q6114.8926,5121.4257 6115.3646,5121.149 Q6115.8366,5120.8723 6115.8366,5120.4817 Q6115.8366,5120.1074 6115.4622,5119.8795 Q6115.1042,5119.6516 6114.6159,5119.5865 Q6114.1439,5119.5052 6113.4928,5119.3587 Q6112.8581,5119.1959 6112.4674,5118.9843 Q6111.9954,5118.7076 6111.7188,5118.2519 Q6111.4421,5117.7799 6111.4421,5117.2428 Q6111.4421,5116.2988 6112.207,5115.6803 Q6112.9883,5115.0455 6114.1602,5115.0455 Q6115.1204,5115.0455 6115.7715,5115.4524 Q6115.8854,5115.2083 6115.9831,5115.1269 Q6116.0807,5115.0455 6116.2598,5115.0455 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="6139.0625" y="5128.6457">sourceInfo</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="6013.5417" x2="6286.4583" y1="5141.3541" y2="5141.3541"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="6020.8333" y="5149.6874"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="238.5417" x="6037.5" y="5162.1873">collectionDescription base.CollectionDescription</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="6013.5417" x2="6286.4583" y1="5173.854" y2="5173.854"/><!--MD5=[6870bbe62c62c3f7f9223e602474f622]
class planner.topLevelRenderInfo--><rect codeLine="1555" fill="#2A9FD6" height="85.8331" id="planner.topLevelRenderInfo" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="139.5833" x="6323.9583" y="5096.3542"/><ellipse cx="6338.5417" cy="5118.8541" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M6340.7389,5115.0455 Q6341.1133,5115.0455 6341.2272,5115.2571 Q6341.3574,5115.4687 6341.3574,5115.8593 L6341.3574,5116.9661 Q6341.3574,5117.7962 6340.7389,5117.7962 Q6340.6413,5117.7962 6340.5599,5117.7799 Q6340.4785,5117.7636 6340.4134,5117.7311 Q6340.3646,5117.6985 6340.3158,5117.6497 Q6340.2669,5117.5846 6340.2344,5117.552 Q6340.2181,5117.5195 6340.1855,5117.4381 Q6340.1693,5117.3567 6340.153,5117.3404 Q6340.153,5117.3079 6340.1367,5117.2265 Q6340.1204,5117.1451 6340.1204,5117.1289 Q6340.0391,5116.7545 6339.6322,5116.5266 Q6339.2253,5116.2825 6338.6393,5116.2825 Q6338.0534,5116.2825 6337.6302,5116.5592 Q6337.2233,5116.8359 6337.2233,5117.2428 Q6337.2233,5117.666 6337.6302,5117.8938 Q6338.0534,5118.1217 6338.5905,5118.2031 Q6339.1439,5118.2682 6339.8112,5118.4472 Q6340.4948,5118.6263 6340.8854,5118.9355 Q6341.6178,5119.5214 6341.6178,5120.498 Q6341.6178,5121.4746 6340.8203,5122.0768 Q6340.0391,5122.679 6338.7533,5122.679 Q6337.7279,5122.679 6336.8164,5122.1907 Q6336.556,5122.4837 6336.3118,5122.4837 Q6335.6771,5122.4837 6335.6771,5121.6699 L6335.6771,5120.8398 Q6335.6771,5120.4329 6335.8073,5120.2213 Q6335.9538,5120.0097 6336.2956,5120.0097 Q6336.4095,5120.0097 6336.4909,5120.0423 Q6336.5885,5120.0585 6336.6536,5120.1074 Q6336.7188,5120.1562 6336.7676,5120.205 Q6336.8164,5120.2539 6336.8327,5120.3352 Q6336.8652,5120.4003 6336.8815,5120.4492 Q6336.8978,5120.4817 6336.9141,5120.5468 Q6336.9303,5120.5957 6336.9303,5120.6119 Q6337.028,5120.9537 6337.5326,5121.1979 Q6338.0534,5121.4257 6338.6719,5121.4257 Q6339.3717,5121.4257 6339.8438,5121.149 Q6340.3158,5120.8723 6340.3158,5120.4817 Q6340.3158,5120.1074 6339.9414,5119.8795 Q6339.5833,5119.6516 6339.0951,5119.5865 Q6338.623,5119.5052 6337.972,5119.3587 Q6337.3372,5119.1959 6336.9466,5118.9843 Q6336.4746,5118.7076 6336.1979,5118.2519 Q6335.9212,5117.7799 6335.9212,5117.2428 Q6335.9212,5116.2988 6336.6862,5115.6803 Q6337.4674,5115.0455 6338.6393,5115.0455 Q6339.5996,5115.0455 6340.2507,5115.4524 Q6340.3646,5115.2083 6340.4622,5115.1269 Q6340.5599,5115.0455 6340.7389,5115.0455 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="97.9167" x="6357.2917" y="5128.6457">topLevelRenderInfo</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="6325" x2="6462.5" y1="5141.3541" y2="5141.3541"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="6332.2917" y="5149.6874"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="101.0417" x="6348.9583" y="5162.1873">children []renderInfo</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="6325" x2="6462.5" y1="5173.854" y2="5173.854"/><!--MD5=[81e67249d35d31d8998af8727e64d07d]
class planner.typeIndexJoin--><rect codeLine="1559" fill="#2A9FD6" height="303.3322" id="planner.typeIndexJoin" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="188.5417" x="3655.7292" y="4987.5"/><ellipse cx="3706.25" cy="5009.9999" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M3708.4473,5006.1914 Q3708.8216,5006.1914 3708.9355,5006.4029 Q3709.0658,5006.6145 3709.0658,5007.0052 L3709.0658,5008.1119 Q3709.0658,5008.942 3708.4473,5008.942 Q3708.3496,5008.942 3708.2682,5008.9257 Q3708.1868,5008.9095 3708.1217,5008.8769 Q3708.0729,5008.8443 3708.0241,5008.7955 Q3707.9753,5008.7304 3707.9427,5008.6979 Q3707.9264,5008.6653 3707.8939,5008.5839 Q3707.8776,5008.5026 3707.8613,5008.4863 Q3707.8613,5008.4537 3707.8451,5008.3723 Q3707.8288,5008.291 3707.8288,5008.2747 Q3707.7474,5007.9003 3707.3405,5007.6725 Q3706.9336,5007.4283 3706.3477,5007.4283 Q3705.7617,5007.4283 3705.3385,5007.705 Q3704.9316,5007.9817 3704.9316,5008.3886 Q3704.9316,5008.8118 3705.3385,5009.0397 Q3705.7617,5009.2675 3706.2988,5009.3489 Q3706.8522,5009.414 3707.5195,5009.593 Q3708.2031,5009.7721 3708.5938,5010.0813 Q3709.3262,5010.6673 3709.3262,5011.6438 Q3709.3262,5012.6204 3708.5286,5013.2226 Q3707.7474,5013.8248 3706.4616,5013.8248 Q3705.4362,5013.8248 3704.5247,5013.3365 Q3704.2643,5013.6295 3704.0202,5013.6295 Q3703.3854,5013.6295 3703.3854,5012.8157 L3703.3854,5011.9856 Q3703.3854,5011.5787 3703.5156,5011.3671 Q3703.6621,5011.1555 3704.0039,5011.1555 Q3704.1178,5011.1555 3704.1992,5011.1881 Q3704.2969,5011.2044 3704.362,5011.2532 Q3704.4271,5011.302 3704.4759,5011.3509 Q3704.5247,5011.3997 3704.541,5011.4811 Q3704.5736,5011.5462 3704.5898,5011.595 Q3704.6061,5011.6276 3704.6224,5011.6927 Q3704.6387,5011.7415 3704.6387,5011.7578 Q3704.7363,5012.0996 3705.2409,5012.3437 Q3705.7617,5012.5716 3706.3802,5012.5716 Q3707.0801,5012.5716 3707.5521,5012.2949 Q3708.0241,5012.0182 3708.0241,5011.6276 Q3708.0241,5011.2532 3707.6497,5011.0253 Q3707.2917,5010.7975 3706.8034,5010.7324 Q3706.3314,5010.651 3705.6803,5010.5045 Q3705.0456,5010.3417 3704.6549,5010.1302 Q3704.1829,5009.8535 3703.9063,5009.3977 Q3703.6296,5008.9257 3703.6296,5008.3886 Q3703.6296,5007.4446 3704.3945,5006.8261 Q3705.1758,5006.1914 3706.3477,5006.1914 Q3707.3079,5006.1914 3707.959,5006.5983 Q3708.0729,5006.3541 3708.1706,5006.2727 Q3708.2682,5006.1914 3708.4473,5006.1914 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="68.75" x="3731.25" y="5019.7916">typeIndexJoin</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="3656.7708" x2="3843.2292" y1="5032.4999" y2="5032.4999"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3664.0625" y="5040.8332"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="3680.7292" y="5053.3331">p *Planner</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="3664.0625" y="5064.9998"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="90.625" x="3680.7292" y="5077.4997">joinPlan planNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="3656.7708" x2="3843.2292" y1="5089.1664" y2="5089.1664"/><ellipse cx="3667.1875" cy="5100.6247" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="3680.7292" y="5109.9996">Init() error</text><ellipse cx="3667.1875" cy="5124.7913" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="3680.7292" y="5134.1662">Start() error</text><ellipse cx="3667.1875" cy="5148.9578" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="3680.7292" y="5158.3327">Spans(spans core.Spans)</text><ellipse cx="3667.1875" cy="5173.1244" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="3680.7292" y="5182.4993">Next() (bool, error)</text><ellipse cx="3667.1875" cy="5197.2909" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="3680.7292" y="5206.6659">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="3725.5208" y="5206.6659">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="3747.3958" y="5206.6659">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="3780.7292" y="5206.6659">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="3824.4792" y="5206.6659">{}</text><ellipse cx="3667.1875" cy="5221.4575" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="3680.7292" y="5230.8324">Close() error</text><ellipse cx="3667.1875" cy="5245.6241" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="3680.7292" y="5254.999">Source() planNode</text><ellipse cx="3667.1875" cy="5269.7906" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="3680.7292" y="5279.1656">Merge() bool</text><!--MD5=[07c69bc66cc0e36c66f77e29f6c1a8a1]
class planner.typeJoinMany--><rect codeLine="1573" fill="#2A9FD6" height="375.8319" id="planner.typeJoinMany" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="188.5417" x="1676.5625" y="3767.1875"/><ellipse cx="1727.0833" cy="3789.6874" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M1729.2806,3785.8789 Q1729.6549,3785.8789 1729.7689,3786.0904 Q1729.8991,3786.302 1729.8991,3786.6927 L1729.8991,3787.7994 Q1729.8991,3788.6295 1729.2806,3788.6295 Q1729.1829,3788.6295 1729.1016,3788.6132 Q1729.0202,3788.597 1728.9551,3788.5644 Q1728.9063,3788.5318 1728.8574,3788.483 Q1728.8086,3788.4179 1728.776,3788.3854 Q1728.7598,3788.3528 1728.7272,3788.2714 Q1728.7109,3788.1901 1728.6947,3788.1738 Q1728.6947,3788.1412 1728.6784,3788.0598 Q1728.6621,3787.9785 1728.6621,3787.9622 Q1728.5807,3787.5878 1728.1738,3787.36 Q1727.7669,3787.1158 1727.181,3787.1158 Q1726.5951,3787.1158 1726.1719,3787.3925 Q1725.765,3787.6692 1725.765,3788.0761 Q1725.765,3788.4993 1726.1719,3788.7272 Q1726.5951,3788.955 1727.1322,3789.0364 Q1727.6855,3789.1015 1728.3529,3789.2805 Q1729.0365,3789.4596 1729.4271,3789.7688 Q1730.1595,3790.3548 1730.1595,3791.3313 Q1730.1595,3792.3079 1729.362,3792.9101 Q1728.5807,3793.5123 1727.2949,3793.5123 Q1726.2695,3793.5123 1725.3581,3793.024 Q1725.0977,3793.317 1724.8535,3793.317 Q1724.2188,3793.317 1724.2188,3792.5032 L1724.2188,3791.6731 Q1724.2188,3791.2662 1724.349,3791.0546 Q1724.4954,3790.843 1724.8372,3790.843 Q1724.9512,3790.843 1725.0326,3790.8756 Q1725.1302,3790.8919 1725.1953,3790.9407 Q1725.2604,3790.9895 1725.3092,3791.0384 Q1725.3581,3791.0872 1725.3743,3791.1686 Q1725.4069,3791.2337 1725.4232,3791.2825 Q1725.4395,3791.3151 1725.4557,3791.3802 Q1725.472,3791.429 1725.472,3791.4453 Q1725.5697,3791.7871 1726.0742,3792.0312 Q1726.5951,3792.2591 1727.2135,3792.2591 Q1727.9134,3792.2591 1728.3854,3791.9824 Q1728.8574,3791.7057 1728.8574,3791.3151 Q1728.8574,3790.9407 1728.4831,3790.7128 Q1728.125,3790.485 1727.6367,3790.4199 Q1727.1647,3790.3385 1726.5137,3790.192 Q1725.8789,3790.0292 1725.4883,3789.8177 Q1725.0163,3789.541 1724.7396,3789.0852 Q1724.4629,3788.6132 1724.4629,3788.0761 Q1724.4629,3787.1321 1725.2279,3786.5136 Q1726.0091,3785.8789 1727.181,3785.8789 Q1728.1413,3785.8789 1728.7923,3786.2858 Q1728.9063,3786.0416 1729.0039,3785.9602 Q1729.1016,3785.8789 1729.2806,3785.8789 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="68.75" x="1752.0833" y="3799.4791">typeJoinMany</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="1677.6042" x2="1864.0625" y1="3812.1874" y2="3812.1874"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1684.8958" y="3820.5207"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="1701.5625" y="3833.0206">p *Planner</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1684.8958" y="3844.6873"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="1701.5625" y="3857.1872">root planNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1684.8958" y="3868.8539"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="80.2083" x="1701.5625" y="3881.3538">rootName string</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1684.8958" y="3893.0204"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="1701.5625" y="3905.5203">index *scanNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1684.8958" y="3917.187"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="93.75" x="1701.5625" y="3929.6869">subType planNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1684.8958" y="3941.3536"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="1701.5625" y="3953.8535">subTypeName string</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="1677.6042" x2="1864.0625" y1="3965.5201" y2="3965.5201"/><ellipse cx="1688.0208" cy="3976.9784" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="1701.5625" y="3986.3534">Init() error</text><ellipse cx="1688.0208" cy="4001.145" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="1701.5625" y="4010.5199">Start() error</text><ellipse cx="1688.0208" cy="4025.3116" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="1701.5625" y="4034.6865">Spans(spans core.Spans)</text><ellipse cx="1688.0208" cy="4049.4781" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="1701.5625" y="4058.8531">Next() (bool, error)</text><ellipse cx="1688.0208" cy="4073.6447" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="1701.5625" y="4083.0196">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="1746.3542" y="4083.0196">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="1768.2292" y="4083.0196">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="1801.5625" y="4083.0196">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="1845.3125" y="4083.0196">{}</text><ellipse cx="1688.0208" cy="4097.8113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="1701.5625" y="4107.1862">Close() error</text><ellipse cx="1688.0208" cy="4121.9778" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="1701.5625" y="4131.3527">Source() planNode</text><!--MD5=[71ac0074790804252762c858dc7c8655]
class planner.typeJoinOne--><rect codeLine="1590" fill="#2A9FD6" height="496.6647" id="planner.typeJoinOne" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="369.7917" x="1901.5625" y="3706.7708"/><ellipse cx="2045.3125" cy="3729.2708" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M2047.5098,3725.4622 Q2047.8841,3725.4622 2047.998,3725.6738 Q2048.1283,3725.8854 2048.1283,3726.276 L2048.1283,3727.3828 Q2048.1283,3728.2128 2047.5098,3728.2128 Q2047.4121,3728.2128 2047.3307,3728.1966 Q2047.2493,3728.1803 2047.1842,3728.1477 Q2047.1354,3728.1152 2047.0866,3728.0664 Q2047.0378,3728.0013 2047.0052,3727.9687 Q2046.9889,3727.9361 2046.9564,3727.8548 Q2046.9401,3727.7734 2046.9238,3727.7571 Q2046.9238,3727.7246 2046.9076,3727.6432 Q2046.8913,3727.5618 2046.8913,3727.5455 Q2046.8099,3727.1712 2046.403,3726.9433 Q2045.9961,3726.6992 2045.4102,3726.6992 Q2044.8242,3726.6992 2044.401,3726.9759 Q2043.9941,3727.2526 2043.9941,3727.6595 Q2043.9941,3728.0826 2044.401,3728.3105 Q2044.8242,3728.5384 2045.3613,3728.6197 Q2045.9147,3728.6848 2046.582,3728.8639 Q2047.2656,3729.0429 2047.6563,3729.3522 Q2048.3887,3729.9381 2048.3887,3730.9147 Q2048.3887,3731.8912 2047.5911,3732.4934 Q2046.8099,3733.0957 2045.5241,3733.0957 Q2044.4987,3733.0957 2043.5872,3732.6074 Q2043.3268,3732.9003 2043.0827,3732.9003 Q2042.4479,3732.9003 2042.4479,3732.0865 L2042.4479,3731.2565 Q2042.4479,3730.8496 2042.5781,3730.638 Q2042.7246,3730.4264 2043.0664,3730.4264 Q2043.1803,3730.4264 2043.2617,3730.4589 Q2043.3594,3730.4752 2043.4245,3730.524 Q2043.4896,3730.5729 2043.5384,3730.6217 Q2043.5872,3730.6705 2043.6035,3730.7519 Q2043.6361,3730.817 2043.6523,3730.8658 Q2043.6686,3730.8984 2043.6849,3730.9635 Q2043.7012,3731.0123 2043.7012,3731.0286 Q2043.7988,3731.3704 2044.3034,3731.6145 Q2044.8242,3731.8424 2045.4427,3731.8424 Q2046.1426,3731.8424 2046.6146,3731.5657 Q2047.0866,3731.289 2047.0866,3730.8984 Q2047.0866,3730.524 2046.7122,3730.2962 Q2046.3542,3730.0683 2045.8659,3730.0032 Q2045.3939,3729.9218 2044.7428,3729.7753 Q2044.1081,3729.6126 2043.7174,3729.401 Q2043.2454,3729.1243 2042.9688,3728.6686 Q2042.6921,3728.1966 2042.6921,3727.6595 Q2042.6921,3726.7154 2043.457,3726.097 Q2044.2383,3725.4622 2045.4102,3725.4622 Q2046.3704,3725.4622 2047.0215,3725.8691 Q2047.1354,3725.6249 2047.2331,3725.5436 Q2047.3307,3725.4622 2047.5098,3725.4622 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="63.5417" x="2070.3125" y="3739.0624">typeJoinOne</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="1902.6042" x2="2270.3125" y1="3751.7707" y2="3751.7707"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1909.8958" y="3760.1041"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="1926.5625" y="3772.604">p *Planner</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1909.8958" y="3784.2706"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="1926.5625" y="3796.7705">root planNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1909.8958" y="3808.4372"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="93.75" x="1926.5625" y="3820.9371">subType planNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1909.8958" y="3832.6038"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="80.2083" x="1926.5625" y="3845.1037">rootName string</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1909.8958" y="3856.7703"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="1926.5625" y="3869.2702">subTypeName string</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1909.8958" y="3880.9369"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="127.0833" x="1926.5625" y="3893.4368">subTypeFieldName string</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1909.8958" y="3905.1034"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="1926.5625" y="3917.6034">primary bool</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1909.8958" y="3929.27"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="89.5833" x="1926.5625" y="3941.7699">spans core.Spans</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="1902.6042" x2="2270.3125" y1="3953.4366" y2="3953.4366"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1909.8958" y="3961.7699"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="108.3333" x="1926.5625" y="3974.2698">valuesSecondary(doc</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="2038.0208" y="3974.2698">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="2059.8958" y="3974.2698">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="2093.2292" y="3974.2698">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="12.5" x="2136.9792" y="3974.2698">{})</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="2152.6042" y="3974.2698">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="2174.4792" y="3974.2698">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="2207.8125" y="3974.2698">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="2251.5625" y="3974.2698">{}</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="1909.8958" y="3985.9365"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="1926.5625" y="3998.4364">valuesPrimary(doc</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="2022.3958" y="3998.4364">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="2044.2708" y="3998.4364">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="2077.6042" y="3998.4364">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="12.5" x="2121.3542" y="3998.4364">{})</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="2136.9792" y="3998.4364">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="2158.8542" y="3998.4364">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="2192.1875" y="3998.4364">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="2235.9375" y="3998.4364">{}</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="1929.6875" y="4022.603"/><ellipse cx="1913.0208" cy="4037.3946" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="1926.5625" y="4046.7695">Init() error</text><ellipse cx="1913.0208" cy="4061.5612" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="1926.5625" y="4070.9361">Start() error</text><ellipse cx="1913.0208" cy="4085.7277" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="1926.5625" y="4095.1026">Spans(spans core.Spans)</text><ellipse cx="1913.0208" cy="4109.8943" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="1926.5625" y="4119.2692">Next() (bool, error)</text><ellipse cx="1913.0208" cy="4134.0609" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="1926.5625" y="4143.4358">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="1971.3542" y="4143.4358">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="1993.2292" y="4143.4358">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="2026.5625" y="4143.4358">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="2070.3125" y="4143.4358">{}</text><ellipse cx="1913.0208" cy="4158.2274" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="1926.5625" y="4167.6023">Close() error</text><ellipse cx="1913.0208" cy="4182.394" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="1926.5625" y="4191.7689">Source() planNode</text><!--MD5=[2bdd84256d0905999ad51764a01848e1]
class planner.updateNode--><rect codeLine="1612" fill="#2A9FD6" height="424.165" id="planner.updateNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="188.5417" x="2307.8125" y="3743.2292"/><ellipse cx="2361.9792" cy="3765.7291" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M2364.1764,3761.9205 Q2364.5508,3761.9205 2364.6647,3762.1321 Q2364.7949,3762.3437 2364.7949,3762.7343 L2364.7949,3763.8411 Q2364.7949,3764.6712 2364.1764,3764.6712 Q2364.0788,3764.6712 2363.9974,3764.6549 Q2363.916,3764.6386 2363.8509,3764.6061 Q2363.8021,3764.5735 2363.7533,3764.5247 Q2363.7044,3764.4596 2363.6719,3764.427 Q2363.6556,3764.3945 2363.623,3764.3131 Q2363.6068,3764.2317 2363.5905,3764.2154 Q2363.5905,3764.1829 2363.5742,3764.1015 Q2363.5579,3764.0201 2363.5579,3764.0039 Q2363.4766,3763.6295 2363.0697,3763.4016 Q2362.6628,3763.1575 2362.0768,3763.1575 Q2361.4909,3763.1575 2361.0677,3763.4342 Q2360.6608,3763.7109 2360.6608,3764.1178 Q2360.6608,3764.541 2361.0677,3764.7688 Q2361.4909,3764.9967 2362.028,3765.0781 Q2362.5814,3765.1432 2363.2487,3765.3222 Q2363.9323,3765.5013 2364.3229,3765.8105 Q2365.0553,3766.3964 2365.0553,3767.373 Q2365.0553,3768.3496 2364.2578,3768.9518 Q2363.4766,3769.554 2362.1908,3769.554 Q2361.1654,3769.554 2360.2539,3769.0657 Q2359.9935,3769.3587 2359.7493,3769.3587 Q2359.1146,3769.3587 2359.1146,3768.5449 L2359.1146,3767.7148 Q2359.1146,3767.3079 2359.2448,3767.0963 Q2359.3913,3766.8847 2359.7331,3766.8847 Q2359.847,3766.8847 2359.9284,3766.9173 Q2360.026,3766.9335 2360.0911,3766.9824 Q2360.1563,3767.0312 2360.2051,3767.08 Q2360.2539,3767.1289 2360.2702,3767.2102 Q2360.3027,3767.2753 2360.319,3767.3242 Q2360.3353,3767.3567 2360.3516,3767.4218 Q2360.3678,3767.4707 2360.3678,3767.4869 Q2360.4655,3767.8287 2360.9701,3768.0729 Q2361.4909,3768.3007 2362.1094,3768.3007 Q2362.8092,3768.3007 2363.2813,3768.024 Q2363.7533,3767.7473 2363.7533,3767.3567 Q2363.7533,3766.9824 2363.3789,3766.7545 Q2363.0208,3766.5266 2362.5326,3766.4615 Q2362.0605,3766.3802 2361.4095,3766.2337 Q2360.7747,3766.0709 2360.3841,3765.8593 Q2359.9121,3765.5826 2359.6354,3765.1269 Q2359.3587,3764.6549 2359.3587,3764.1178 Q2359.3587,3763.1738 2360.1237,3762.5553 Q2360.9049,3761.9205 2362.0768,3761.9205 Q2363.0371,3761.9205 2363.6882,3762.3274 Q2363.8021,3762.0833 2363.8997,3762.0019 Q2363.9974,3761.9205 2364.1764,3761.9205 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="2386.9792" y="3775.5207">updateNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="2308.8542" x2="2495.3125" y1="3788.2291" y2="3788.2291"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="2316.1458" y="3796.5624"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="2332.8125" y="3809.0623">p *Planner</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="2316.1458" y="3820.729"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="2332.8125" y="3833.2289">collection client.Collection</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="2316.1458" y="3844.8955"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="88.5417" x="2332.8125" y="3857.3954">filter *parser.Filter</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="2316.1458" y="3869.0621"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="2332.8125" y="3881.562">ids []string</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="2316.1458" y="3893.2287"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="58.3333" x="2332.8125" y="3905.7286">patch string</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="2316.1458" y="3917.3952"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="76.0417" x="2332.8125" y="3929.8951">isUpdating bool</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="2316.1458" y="3941.5618"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="116.6667" x="2332.8125" y="3954.0617">updateIter *valuesNode</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="2316.1458" y="3965.7283"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="83.3333" x="2332.8125" y="3978.2283">results planNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="2308.8542" x2="2495.3125" y1="3989.8949" y2="3989.8949"/><ellipse cx="2319.2708" cy="4001.3532" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="2332.8125" y="4010.7282">Next() (bool, error)</text><ellipse cx="2319.2708" cy="4025.5198" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="2332.8125" y="4034.8947">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="2377.6042" y="4034.8947">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="2399.4792" y="4034.8947">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="2432.8125" y="4034.8947">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="2476.5625" y="4034.8947">{}</text><ellipse cx="2319.2708" cy="4049.6864" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="2332.8125" y="4059.0613">Spans(spans core.Spans)</text><ellipse cx="2319.2708" cy="4073.8529" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="2332.8125" y="4083.2279">Init() error</text><ellipse cx="2319.2708" cy="4098.0195" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="2332.8125" y="4107.3944">Start() error</text><ellipse cx="2319.2708" cy="4122.1861" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="2332.8125" y="4131.561">Close() error</text><ellipse cx="2319.2708" cy="4146.3526" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="2332.8125" y="4155.7275">Source() planNode</text><!--MD5=[5befdeff04c02699aae9f5b47f8b5f75]
class planner.valueIterator--><rect codeLine="1631" fill="#2A9FD6" height="123.7496" id="planner.valueIterator" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="188.5417" x="383.8542" y="3031.7708"/><ellipse cx="437.5" cy="3049.0624" fill="#A30000" rx="10.4167" ry="10.4167" style="stroke:#D63333;stroke-width:1.0416666666666667;"/><path d="M439.4857,3051.455 Q439.8926,3051.455 440.1042,3051.5852 Q440.3158,3051.7154 440.3158,3052.0898 Q440.3158,3052.7083 439.4857,3052.7083 L435.7096,3052.7083 Q434.8958,3052.7083 434.8958,3052.0898 Q434.8958,3051.7154 435.1074,3051.5852 Q435.319,3051.455 435.7096,3051.455 L436.9792,3051.455 L436.9792,3046.6699 L435.7096,3046.6699 Q434.8958,3046.6699 434.8958,3046.0514 Q434.8958,3045.677 435.1074,3045.5468 Q435.319,3045.4166 435.7096,3045.4166 L439.4857,3045.4166 Q439.8926,3045.4166 440.1042,3045.5468 Q440.3158,3045.677 440.3158,3046.0514 Q440.3158,3046.6699 439.4857,3046.6699 L438.2324,3046.6699 L438.2324,3051.455 L439.4857,3051.455 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" font-style="italic" lengthAdjust="spacing" textLength="62.5" x="462.5" y="3053.6457">valueIterator</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="384.8958" x2="571.3542" y1="3066.3541" y2="3066.3541"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="384.8958" x2="571.3542" y1="3074.6874" y2="3074.6874"/><ellipse cx="395.3125" cy="3086.1457" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="408.8542" y="3095.5206">Next() (bool, error)</text><ellipse cx="395.3125" cy="3110.3123" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="408.8542" y="3119.6872">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="453.6458" y="3119.6872">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="475.5208" y="3119.6872">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="508.8542" y="3119.6872">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="552.6042" y="3119.6872">{}</text><ellipse cx="395.3125" cy="3134.4789" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="408.8542" y="3143.8538">Close()</text><!--MD5=[4da494e817c9d5d25ca14290bbb7bbdf]
class planner.valuesNode--><rect codeLine="1637" fill="#2A9FD6" height="472.4982" id="planner.valuesNode" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="390.625" x="282.8125" y="3718.75"/><ellipse cx="439.5833" cy="3741.2499" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M441.7806,3737.4414 Q442.1549,3737.4414 442.2689,3737.6529 Q442.3991,3737.8645 442.3991,3738.2552 L442.3991,3739.3619 Q442.3991,3740.192 441.7806,3740.192 Q441.6829,3740.192 441.6016,3740.1757 Q441.5202,3740.1595 441.4551,3740.1269 Q441.4063,3740.0943 441.3574,3740.0455 Q441.3086,3739.9804 441.276,3739.9479 Q441.2598,3739.9153 441.2272,3739.8339 Q441.2109,3739.7526 441.1947,3739.7363 Q441.1947,3739.7037 441.1784,3739.6223 Q441.1621,3739.541 441.1621,3739.5247 Q441.0807,3739.1503 440.6738,3738.9225 Q440.2669,3738.6783 439.681,3738.6783 Q439.0951,3738.6783 438.6719,3738.955 Q438.265,3739.2317 438.265,3739.6386 Q438.265,3740.0618 438.6719,3740.2897 Q439.0951,3740.5175 439.6322,3740.5989 Q440.1855,3740.664 440.8529,3740.843 Q441.5365,3741.0221 441.9271,3741.3313 Q442.6595,3741.9173 442.6595,3742.8938 Q442.6595,3743.8704 441.862,3744.4726 Q441.0807,3745.0748 439.7949,3745.0748 Q438.7695,3745.0748 437.8581,3744.5865 Q437.5977,3744.8795 437.3535,3744.8795 Q436.7188,3744.8795 436.7188,3744.0657 L436.7188,3743.2356 Q436.7188,3742.8287 436.849,3742.6171 Q436.9954,3742.4055 437.3372,3742.4055 Q437.4512,3742.4055 437.5326,3742.4381 Q437.6302,3742.4544 437.6953,3742.5032 Q437.7604,3742.552 437.8092,3742.6009 Q437.8581,3742.6497 437.8743,3742.7311 Q437.9069,3742.7962 437.9232,3742.845 Q437.9395,3742.8776 437.9557,3742.9427 Q437.972,3742.9915 437.972,3743.0078 Q438.0697,3743.3496 438.5742,3743.5937 Q439.0951,3743.8216 439.7135,3743.8216 Q440.4134,3743.8216 440.8854,3743.5449 Q441.3574,3743.2682 441.3574,3742.8776 Q441.3574,3742.5032 440.9831,3742.2753 Q440.625,3742.0475 440.1367,3741.9824 Q439.6647,3741.901 439.0137,3741.7545 Q438.3789,3741.5917 437.9883,3741.3802 Q437.5163,3741.1035 437.2396,3740.6477 Q436.9629,3740.1757 436.9629,3739.6386 Q436.9629,3738.6946 437.7279,3738.0761 Q438.5091,3737.4414 439.681,3737.4414 Q440.6413,3737.4414 441.2923,3737.8483 Q441.4063,3737.6041 441.5039,3737.5227 Q441.6016,3737.4414 441.7806,3737.4414 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="58.3333" x="464.5833" y="3751.0416">valuesNode</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="283.8542" x2="672.3958" y1="3763.7499" y2="3763.7499"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="291.1458" y="3772.0832"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="307.8125" y="3784.5831">p *Planner</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="291.1458" y="3796.2498"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="154.1667" x="307.8125" y="3808.7497">ordering []parser.SortCondition</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="291.1458" y="3820.4164"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="307.8125" y="3832.9163">docs *container.DocumentContainer</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="291.1458" y="3844.5829"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="307.8125" y="3857.0828">docIndex int</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="283.8542" x2="672.3958" y1="3868.7495" y2="3868.7495"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="291.1458" y="3877.0828"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="86.4583" x="307.8125" y="3889.5827">docValueLess(da</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="397.3958" y="3889.5827">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="419.2708" y="3889.5827">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="452.6042" y="3889.5827">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="27.0833" x="496.3542" y="3889.5827">{}, db</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="526.5625" y="3889.5827">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="548.4375" y="3889.5827">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="581.7708" y="3889.5827">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="625.5208" y="3889.5827">{}) bool</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="310.9375" y="3913.7493"/><ellipse cx="294.2708" cy="3928.5409" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="307.8125" y="3937.9159">Init() error</text><ellipse cx="294.2708" cy="3952.7075" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="307.8125" y="3962.0824">Start() error</text><ellipse cx="294.2708" cy="3976.8741" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="307.8125" y="3986.249">Spans(spans core.Spans)</text><ellipse cx="294.2708" cy="4001.0406" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="307.8125" y="4010.4156">Close()</text><ellipse cx="294.2708" cy="4025.2072" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="307.8125" y="4034.5821">Next() (bool, error)</text><ellipse cx="294.2708" cy="4049.3738" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="307.8125" y="4058.7487">Values()</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="352.6042" y="4058.7487">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="374.4792" y="4058.7487">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="407.8125" y="4058.7487">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="451.5625" y="4058.7487">{}</text><ellipse cx="294.2708" cy="4073.5403" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="307.8125" y="4082.9152">Source() planNode</text><ellipse cx="294.2708" cy="4097.7069" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="40.625" x="307.8125" y="4107.0818">SortAll()</text><ellipse cx="294.2708" cy="4121.8735" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="307.8125" y="4131.2484">Less(i int, j int) bool</text><ellipse cx="294.2708" cy="4146.04" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="77.0833" x="307.8125" y="4155.4149">Swap(i int, j int)</text><ellipse cx="294.2708" cy="4170.2066" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="307.8125" y="4179.5815">Len() int</text><!--MD5=[6ae8c0f8b8bc33daf30db2ff75f12c5a]
class schema.Generator--><rect codeLine="1696" fill="#2A9FD6" height="665.8307" id="schema.Generator" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="535.4167" x="18645.8333" y="2760.9375"/><ellipse cx="18878.6458" cy="2783.4374" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M18880.8431,2779.6289 Q18881.2174,2779.6289 18881.3314,2779.8404 Q18881.4616,2780.052 18881.4616,2780.4427 L18881.4616,2781.5494 Q18881.4616,2782.3795 18880.8431,2782.3795 Q18880.7454,2782.3795 18880.6641,2782.3632 Q18880.5827,2782.347 18880.5176,2782.3144 Q18880.4688,2782.2818 18880.4199,2782.233 Q18880.3711,2782.1679 18880.3385,2782.1354 Q18880.3223,2782.1028 18880.2897,2782.0214 Q18880.2734,2781.9401 18880.2572,2781.9238 Q18880.2572,2781.8912 18880.2409,2781.8098 Q18880.2246,2781.7285 18880.2246,2781.7122 Q18880.1432,2781.3378 18879.7363,2781.11 Q18879.3294,2780.8658 18878.7435,2780.8658 Q18878.1576,2780.8658 18877.7344,2781.1425 Q18877.3275,2781.4192 18877.3275,2781.8261 Q18877.3275,2782.2493 18877.7344,2782.4772 Q18878.1576,2782.705 18878.6947,2782.7864 Q18879.248,2782.8515 18879.9154,2783.0305 Q18880.599,2783.2096 18880.9896,2783.5188 Q18881.722,2784.1048 18881.722,2785.0813 Q18881.722,2786.0579 18880.9245,2786.6601 Q18880.1432,2787.2623 18878.8574,2787.2623 Q18877.832,2787.2623 18876.9206,2786.774 Q18876.6602,2787.067 18876.416,2787.067 Q18875.7813,2787.067 18875.7813,2786.2532 L18875.7813,2785.4231 Q18875.7813,2785.0162 18875.9115,2784.8046 Q18876.0579,2784.593 18876.3997,2784.593 Q18876.5137,2784.593 18876.5951,2784.6256 Q18876.6927,2784.6419 18876.7578,2784.6907 Q18876.8229,2784.7395 18876.8717,2784.7884 Q18876.9206,2784.8372 18876.9368,2784.9186 Q18876.9694,2784.9837 18876.9857,2785.0325 Q18877.002,2785.0651 18877.0182,2785.1302 Q18877.0345,2785.179 18877.0345,2785.1953 Q18877.1322,2785.5371 18877.6367,2785.7812 Q18878.1576,2786.0091 18878.776,2786.0091 Q18879.4759,2786.0091 18879.9479,2785.7324 Q18880.4199,2785.4557 18880.4199,2785.0651 Q18880.4199,2784.6907 18880.0456,2784.4628 Q18879.6875,2784.235 18879.1992,2784.1699 Q18878.7272,2784.0885 18878.0762,2783.942 Q18877.4414,2783.7792 18877.0508,2783.5677 Q18876.5788,2783.291 18876.3021,2782.8352 Q18876.0254,2782.3632 18876.0254,2781.8261 Q18876.0254,2780.8821 18876.7904,2780.2636 Q18877.5716,2779.6289 18878.7435,2779.6289 Q18879.7038,2779.6289 18880.3548,2780.0358 Q18880.4688,2779.7916 18880.5664,2779.7102 Q18880.6641,2779.6289 18880.8431,2779.6289 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="18903.6458" y="2793.2291">Generator</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18646.875" x2="19180.2083" y1="2805.9374" y2="2805.9374"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18654.1667" y="2814.2707"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="18670.8333" y="2826.7706">typeDefs []*graphql.Object</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18654.1667" y="2838.4373"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="138.5417" x="18670.8333" y="2850.9372">manager *SchemaManager</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18654.1667" y="2862.6039"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="78.125" x="18670.8333" y="2875.1038">expandedFields</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="18752.0833" y="2875.1038">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="54.1667" x="18773.9583" y="2875.1038">[string]bool</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18646.875" x2="19180.2083" y1="2886.7704" y2="2886.7704"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18654.1667" y="2895.1038"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="244.7917" x="18670.8333" y="2907.6037">expandInputArgument(obj *graphql.Object) error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18654.1667" y="2919.2703"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="468.75" x="18670.8333" y="2931.7702">createExpandedFieldSingle(f *graphql.FieldDefinition, t *graphql.Object) (*graphql.Field, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18654.1667" y="2943.4369"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="455.2083" x="18670.8333" y="2955.9368">createExpandedFieldList(f *graphql.FieldDefinition, t *graphql.Object) (*graphql.Field, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18654.1667" y="2967.6034"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="365.625" x="18670.8333" y="2980.1034">buildTypesFromAST(document *ast.Document) ([]*graphql.Object, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18654.1667" y="2991.77"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="498.9583" x="18670.8333" y="3004.2699">genTypeMutationFields(obj *graphql.Object, filterInput *graphql.InputObject) ([]*graphql.Field, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18654.1667" y="3015.9366"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="362.5" x="18670.8333" y="3028.4365">genTypeMutationCreateField(obj *graphql.Object) (*graphql.Field, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18654.1667" y="3040.1031"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="498.9583" x="18670.8333" y="3052.6031">genTypeMutationUpdateField(obj *graphql.Object, filter *graphql.InputObject) (*graphql.Field, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18654.1667" y="3064.2697"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="494.7917" x="18670.8333" y="3076.7696">genTypeMutationDeleteField(obj *graphql.Object, filter *graphql.InputObject) (*graphql.Field, error)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18654.1667" y="3088.4363"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="285.4167" x="18670.8333" y="3100.9362">genTypeFieldsEnum(obj *graphql.Object) *graphql.Enum</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18654.1667" y="3112.6028"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="325" x="18670.8333" y="3125.1027">genTypeFilterArgInput(obj *graphql.Object) *graphql.InputObject</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18654.1667" y="3136.7694"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="350" x="18670.8333" y="3149.2693">genTypeFilterBaseArgInput(obj *graphql.Object) *graphql.InputObject</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18654.1667" y="3160.936"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="334.375" x="18670.8333" y="3173.4359">genTypeHavingArgInput(obj *graphql.Object) *graphql.InputObject</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18654.1667" y="3185.1025"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="344.7917" x="18670.8333" y="3197.6024">genTypeHavingBlockInput(obj *graphql.Object) *graphql.InputObject</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18654.1667" y="3209.2691"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="330.2083" x="18670.8333" y="3221.769">genTypeOrderArgInput(obj *graphql.Object) *graphql.InputObject</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18654.1667" y="3233.4357"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="464.5833" x="18670.8333" y="3245.9356">genTypeQueryableFieldList(obj *graphql.Object, config queryInputTypeConfig) *graphql.Field</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="18673.9583" y="3270.1021"/><ellipse cx="18657.2917" cy="3284.8938" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="400" x="18670.8333" y="3294.2687">CreateDescriptions(types []*graphql.Object) ([]base.CollectionDescription, error)</text><ellipse cx="18657.2917" cy="3309.0603" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="335.4167" x="18670.8333" y="3318.4353">FromSDL(schema string) ([]*graphql.Object, *ast.Document, error)</text><ellipse cx="18657.2917" cy="3333.2269" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="312.5" x="18670.8333" y="3342.6018">FromAST(document *ast.Document) ([]*graphql.Object, error)</text><ellipse cx="18657.2917" cy="3357.3935" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="387.5" x="18670.8333" y="3366.7684">GenerateQueryInputForGQLType(obj *graphql.Object) (*graphql.Field, error)</text><ellipse cx="18657.2917" cy="3381.56" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="405.2083" x="18670.8333" y="3390.935">GenerateMutationInputForGQLType(obj *graphql.Object) ([]*graphql.Field, error)</text><ellipse cx="18657.2917" cy="3405.7266" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="37.5" x="18670.8333" y="3415.1015">Reset()</text><!--MD5=[9e166230cdf449dea1c90cdbd8923653]
class schema.Relation--><rect codeLine="1725" fill="#2A9FD6" height="448.3316" id="schema.Relation" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="370.8333" x="19217.7083" y="2869.7917"/><ellipse cx="19373.4375" cy="2892.2916" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M19375.6348,2888.483 Q19376.0091,2888.483 19376.123,2888.6946 Q19376.2533,2888.9062 19376.2533,2889.2968 L19376.2533,2890.4036 Q19376.2533,2891.2337 19375.6348,2891.2337 Q19375.5371,2891.2337 19375.4557,2891.2174 Q19375.3743,2891.2011 19375.3092,2891.1686 Q19375.2604,2891.136 19375.2116,2891.0872 Q19375.1628,2891.0221 19375.1302,2890.9895 Q19375.1139,2890.957 19375.0814,2890.8756 Q19375.0651,2890.7942 19375.0488,2890.7779 Q19375.0488,2890.7454 19375.0326,2890.664 Q19375.0163,2890.5826 19375.0163,2890.5664 Q19374.9349,2890.192 19374.528,2889.9641 Q19374.1211,2889.72 19373.5352,2889.72 Q19372.9492,2889.72 19372.526,2889.9967 Q19372.1191,2890.2734 19372.1191,2890.6803 Q19372.1191,2891.1035 19372.526,2891.3313 Q19372.9492,2891.5592 19373.4863,2891.6406 Q19374.0397,2891.7057 19374.707,2891.8847 Q19375.3906,2892.0638 19375.7813,2892.373 Q19376.5137,2892.9589 19376.5137,2893.9355 Q19376.5137,2894.9121 19375.7161,2895.5143 Q19374.9349,2896.1165 19373.6491,2896.1165 Q19372.6237,2896.1165 19371.7122,2895.6282 Q19371.4518,2895.9212 19371.2077,2895.9212 Q19370.5729,2895.9212 19370.5729,2895.1074 L19370.5729,2894.2773 Q19370.5729,2893.8704 19370.7031,2893.6588 Q19370.8496,2893.4472 19371.1914,2893.4472 Q19371.3053,2893.4472 19371.3867,2893.4798 Q19371.4844,2893.496 19371.5495,2893.5449 Q19371.6146,2893.5937 19371.6634,2893.6425 Q19371.7122,2893.6914 19371.7285,2893.7727 Q19371.7611,2893.8378 19371.7773,2893.8867 Q19371.7936,2893.9192 19371.8099,2893.9843 Q19371.8262,2894.0332 19371.8262,2894.0494 Q19371.9238,2894.3912 19372.4284,2894.6354 Q19372.9492,2894.8632 19373.5677,2894.8632 Q19374.2676,2894.8632 19374.7396,2894.5865 Q19375.2116,2894.3098 19375.2116,2893.9192 Q19375.2116,2893.5449 19374.8372,2893.317 Q19374.4792,2893.0891 19373.9909,2893.024 Q19373.5189,2892.9427 19372.8678,2892.7962 Q19372.2331,2892.6334 19371.8424,2892.4218 Q19371.3704,2892.1451 19371.0938,2891.6894 Q19370.8171,2891.2174 19370.8171,2890.6803 Q19370.8171,2889.7363 19371.582,2889.1178 Q19372.3633,2888.483 19373.5352,2888.483 Q19374.4954,2888.483 19375.1465,2888.8899 Q19375.2604,2888.6458 19375.3581,2888.5644 Q19375.4557,2888.483 19375.6348,2888.483 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="40.625" x="19398.4375" y="2902.0832">Relation</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="19218.75" x2="19587.5" y1="2914.7916" y2="2914.7916"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="19226.0417" y="2923.1249"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="58.3333" x="19242.7083" y="2935.6248">name string</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="19226.0417" y="2947.2915"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="19242.7083" y="2959.7914">relType uint8</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="19226.0417" y="2971.458"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="59.375" x="19242.7083" y="2983.9579">types []uint8</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="19226.0417" y="2995.6246"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="19242.7083" y="3008.1245">schemaTypes []string</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="19226.0417" y="3019.7912"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="19242.7083" y="3032.2911">fields []string</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="19226.0417" y="3043.9577"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="63.5417" x="19242.7083" y="3056.4576">finalized bool</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="19218.75" x2="19587.5" y1="3068.1243" y2="3068.1243"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="19226.0417" y="3076.4576"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="69.7917" x="19242.7083" y="3088.9575">finalize() error</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="19226.0417" y="3100.6242"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="184.375" x="19242.7083" y="3113.1241">schemaTypeExists(t string) (int, bool)</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="19245.8333" y="3137.2907"/><ellipse cx="19229.1667" cy="3152.0823" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="19242.7083" y="3161.4572">Kind() uint8</text><ellipse cx="19229.1667" cy="3176.2489" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="56.25" x="19242.7083" y="3185.6238">Valid() bool</text><ellipse cx="19229.1667" cy="3200.4154" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="179.1667" x="19242.7083" y="3209.7904">SchemaTypeIsPrimary(t string) bool</text><ellipse cx="19229.1667" cy="3224.582" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="162.5" x="19242.7083" y="3233.9569">SchemaTypeIsOne(t string) bool</text><ellipse cx="19229.1667" cy="3248.7486" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="167.7083" x="19242.7083" y="3258.1235">SchemaTypeIsMany(t string) bool</text><ellipse cx="19229.1667" cy="3272.9151" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="195.8333" x="19242.7083" y="3282.29">GetField(field string) (string, uint8, bool)</text><ellipse cx="19229.1667" cy="3297.0817" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="334.375" x="19242.7083" y="3306.4566">GetFieldFromSchemaType(schemaType string) (string, uint8, bool)</text><!--MD5=[5567eee7a5c1bd17b65d88da8794eb36]
class schema.RelationManager--><rect codeLine="1745" fill="#2A9FD6" height="375.8319" id="schema.RelationManager" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="688.5417" x="19625.5208" y="2905.7292"/><ellipse cx="19917.7083" cy="2928.2291" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M19919.9056,2924.4205 Q19920.2799,2924.4205 19920.3939,2924.6321 Q19920.5241,2924.8437 19920.5241,2925.2343 L19920.5241,2926.3411 Q19920.5241,2927.1712 19919.9056,2927.1712 Q19919.8079,2927.1712 19919.7266,2927.1549 Q19919.6452,2927.1386 19919.5801,2927.1061 Q19919.5313,2927.0735 19919.4824,2927.0247 Q19919.4336,2926.9596 19919.401,2926.927 Q19919.3848,2926.8945 19919.3522,2926.8131 Q19919.3359,2926.7317 19919.3197,2926.7154 Q19919.3197,2926.6829 19919.3034,2926.6015 Q19919.2871,2926.5201 19919.2871,2926.5039 Q19919.2057,2926.1295 19918.7988,2925.9016 Q19918.3919,2925.6575 19917.806,2925.6575 Q19917.2201,2925.6575 19916.7969,2925.9342 Q19916.39,2926.2109 19916.39,2926.6178 Q19916.39,2927.041 19916.7969,2927.2688 Q19917.2201,2927.4967 19917.7572,2927.5781 Q19918.3105,2927.6432 19918.9779,2927.8222 Q19919.6615,2928.0013 19920.0521,2928.3105 Q19920.7845,2928.8964 19920.7845,2929.873 Q19920.7845,2930.8496 19919.987,2931.4518 Q19919.2057,2932.054 19917.9199,2932.054 Q19916.8945,2932.054 19915.9831,2931.5657 Q19915.7227,2931.8587 19915.4785,2931.8587 Q19914.8438,2931.8587 19914.8438,2931.0449 L19914.8438,2930.2148 Q19914.8438,2929.8079 19914.974,2929.5963 Q19915.1204,2929.3847 19915.4622,2929.3847 Q19915.5762,2929.3847 19915.6576,2929.4173 Q19915.7552,2929.4335 19915.8203,2929.4824 Q19915.8854,2929.5312 19915.9342,2929.58 Q19915.9831,2929.6289 19915.9993,2929.7102 Q19916.0319,2929.7753 19916.0482,2929.8242 Q19916.0645,2929.8567 19916.0807,2929.9218 Q19916.097,2929.9707 19916.097,2929.9869 Q19916.1947,2930.3287 19916.6992,2930.5729 Q19917.2201,2930.8007 19917.8385,2930.8007 Q19918.5384,2930.8007 19919.0104,2930.524 Q19919.4824,2930.2473 19919.4824,2929.8567 Q19919.4824,2929.4824 19919.1081,2929.2545 Q19918.75,2929.0266 19918.2617,2928.9615 Q19917.7897,2928.8802 19917.1387,2928.7337 Q19916.5039,2928.5709 19916.1133,2928.3593 Q19915.6413,2928.0826 19915.3646,2927.6269 Q19915.0879,2927.1549 19915.0879,2926.6178 Q19915.0879,2925.6738 19915.8529,2925.0553 Q19916.6341,2924.4205 19917.806,2924.4205 Q19918.7663,2924.4205 19919.4173,2924.8274 Q19919.5313,2924.5833 19919.6289,2924.5019 Q19919.7266,2924.4205 19919.9056,2924.4205 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="85.4167" x="19942.7083" y="2938.0207">RelationManager</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="19626.5625" x2="20313.0208" y1="2950.7291" y2="2950.7291"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="19633.8542" y="2959.0624"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="19650.5208" y="2971.5623">relations</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="19695.3125" y="2971.5623">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="78.125" x="19717.1875" y="2971.5623">[string]*Relation</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="19626.5625" x2="20313.0208" y1="2983.229" y2="2983.229"/><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="19633.8542" y="2991.5623"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="135.4167" x="19650.5208" y="3004.0622">validate() ([]*Relation, bool)</text><rect fill="#F24D5C" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="19633.8542" y="3015.7289"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="169.7917" x="19650.5208" y="3028.2288">register(rel *Relation) (bool, error)</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="19653.6458" y="3052.3953"/><ellipse cx="19636.9792" cy="3067.187" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="71.875" x="19650.5208" y="3076.5619">GetRelations()</text><ellipse cx="19636.9792" cy="3091.3536" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="212.5" x="19650.5208" y="3100.7285">GetRelation(name string) (*Relation, error)</text><ellipse cx="19636.9792" cy="3115.5201" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="427.0833" x="19650.5208" y="3124.895">GetRelationByDescription(field string, schemaType string, objectType string) *Relation</text><ellipse cx="19636.9792" cy="3139.6867" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="19650.5208" y="3149.0616">NumRelations() int</text><ellipse cx="19636.9792" cy="3163.8532" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="118.75" x="19650.5208" y="3173.2282">Exists(name string) bool</text><ellipse cx="19636.9792" cy="3188.0198" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="473.9583" x="19650.5208" y="3197.3947">RegisterSingle(name string, schemaType string, schemaField string, relType uint8) (bool, error)</text><ellipse cx="19636.9792" cy="3212.1864" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="652.0833" x="19650.5208" y="3221.5613">RegisterOneToOne(name string, primaryType string, primaryField string, secondaryType string, secondaryField string) (bool, error)</text><ellipse cx="19636.9792" cy="3236.3529" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="569.7917" x="19650.5208" y="3245.7279">RegisterOneToMany(name string, oneType string, oneField string, manyType string, manyField string) (bool, error)</text><ellipse cx="19636.9792" cy="3260.5195" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="366.6667" x="19650.5208" y="3269.8944">RegisterManyToMany(name string, type1 string, type2 string) (bool, error)</text><!--MD5=[f12d2d63ccc331524d72ddcb988e1446]
class schema.SchemaManager--><rect codeLine="1762" fill="#2A9FD6" height="230.8325" id="schema.SchemaManager" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="177.0833" x="18825" y="3839.5833"/><ellipse cx="18861.6146" cy="3862.0833" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M18863.8118,3858.2747 Q18864.1862,3858.2747 18864.3001,3858.4863 Q18864.4303,3858.6979 18864.4303,3859.0885 L18864.4303,3860.1953 Q18864.4303,3861.0253 18863.8118,3861.0253 Q18863.7142,3861.0253 18863.6328,3861.0091 Q18863.5514,3860.9928 18863.4863,3860.9602 Q18863.4375,3860.9277 18863.3887,3860.8789 Q18863.3398,3860.8138 18863.3073,3860.7812 Q18863.291,3860.7486 18863.2585,3860.6673 Q18863.2422,3860.5859 18863.2259,3860.5696 Q18863.2259,3860.5371 18863.2096,3860.4557 Q18863.1934,3860.3743 18863.1934,3860.358 Q18863.112,3859.9837 18862.7051,3859.7558 Q18862.2982,3859.5117 18861.7122,3859.5117 Q18861.1263,3859.5117 18860.7031,3859.7884 Q18860.2962,3860.0651 18860.2962,3860.472 Q18860.2962,3860.8951 18860.7031,3861.123 Q18861.1263,3861.3509 18861.6634,3861.4322 Q18862.2168,3861.4973 18862.8841,3861.6764 Q18863.5677,3861.8554 18863.9583,3862.1647 Q18864.6908,3862.7506 18864.6908,3863.7272 Q18864.6908,3864.7037 18863.8932,3865.3059 Q18863.112,3865.9082 18861.8262,3865.9082 Q18860.8008,3865.9082 18859.8893,3865.4199 Q18859.6289,3865.7128 18859.3848,3865.7128 Q18858.75,3865.7128 18858.75,3864.899 L18858.75,3864.069 Q18858.75,3863.6621 18858.8802,3863.4505 Q18859.0267,3863.2389 18859.3685,3863.2389 Q18859.4824,3863.2389 18859.5638,3863.2714 Q18859.6615,3863.2877 18859.7266,3863.3365 Q18859.7917,3863.3854 18859.8405,3863.4342 Q18859.8893,3863.483 18859.9056,3863.5644 Q18859.9382,3863.6295 18859.9544,3863.6783 Q18859.9707,3863.7109 18859.987,3863.776 Q18860.0033,3863.8248 18860.0033,3863.8411 Q18860.1009,3864.1829 18860.6055,3864.427 Q18861.1263,3864.6549 18861.7448,3864.6549 Q18862.4447,3864.6549 18862.9167,3864.3782 Q18863.3887,3864.1015 18863.3887,3863.7109 Q18863.3887,3863.3365 18863.0143,3863.1087 Q18862.6563,3862.8808 18862.168,3862.8157 Q18861.696,3862.7343 18861.0449,3862.5878 Q18860.4102,3862.4251 18860.0195,3862.2135 Q18859.5475,3861.9368 18859.2708,3861.4811 Q18858.9941,3861.0091 18858.9941,3860.472 Q18858.9941,3859.5279 18859.7591,3858.9095 Q18860.5404,3858.2747 18861.7122,3858.2747 Q18862.6725,3858.2747 18863.3236,3858.6816 Q18863.4375,3858.4374 18863.5352,3858.3561 Q18863.6328,3858.2747 18863.8118,3858.2747 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="86.4583" x="18885.2604" y="3871.8749">SchemaManager</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18826.0417" x2="19001.0417" y1="3884.5832" y2="3884.5832"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="18833.3333" y="3892.9166"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="18850" y="3905.4165">schema graphql.Schema</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="0" x="18853.125" y="3929.583"/><ellipse cx="18836.4583" cy="3944.3747" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="109.375" x="18850" y="3953.7496">Generator *Generator</text><ellipse cx="18836.4583" cy="3968.5413" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="138.5417" x="18850" y="3977.9162">Relations *RelationManager</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18826.0417" x2="19001.0417" y1="3989.5828" y2="3989.5828"/><ellipse cx="18836.4583" cy="4001.0412" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="140.625" x="18850" y="4010.4161">NewGenerator() *Generator</text><ellipse cx="18836.4583" cy="4025.2077" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="18850" y="4034.5826">Schema() *graphql.Schema</text><ellipse cx="18836.4583" cy="4049.3743" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="18850" y="4058.7492">ResolveTypes() error</text><!--MD5=[ad50a11c4af1c82a3e43ec15b37413ad]
class schema.Type--><rect codeLine="1773" fill="#2A9FD6" height="85.8331" id="schema.Type" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="153.125" x="18455.7292" y="3051.0417"/><ellipse cx="18510.4167" cy="3073.5416" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M18512.6139,3069.733 Q18512.9883,3069.733 18513.1022,3069.9446 Q18513.2324,3070.1562 18513.2324,3070.5468 L18513.2324,3071.6536 Q18513.2324,3072.4837 18512.6139,3072.4837 Q18512.5163,3072.4837 18512.4349,3072.4674 Q18512.3535,3072.4511 18512.2884,3072.4186 Q18512.2396,3072.386 18512.1908,3072.3372 Q18512.1419,3072.2721 18512.1094,3072.2395 Q18512.0931,3072.207 18512.0605,3072.1256 Q18512.0443,3072.0442 18512.028,3072.0279 Q18512.028,3071.9954 18512.0117,3071.914 Q18511.9954,3071.8326 18511.9954,3071.8164 Q18511.9141,3071.442 18511.5072,3071.2141 Q18511.1003,3070.97 18510.5143,3070.97 Q18509.9284,3070.97 18509.5052,3071.2467 Q18509.0983,3071.5234 18509.0983,3071.9303 Q18509.0983,3072.3535 18509.5052,3072.5813 Q18509.9284,3072.8092 18510.4655,3072.8906 Q18511.0189,3072.9557 18511.6862,3073.1347 Q18512.3698,3073.3138 18512.7604,3073.623 Q18513.4928,3074.2089 18513.4928,3075.1855 Q18513.4928,3076.1621 18512.6953,3076.7643 Q18511.9141,3077.3665 18510.6283,3077.3665 Q18509.6029,3077.3665 18508.6914,3076.8782 Q18508.431,3077.1712 18508.1868,3077.1712 Q18507.5521,3077.1712 18507.5521,3076.3574 L18507.5521,3075.5273 Q18507.5521,3075.1204 18507.6823,3074.9088 Q18507.8288,3074.6972 18508.1706,3074.6972 Q18508.2845,3074.6972 18508.3659,3074.7298 Q18508.4635,3074.746 18508.5286,3074.7949 Q18508.5938,3074.8437 18508.6426,3074.8925 Q18508.6914,3074.9414 18508.7077,3075.0227 Q18508.7402,3075.0878 18508.7565,3075.1367 Q18508.7728,3075.1692 18508.7891,3075.2343 Q18508.8053,3075.2832 18508.8053,3075.2994 Q18508.903,3075.6412 18509.4076,3075.8854 Q18509.9284,3076.1132 18510.5469,3076.1132 Q18511.2467,3076.1132 18511.7188,3075.8365 Q18512.1908,3075.5598 18512.1908,3075.1692 Q18512.1908,3074.7949 18511.8164,3074.567 Q18511.4583,3074.3391 18510.9701,3074.274 Q18510.498,3074.1927 18509.847,3074.0462 Q18509.2122,3073.8834 18508.8216,3073.6718 Q18508.3496,3073.3951 18508.0729,3072.9394 Q18507.7962,3072.4674 18507.7962,3071.9303 Q18507.7962,3070.9863 18508.5612,3070.3678 Q18509.3424,3069.733 18510.5143,3069.733 Q18511.4746,3069.733 18512.1257,3070.1399 Q18512.2396,3069.8958 18512.3372,3069.8144 Q18512.4349,3069.733 18512.6139,3069.733 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="25" x="18535.4167" y="3083.3332">Type</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18456.7708" x2="18607.8125" y1="3096.0416" y2="3096.0416"/><ellipse cx="18467.1875" cy="3107.4999" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="116.6667" x="18480.7292" y="3116.8748">Object *graphql.Object</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18456.7708" x2="18607.8125" y1="3128.5415" y2="3128.5415"/><!--MD5=[86e646f9f56258f3f1149335335f2797]
class schema.queryInputTypeConfig--><rect codeLine="1777" fill="#2A9FD6" height="158.3328" id="schema.queryInputTypeConfig" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="176.0417" x="19039.0625" y="3876.0417"/><ellipse cx="19064.4271" cy="3898.5416" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M19066.6243,3894.733 Q19066.9987,3894.733 19067.1126,3894.9446 Q19067.2428,3895.1562 19067.2428,3895.5468 L19067.2428,3896.6536 Q19067.2428,3897.4837 19066.6243,3897.4837 Q19066.5267,3897.4837 19066.4453,3897.4674 Q19066.3639,3897.4511 19066.2988,3897.4186 Q19066.25,3897.386 19066.2012,3897.3372 Q19066.1523,3897.2721 19066.1198,3897.2395 Q19066.1035,3897.207 19066.071,3897.1256 Q19066.0547,3897.0442 19066.0384,3897.0279 Q19066.0384,3896.9954 19066.0221,3896.914 Q19066.0059,3896.8326 19066.0059,3896.8164 Q19065.9245,3896.442 19065.5176,3896.2141 Q19065.1107,3895.97 19064.5247,3895.97 Q19063.9388,3895.97 19063.5156,3896.2467 Q19063.1087,3896.5234 19063.1087,3896.9303 Q19063.1087,3897.3535 19063.5156,3897.5813 Q19063.9388,3897.8092 19064.4759,3897.8906 Q19065.0293,3897.9557 19065.6966,3898.1347 Q19066.3802,3898.3138 19066.7708,3898.623 Q19067.5033,3899.2089 19067.5033,3900.1855 Q19067.5033,3901.1621 19066.7057,3901.7643 Q19065.9245,3902.3665 19064.6387,3902.3665 Q19063.6133,3902.3665 19062.7018,3901.8782 Q19062.4414,3902.1712 19062.1973,3902.1712 Q19061.5625,3902.1712 19061.5625,3901.3574 L19061.5625,3900.5273 Q19061.5625,3900.1204 19061.6927,3899.9088 Q19061.8392,3899.6972 19062.181,3899.6972 Q19062.2949,3899.6972 19062.3763,3899.7298 Q19062.474,3899.746 19062.5391,3899.7949 Q19062.6042,3899.8437 19062.653,3899.8925 Q19062.7018,3899.9414 19062.7181,3900.0227 Q19062.7507,3900.0878 19062.7669,3900.1367 Q19062.7832,3900.1692 19062.7995,3900.2343 Q19062.8158,3900.2832 19062.8158,3900.2994 Q19062.9134,3900.6412 19063.418,3900.8854 Q19063.9388,3901.1132 19064.5573,3901.1132 Q19065.2572,3901.1132 19065.7292,3900.8365 Q19066.2012,3900.5598 19066.2012,3900.1692 Q19066.2012,3899.7949 19065.8268,3899.567 Q19065.4688,3899.3391 19064.9805,3899.274 Q19064.5085,3899.1927 19063.8574,3899.0462 Q19063.2227,3898.8834 19062.832,3898.6718 Q19062.36,3898.3951 19062.0833,3897.9394 Q19061.8066,3897.4674 19061.8066,3896.9303 Q19061.8066,3895.9863 19062.5716,3895.3678 Q19063.3529,3894.733 19064.5247,3894.733 Q19065.485,3894.733 19066.1361,3895.1399 Q19066.25,3894.8958 19066.3477,3894.8144 Q19066.4453,3894.733 19066.6243,3894.733 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="110.4167" x="19085.5729" y="3908.3332">queryInputTypeConfig</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="19040.1042" x2="19214.0625" y1="3921.0416" y2="3921.0416"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="19047.3958" y="3929.3749"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="19064.0625" y="3941.8748">filter *graphql.InputObject</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="19047.3958" y="3953.5415"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="118.75" x="19064.0625" y="3966.0414">groupBy *graphql.Enum</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="19047.3958" y="3977.708"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="19064.0625" y="3990.2079">having *graphql.InputObject</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="19047.3958" y="4001.8746"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="19064.0625" y="4014.3745">order *graphql.InputObject</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="19040.1042" x2="19214.0625" y1="4026.0412" y2="4026.0412"/><!--MD5=[400e53a043782d3dd95d73de4c1b4acb]
class graphql.ObjectConfig--><rect fill="#2A9FD6" height="51.2499" id="graphql.ObjectConfig" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="108.3333" x="18478.125" y="2354.6875"/><ellipse cx="18492.7083" cy="2371.9791" fill="#777777" rx="10.4167" ry="10.4167" style="stroke:#444444;stroke-width:1.0416666666666667;"/><path d="M18493.1803,2374.5507 Q18493.7826,2374.5507 18494.1895,2374.4042 Q18494.6126,2374.2578 18494.7754,2374.095 Q18494.9544,2373.9322 18495.1335,2373.7858 Q18495.3288,2373.6393 18495.4915,2373.6393 Q18495.7357,2373.6393 18495.9147,2373.8346 Q18496.11,2374.0136 18496.11,2374.2578 Q18496.11,2374.7949 18495.2474,2375.2994 Q18494.401,2375.804 18493.1478,2375.804 Q18491.569,2375.804 18490.5111,2374.8763 Q18489.4694,2373.9322 18489.4694,2372.5162 L18489.4694,2371.6861 Q18489.4694,2370.1888 18490.446,2369.1796 Q18491.4225,2368.1705 18492.8711,2368.1705 Q18493.75,2368.1705 18494.6452,2368.5937 L18494.7754,2368.6425 Q18494.987,2368.3333 18495.2962,2368.3333 Q18495.6706,2368.3333 18495.8008,2368.5449 Q18495.931,2368.7565 18495.931,2369.1634 L18495.931,2370.205 Q18495.931,2371.0351 18495.2962,2371.0351 Q18495.0684,2371.0351 18494.9219,2370.9212 Q18494.7917,2370.791 18494.7591,2370.6933 Q18494.7266,2370.5794 18494.694,2370.3678 Q18494.6126,2369.9934 18494.222,2369.7656 Q18493.8477,2369.5377 18493.5221,2369.4726 Q18493.1966,2369.4075 18492.9199,2369.4075 Q18491.9759,2369.4075 18491.3411,2370.0585 Q18490.7227,2370.6933 18490.7227,2371.6861 L18490.7227,2372.4837 Q18490.7227,2373.4277 18491.39,2373.9973 Q18492.0573,2374.5507 18493.1803,2374.5507 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="66.6667" x="18511.4583" y="2376.5624">ObjectConfig</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18479.1667" x2="18585.4167" y1="2389.2707" y2="2389.2707"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18479.1667" x2="18585.4167" y1="2397.6041" y2="2397.6041"/><!--MD5=[84bc1855bafc5fdc4d44c3176e9f08c4]
class store.bstore--><rect codeLine="1789" fill="#2A9FD6" height="303.3322" id="store.bstore" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="379.1667" x="17616.6667" y="699.4792"/><ellipse cx="17781.25" cy="721.9791" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M17783.4473,718.1705 Q17783.8216,718.1705 17783.9355,718.3821 Q17784.0658,718.5937 17784.0658,718.9843 L17784.0658,720.0911 Q17784.0658,720.9212 17783.4473,720.9212 Q17783.3496,720.9212 17783.2682,720.9049 Q17783.1868,720.8886 17783.1217,720.8561 Q17783.0729,720.8235 17783.0241,720.7747 Q17782.9753,720.7096 17782.9427,720.677 Q17782.9264,720.6445 17782.8939,720.5631 Q17782.8776,720.4817 17782.8613,720.4654 Q17782.8613,720.4329 17782.8451,720.3515 Q17782.8288,720.2701 17782.8288,720.2539 Q17782.7474,719.8795 17782.3405,719.6516 Q17781.9336,719.4075 17781.3477,719.4075 Q17780.7617,719.4075 17780.3385,719.6842 Q17779.9316,719.9609 17779.9316,720.3678 Q17779.9316,720.791 17780.3385,721.0188 Q17780.7617,721.2467 17781.2988,721.3281 Q17781.8522,721.3932 17782.5195,721.5722 Q17783.2031,721.7513 17783.5938,722.0605 Q17784.3262,722.6464 17784.3262,723.623 Q17784.3262,724.5996 17783.5286,725.2018 Q17782.7474,725.804 17781.4616,725.804 Q17780.4362,725.804 17779.5247,725.3157 Q17779.2643,725.6087 17779.0202,725.6087 Q17778.3854,725.6087 17778.3854,724.7949 L17778.3854,723.9648 Q17778.3854,723.5579 17778.5156,723.3463 Q17778.6621,723.1347 17779.0039,723.1347 Q17779.1178,723.1347 17779.1992,723.1673 Q17779.2969,723.1835 17779.362,723.2324 Q17779.4271,723.2812 17779.4759,723.33 Q17779.5247,723.3789 17779.541,723.4602 Q17779.5736,723.5253 17779.5898,723.5742 Q17779.6061,723.6067 17779.6224,723.6718 Q17779.6387,723.7207 17779.6387,723.7369 Q17779.7363,724.0787 17780.2409,724.3229 Q17780.7617,724.5507 17781.3802,724.5507 Q17782.0801,724.5507 17782.5521,724.274 Q17783.0241,723.9973 17783.0241,723.6067 Q17783.0241,723.2324 17782.6497,723.0045 Q17782.2917,722.7766 17781.8034,722.7115 Q17781.3314,722.6302 17780.6803,722.4837 Q17780.0456,722.3209 17779.6549,722.1093 Q17779.1829,721.8326 17778.9063,721.3769 Q17778.6296,720.9049 17778.6296,720.3678 Q17778.6296,719.4238 17779.3945,718.8053 Q17780.1758,718.1705 17781.3477,718.1705 Q17782.3079,718.1705 17782.959,718.5774 Q17783.0729,718.3333 17783.1706,718.2519 Q17783.2682,718.1705 17783.4473,718.1705 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="31.25" x="17806.25" y="731.7707">bstore</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17617.7083" x2="17994.7917" y1="744.4791" y2="744.4791"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="17625" y="752.8124"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="137.5" x="17641.6667" y="765.3123">store core.DSReaderWriter</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="17625" y="776.979"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="58.3333" x="17641.6667" y="789.4789">rehash bool</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17617.7083" x2="17994.7917" y1="801.1455" y2="801.1455"/><ellipse cx="17628.125" cy="812.6039" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="234.375" x="17641.6667" y="821.9788">HashOnRead(_ context.Context, enabled bool)</text><ellipse cx="17628.125" cy="836.7704" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="342.7083" x="17641.6667" y="846.1453">Get(ctx context.Context, k go-cid.Cid) (go-block-format.Block, error)</text><ellipse cx="17628.125" cy="860.937" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="296.875" x="17641.6667" y="870.3119">Put(ctx context.Context, block go-block-format.Block) error</text><ellipse cx="17628.125" cy="885.1036" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="335.4167" x="17641.6667" y="894.4785">PutMany(ctx context.Context, blocks []go-block-format.Block) error</text><ellipse cx="17628.125" cy="909.2701" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="254.1667" x="17641.6667" y="918.645">Has(ctx context.Context, k go-cid.Cid) (bool, error)</text><ellipse cx="17628.125" cy="933.4367" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="263.5417" x="17641.6667" y="942.8116">GetSize(ctx context.Context, k go-cid.Cid) (int, error)</text><ellipse cx="17628.125" cy="957.6032" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="259.375" x="17641.6667" y="966.9782">DeleteBlock(ctx context.Context, k go-cid.Cid) error</text><ellipse cx="17628.125" cy="981.7698" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="173.9583" x="17641.6667" y="991.1447">AllKeysChan(ctx context.Context) (</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="25" x="17815.625" y="991.1447">chan</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="86.4583" x="17843.75" y="991.1447">go-cid.Cid, error)</text><!--MD5=[a4478be04cc4d86bf239597f8c7adf47]
class store.dagStore--><rect codeLine="1803" fill="#2A9FD6" height="85.8331" id="store.dagStore" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="173.9583" x="17405.7292" y="808.3333"/><ellipse cx="17460.4167" cy="830.8333" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M17462.6139,827.0247 Q17462.9883,827.0247 17463.1022,827.2363 Q17463.2324,827.4479 17463.2324,827.8385 L17463.2324,828.9453 Q17463.2324,829.7753 17462.6139,829.7753 Q17462.5163,829.7753 17462.4349,829.7591 Q17462.3535,829.7428 17462.2884,829.7102 Q17462.2396,829.6777 17462.1908,829.6289 Q17462.1419,829.5638 17462.1094,829.5312 Q17462.0931,829.4986 17462.0605,829.4173 Q17462.0443,829.3359 17462.028,829.3196 Q17462.028,829.2871 17462.0117,829.2057 Q17461.9954,829.1243 17461.9954,829.108 Q17461.9141,828.7337 17461.5072,828.5058 Q17461.1003,828.2617 17460.5143,828.2617 Q17459.9284,828.2617 17459.5052,828.5384 Q17459.0983,828.8151 17459.0983,829.222 Q17459.0983,829.6451 17459.5052,829.873 Q17459.9284,830.1009 17460.4655,830.1822 Q17461.0189,830.2473 17461.6862,830.4264 Q17462.3698,830.6054 17462.7604,830.9147 Q17463.4928,831.5006 17463.4928,832.4772 Q17463.4928,833.4537 17462.6953,834.0559 Q17461.9141,834.6582 17460.6283,834.6582 Q17459.6029,834.6582 17458.6914,834.1699 Q17458.431,834.4628 17458.1868,834.4628 Q17457.5521,834.4628 17457.5521,833.649 L17457.5521,832.819 Q17457.5521,832.4121 17457.6823,832.2005 Q17457.8288,831.9889 17458.1706,831.9889 Q17458.2845,831.9889 17458.3659,832.0214 Q17458.4635,832.0377 17458.5286,832.0865 Q17458.5938,832.1354 17458.6426,832.1842 Q17458.6914,832.233 17458.7077,832.3144 Q17458.7402,832.3795 17458.7565,832.4283 Q17458.7728,832.4609 17458.7891,832.526 Q17458.8053,832.5748 17458.8053,832.5911 Q17458.903,832.9329 17459.4076,833.177 Q17459.9284,833.4049 17460.5469,833.4049 Q17461.2467,833.4049 17461.7188,833.1282 Q17462.1908,832.8515 17462.1908,832.4609 Q17462.1908,832.0865 17461.8164,831.8587 Q17461.4583,831.6308 17460.9701,831.5657 Q17460.498,831.4843 17459.847,831.3378 Q17459.2122,831.1751 17458.8216,830.9635 Q17458.3496,830.6868 17458.0729,830.2311 Q17457.7962,829.7591 17457.7962,829.222 Q17457.7962,828.2779 17458.5612,827.6595 Q17459.3424,827.0247 17460.5143,827.0247 Q17461.4746,827.0247 17462.1257,827.4316 Q17462.2396,827.1874 17462.3372,827.1061 Q17462.4349,827.0247 17462.6139,827.0247 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="45.8333" x="17485.4167" y="840.6249">dagStore</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17406.7708" x2="17578.6458" y1="853.3332" y2="853.3332"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="17414.0625" y="861.6666"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="137.5" x="17430.7292" y="874.1665">store core.DSReaderWriter</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17406.7708" x2="17578.6458" y1="885.8331" y2="885.8331"/><!--MD5=[392f73741e137234a1c43f9dd5d50358]
class go-ipfs-blockstore.Blockstore--><rect fill="#2A9FD6" height="51.2499" id="go-ipfs-blockstore.Blockstore" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="94.7917" x="17445.3125" y="196.875"/><ellipse cx="17459.8958" cy="214.1666" fill="#777777" rx="10.4167" ry="10.4167" style="stroke:#444444;stroke-width:1.0416666666666667;"/><path d="M17460.3678,216.7382 Q17460.9701,216.7382 17461.377,216.5917 Q17461.8001,216.4453 17461.9629,216.2825 Q17462.1419,216.1197 17462.321,215.9733 Q17462.5163,215.8268 17462.679,215.8268 Q17462.9232,215.8268 17463.1022,216.0221 Q17463.2975,216.2011 17463.2975,216.4453 Q17463.2975,216.9824 17462.4349,217.4869 Q17461.5885,217.9915 17460.3353,217.9915 Q17458.7565,217.9915 17457.6986,217.0638 Q17456.6569,216.1197 17456.6569,214.7037 L17456.6569,213.8736 Q17456.6569,212.3763 17457.6335,211.3671 Q17458.61,210.358 17460.0586,210.358 Q17460.9375,210.358 17461.8327,210.7812 L17461.9629,210.83 Q17462.1745,210.5208 17462.4837,210.5208 Q17462.8581,210.5208 17462.9883,210.7324 Q17463.1185,210.944 17463.1185,211.3509 L17463.1185,212.3925 Q17463.1185,213.2226 17462.4837,213.2226 Q17462.2559,213.2226 17462.1094,213.1087 Q17461.9792,212.9785 17461.9466,212.8808 Q17461.9141,212.7669 17461.8815,212.5553 Q17461.8001,212.1809 17461.4095,211.9531 Q17461.0352,211.7252 17460.7096,211.6601 Q17460.3841,211.595 17460.1074,211.595 Q17459.1634,211.595 17458.5286,212.246 Q17457.9102,212.8808 17457.9102,213.8736 L17457.9102,214.6712 Q17457.9102,215.6152 17458.5775,216.1848 Q17459.2448,216.7382 17460.3678,216.7382 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="17478.6458" y="218.7499">Blockstore</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17446.3542" x2="17539.0625" y1="231.4582" y2="231.4582"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="17446.3542" x2="17539.0625" y1="239.7916" y2="239.7916"/><!--MD5=[7bbf614274d0f32b2ed5683d199c5f40]
class tests_test.QueryTestCase--><rect codeLine="1812" fill="#2A9FD6" height="182.4994" id="tests_test.QueryTestCase" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="189.5833" x="18653.125" y="131.25"/><ellipse cx="18698.9583" cy="153.7499" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M18701.1556,149.9414 Q18701.5299,149.9414 18701.6439,150.1529 Q18701.7741,150.3645 18701.7741,150.7552 L18701.7741,151.8619 Q18701.7741,152.692 18701.1556,152.692 Q18701.0579,152.692 18700.9766,152.6757 Q18700.8952,152.6595 18700.8301,152.6269 Q18700.7813,152.5943 18700.7324,152.5455 Q18700.6836,152.4804 18700.651,152.4479 Q18700.6348,152.4153 18700.6022,152.3339 Q18700.5859,152.2526 18700.5697,152.2363 Q18700.5697,152.2037 18700.5534,152.1223 Q18700.5371,152.041 18700.5371,152.0247 Q18700.4557,151.6503 18700.0488,151.4225 Q18699.6419,151.1783 18699.056,151.1783 Q18698.4701,151.1783 18698.0469,151.455 Q18697.64,151.7317 18697.64,152.1386 Q18697.64,152.5618 18698.0469,152.7897 Q18698.4701,153.0175 18699.0072,153.0989 Q18699.5605,153.164 18700.2279,153.343 Q18700.9115,153.5221 18701.3021,153.8313 Q18702.0345,154.4173 18702.0345,155.3938 Q18702.0345,156.3704 18701.237,156.9726 Q18700.4557,157.5748 18699.1699,157.5748 Q18698.1445,157.5748 18697.2331,157.0865 Q18696.9727,157.3795 18696.7285,157.3795 Q18696.0938,157.3795 18696.0938,156.5657 L18696.0938,155.7356 Q18696.0938,155.3287 18696.224,155.1171 Q18696.3704,154.9055 18696.7122,154.9055 Q18696.8262,154.9055 18696.9076,154.9381 Q18697.0052,154.9544 18697.0703,155.0032 Q18697.1354,155.052 18697.1842,155.1009 Q18697.2331,155.1497 18697.2493,155.2311 Q18697.2819,155.2962 18697.2982,155.345 Q18697.3145,155.3776 18697.3307,155.4427 Q18697.347,155.4915 18697.347,155.5078 Q18697.4447,155.8496 18697.9492,156.0937 Q18698.4701,156.3216 18699.0885,156.3216 Q18699.7884,156.3216 18700.2604,156.0449 Q18700.7324,155.7682 18700.7324,155.3776 Q18700.7324,155.0032 18700.3581,154.7753 Q18700,154.5475 18699.5117,154.4824 Q18699.0397,154.401 18698.3887,154.2545 Q18697.7539,154.0917 18697.3633,153.8802 Q18696.8913,153.6035 18696.6146,153.1477 Q18696.3379,152.6757 18696.3379,152.1386 Q18696.3379,151.1946 18697.1029,150.5761 Q18697.8841,149.9414 18699.056,149.9414 Q18700.0163,149.9414 18700.6673,150.3483 Q18700.7813,150.1041 18700.8789,150.0227 Q18700.9766,149.9414 18701.1556,149.9414 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="79.1667" x="18723.9583" y="163.5416">QueryTestCase</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18654.1667" x2="18841.6667" y1="176.2499" y2="176.2499"/><ellipse cx="18664.5833" cy="187.7082" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="86.4583" x="18678.125" y="197.0831">Description string</text><ellipse cx="18664.5833" cy="211.8748" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="18678.125" y="221.2497">Query string</text><ellipse cx="18664.5833" cy="236.0414" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="26.0417" x="18678.125" y="245.4163">Docs</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="18707.2917" y="245.4163">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="18729.1667" y="245.4163">[int][]string</text><ellipse cx="18664.5833" cy="260.2079" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="41.6667" x="18678.125" y="269.5828">Updates</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="18722.9167" y="269.5828">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="18744.7917" y="269.5828">[int][]string</text><ellipse cx="18664.5833" cy="284.3745" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;fill:none;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="45.8333" x="18678.125" y="293.7494">Results []</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="21.875" x="18723.9583" y="293.7494">map</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="18745.8333" y="293.7494">[string]</text><text fill="#0000FF" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="43.75" x="18779.1667" y="293.7494">interface</text><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="8.3333" x="18822.9167" y="293.7494">{}</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="18654.1667" x2="18841.6667" y1="305.4161" y2="305.4161"/><!--MD5=[efc3379a498b870f7ea691a2809d039c]
class utils.ProxyStore--><rect codeLine="1824" fill="#2A9FD6" height="303.3322" id="utils.ProxyStore" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="360.4167" x="19407.2917" y="70.8333"/><ellipse cx="19550.5208" cy="93.3333" fill="#7FFFD4" rx="10.4167" ry="10.4167" style="stroke:#55B2DE;stroke-width:1.0416666666666667;"/><path d="M19552.7181,89.5247 Q19553.0924,89.5247 19553.2064,89.7363 Q19553.3366,89.9479 19553.3366,90.3385 L19553.3366,91.4453 Q19553.3366,92.2753 19552.7181,92.2753 Q19552.6204,92.2753 19552.5391,92.2591 Q19552.4577,92.2428 19552.3926,92.2102 Q19552.3438,92.1777 19552.2949,92.1289 Q19552.2461,92.0638 19552.2135,92.0312 Q19552.1973,91.9986 19552.1647,91.9173 Q19552.1484,91.8359 19552.1322,91.8196 Q19552.1322,91.7871 19552.1159,91.7057 Q19552.0996,91.6243 19552.0996,91.608 Q19552.0182,91.2337 19551.6113,91.0058 Q19551.2044,90.7617 19550.6185,90.7617 Q19550.0326,90.7617 19549.6094,91.0384 Q19549.2025,91.3151 19549.2025,91.722 Q19549.2025,92.1451 19549.6094,92.373 Q19550.0326,92.6009 19550.5697,92.6822 Q19551.123,92.7473 19551.7904,92.9264 Q19552.474,93.1054 19552.8646,93.4147 Q19553.597,94.0006 19553.597,94.9772 Q19553.597,95.9537 19552.7995,96.5559 Q19552.0182,97.1582 19550.7324,97.1582 Q19549.707,97.1582 19548.7956,96.6699 Q19548.5352,96.9628 19548.291,96.9628 Q19547.6563,96.9628 19547.6563,96.149 L19547.6563,95.319 Q19547.6563,94.9121 19547.7865,94.7005 Q19547.9329,94.4889 19548.2747,94.4889 Q19548.3887,94.4889 19548.4701,94.5214 Q19548.5677,94.5377 19548.6328,94.5865 Q19548.6979,94.6354 19548.7467,94.6842 Q19548.7956,94.733 19548.8118,94.8144 Q19548.8444,94.8795 19548.8607,94.9283 Q19548.877,94.9609 19548.8932,95.026 Q19548.9095,95.0748 19548.9095,95.0911 Q19549.0072,95.4329 19549.5117,95.677 Q19550.0326,95.9049 19550.651,95.9049 Q19551.3509,95.9049 19551.8229,95.6282 Q19552.2949,95.3515 19552.2949,94.9609 Q19552.2949,94.5865 19551.9206,94.3587 Q19551.5625,94.1308 19551.0742,94.0657 Q19550.6022,93.9843 19549.9512,93.8378 Q19549.3164,93.6751 19548.9258,93.4635 Q19548.4538,93.1868 19548.1771,92.7311 Q19547.9004,92.2591 19547.9004,91.722 Q19547.9004,90.7779 19548.6654,90.1595 Q19549.4466,89.5247 19550.6185,89.5247 Q19551.5788,89.5247 19552.2298,89.9316 Q19552.3438,89.6874 19552.4414,89.6061 Q19552.5391,89.5247 19552.7181,89.5247 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="19575.5208" y="103.1249">ProxyStore</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="19408.3333" x2="19766.6667" y1="115.8332" y2="115.8332"/><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="19415.625" y="124.1666"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="19432.2917" y="136.6665">frontend go-datastore.Datastore</text><rect fill="none" height="6.25" style="stroke:#C82930;stroke-width:1.0416666666666667;" width="6.25" x="19415.625" y="148.3331"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="173.9583" x="19432.2917" y="160.833">backends []go-datastore.Datastore</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="19408.3333" x2="19766.6667" y1="172.4997" y2="172.4997"/><ellipse cx="19418.75" cy="183.958" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="287.5" x="19432.2917" y="193.3329">Get(ctx context.Context, key datastore.Key) ([]byte, error)</text><ellipse cx="19418.75" cy="208.1246" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="283.3333" x="19432.2917" y="217.4995">Has(ctx context.Context, key datastore.Key) (bool, error)</text><ellipse cx="19418.75" cy="232.2912" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="292.7083" x="19432.2917" y="241.6661">GetSize(ctx context.Context, key datastore.Key) (int, error)</text><ellipse cx="19418.75" cy="256.4577" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="323.9583" x="19432.2917" y="265.8326">Query(ctx context.Context, q query.Query) (query.Results, error)</text><ellipse cx="19418.75" cy="280.6243" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="307.2917" x="19432.2917" y="289.9992">Put(ctx context.Context, key datastore.Key, value []byte) error</text><ellipse cx="19418.75" cy="304.7908" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="260.4167" x="19432.2917" y="314.1658">Delete(ctx context.Context, key datastore.Key) error</text><ellipse cx="19418.75" cy="328.9574" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="262.5" x="19432.2917" y="338.3323">Sync(ctx context.Context, prefix datastore.Key) error</text><ellipse cx="19418.75" cy="353.124" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="19432.2917" y="362.4989">Close() error</text><!--MD5=[efcc96742e82f72507832cc2bfe58ec8]
class __builtin__.byte--><rect fill="#2A9FD6" height="51.2499" id="__builtin__.byte" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="62.5" x="12188.5417" y="2354.6875"/><ellipse cx="12203.125" cy="2371.9791" fill="#777777" rx="10.4167" ry="10.4167" style="stroke:#444444;stroke-width:1.0416666666666667;"/><path d="M12203.597,2374.5507 Q12204.1992,2374.5507 12204.6061,2374.4042 Q12205.0293,2374.2578 12205.1921,2374.095 Q12205.3711,2373.9322 12205.5501,2373.7858 Q12205.7454,2373.6393 12205.9082,2373.6393 Q12206.1523,2373.6393 12206.3314,2373.8346 Q12206.5267,2374.0136 12206.5267,2374.2578 Q12206.5267,2374.7949 12205.6641,2375.2994 Q12204.8177,2375.804 12203.5645,2375.804 Q12201.9857,2375.804 12200.9277,2374.8763 Q12199.8861,2373.9322 12199.8861,2372.5162 L12199.8861,2371.6861 Q12199.8861,2370.1888 12200.8626,2369.1796 Q12201.8392,2368.1705 12203.2878,2368.1705 Q12204.1667,2368.1705 12205.0618,2368.5937 L12205.1921,2368.6425 Q12205.4036,2368.3333 12205.7129,2368.3333 Q12206.0872,2368.3333 12206.2174,2368.5449 Q12206.3477,2368.7565 12206.3477,2369.1634 L12206.3477,2370.205 Q12206.3477,2371.0351 12205.7129,2371.0351 Q12205.485,2371.0351 12205.3385,2370.9212 Q12205.2083,2370.791 12205.1758,2370.6933 Q12205.1432,2370.5794 12205.1107,2370.3678 Q12205.0293,2369.9934 12204.6387,2369.7656 Q12204.2643,2369.5377 12203.9388,2369.4726 Q12203.6133,2369.4075 12203.3366,2369.4075 Q12202.3926,2369.4075 12201.7578,2370.0585 Q12201.1393,2370.6933 12201.1393,2371.6861 L12201.1393,2372.4837 Q12201.1393,2373.4277 12201.8066,2373.9973 Q12202.474,2374.5507 12203.597,2374.5507 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="20.8333" x="12221.875" y="2376.5624">byte</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="12189.5833" x2="12250" y1="2389.2707" y2="2389.2707"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="12189.5833" x2="12250" y1="2397.6041" y2="2397.6041"/><!--MD5=[2236f6c5d9deadb4f6bceeb4cf3ac6c7]
class __builtin__.int--><rect fill="#2A9FD6" height="51.2499" id="__builtin__.int" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="53.125" x="11993.2292" y="2354.6875"/><ellipse cx="12007.8125" cy="2371.9791" fill="#777777" rx="10.4167" ry="10.4167" style="stroke:#444444;stroke-width:1.0416666666666667;"/><path d="M12008.2845,2374.5507 Q12008.8867,2374.5507 12009.2936,2374.4042 Q12009.7168,2374.2578 12009.8796,2374.095 Q12010.0586,2373.9322 12010.2376,2373.7858 Q12010.4329,2373.6393 12010.5957,2373.6393 Q12010.8398,2373.6393 12011.0189,2373.8346 Q12011.2142,2374.0136 12011.2142,2374.2578 Q12011.2142,2374.7949 12010.3516,2375.2994 Q12009.5052,2375.804 12008.252,2375.804 Q12006.6732,2375.804 12005.6152,2374.8763 Q12004.5736,2373.9322 12004.5736,2372.5162 L12004.5736,2371.6861 Q12004.5736,2370.1888 12005.5501,2369.1796 Q12006.5267,2368.1705 12007.9753,2368.1705 Q12008.8542,2368.1705 12009.7493,2368.5937 L12009.8796,2368.6425 Q12010.0911,2368.3333 12010.4004,2368.3333 Q12010.7747,2368.3333 12010.9049,2368.5449 Q12011.0352,2368.7565 12011.0352,2369.1634 L12011.0352,2370.205 Q12011.0352,2371.0351 12010.4004,2371.0351 Q12010.1725,2371.0351 12010.026,2370.9212 Q12009.8958,2370.791 12009.8633,2370.6933 Q12009.8307,2370.5794 12009.7982,2370.3678 Q12009.7168,2369.9934 12009.3262,2369.7656 Q12008.9518,2369.5377 12008.6263,2369.4726 Q12008.3008,2369.4075 12008.0241,2369.4075 Q12007.0801,2369.4075 12006.4453,2370.0585 Q12005.8268,2370.6933 12005.8268,2371.6861 L12005.8268,2372.4837 Q12005.8268,2373.4277 12006.4941,2373.9973 Q12007.1615,2374.5507 12008.2845,2374.5507 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="11.4583" x="12026.5625" y="2376.5624">int</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11994.2708" x2="12045.3125" y1="2389.2707" y2="2389.2707"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="11994.2708" x2="12045.3125" y1="2397.6041" y2="2397.6041"/><!--MD5=[aaadaf5c3ad6e0e0dd8a1e035309d301]
class __builtin__.string--><rect fill="#2A9FD6" height="51.2499" id="__builtin__.string" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="68.75" x="12083.3333" y="2354.6875"/><ellipse cx="12097.9167" cy="2371.9791" fill="#777777" rx="10.4167" ry="10.4167" style="stroke:#444444;stroke-width:1.0416666666666667;"/><path d="M12098.3887,2374.5507 Q12098.9909,2374.5507 12099.3978,2374.4042 Q12099.821,2374.2578 12099.9837,2374.095 Q12100.1628,2373.9322 12100.3418,2373.7858 Q12100.5371,2373.6393 12100.6999,2373.6393 Q12100.944,2373.6393 12101.123,2373.8346 Q12101.3184,2374.0136 12101.3184,2374.2578 Q12101.3184,2374.7949 12100.4557,2375.2994 Q12099.6094,2375.804 12098.3561,2375.804 Q12096.7773,2375.804 12095.7194,2374.8763 Q12094.6777,2373.9322 12094.6777,2372.5162 L12094.6777,2371.6861 Q12094.6777,2370.1888 12095.6543,2369.1796 Q12096.6309,2368.1705 12098.0794,2368.1705 Q12098.9583,2368.1705 12099.8535,2368.5937 L12099.9837,2368.6425 Q12100.1953,2368.3333 12100.5046,2368.3333 Q12100.8789,2368.3333 12101.0091,2368.5449 Q12101.1393,2368.7565 12101.1393,2369.1634 L12101.1393,2370.205 Q12101.1393,2371.0351 12100.5046,2371.0351 Q12100.2767,2371.0351 12100.1302,2370.9212 Q12100,2370.791 12099.9674,2370.6933 Q12099.9349,2370.5794 12099.9023,2370.3678 Q12099.821,2369.9934 12099.4303,2369.7656 Q12099.056,2369.5377 12098.7305,2369.4726 Q12098.4049,2369.4075 12098.1283,2369.4075 Q12097.1842,2369.4075 12096.5495,2370.0585 Q12095.931,2370.6933 12095.931,2371.6861 L12095.931,2372.4837 Q12095.931,2373.4277 12096.5983,2373.9973 Q12097.2656,2374.5507 12098.3887,2374.5507 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="27.0833" x="12116.6667" y="2376.5624">string</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="12084.375" x2="12151.0417" y1="2389.2707" y2="2389.2707"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="12084.375" x2="12151.0417" y1="2397.6041" y2="2397.6041"/><!--MD5=[f4b0a476a318806863263f0fa6013cbe]
class __builtin__.uint32--><rect fill="#2A9FD6" height="51.2499" id="__builtin__.uint32" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="71.875" x="12288.0208" y="2354.6875"/><ellipse cx="12302.6042" cy="2371.9791" fill="#777777" rx="10.4167" ry="10.4167" style="stroke:#444444;stroke-width:1.0416666666666667;"/><path d="M12303.0762,2374.5507 Q12303.6784,2374.5507 12304.0853,2374.4042 Q12304.5085,2374.2578 12304.6712,2374.095 Q12304.8503,2373.9322 12305.0293,2373.7858 Q12305.2246,2373.6393 12305.3874,2373.6393 Q12305.6315,2373.6393 12305.8105,2373.8346 Q12306.0059,2374.0136 12306.0059,2374.2578 Q12306.0059,2374.7949 12305.1432,2375.2994 Q12304.2969,2375.804 12303.0436,2375.804 Q12301.4648,2375.804 12300.4069,2374.8763 Q12299.3652,2373.9322 12299.3652,2372.5162 L12299.3652,2371.6861 Q12299.3652,2370.1888 12300.3418,2369.1796 Q12301.3184,2368.1705 12302.7669,2368.1705 Q12303.6458,2368.1705 12304.541,2368.5937 L12304.6712,2368.6425 Q12304.8828,2368.3333 12305.1921,2368.3333 Q12305.5664,2368.3333 12305.6966,2368.5449 Q12305.8268,2368.7565 12305.8268,2369.1634 L12305.8268,2370.205 Q12305.8268,2371.0351 12305.1921,2371.0351 Q12304.9642,2371.0351 12304.8177,2370.9212 Q12304.6875,2370.791 12304.6549,2370.6933 Q12304.6224,2370.5794 12304.5898,2370.3678 Q12304.5085,2369.9934 12304.1178,2369.7656 Q12303.7435,2369.5377 12303.418,2369.4726 Q12303.0924,2369.4075 12302.8158,2369.4075 Q12301.8717,2369.4075 12301.237,2370.0585 Q12300.6185,2370.6933 12300.6185,2371.6861 L12300.6185,2372.4837 Q12300.6185,2373.4277 12301.2858,2373.9973 Q12301.9531,2374.5507 12303.0762,2374.5507 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="30.2083" x="12321.3542" y="2376.5624">uint32</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="12289.0625" x2="12358.8542" y1="2389.2707" y2="2389.2707"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="12289.0625" x2="12358.8542" y1="2397.6041" y2="2397.6041"/><!--MD5=[c19428f004744b1d1b93edb75ef0309b]
class __builtin__.uint8--><rect fill="#2A9FD6" height="51.2499" id="__builtin__.uint8" rx="4.1667" ry="4.1667" style="stroke:#55B2DE;stroke-width:1.0416666666666667;" width="65.625" x="12396.3542" y="2354.6875"/><ellipse cx="12410.9375" cy="2371.9791" fill="#777777" rx="10.4167" ry="10.4167" style="stroke:#444444;stroke-width:1.0416666666666667;"/><path d="M12411.4095,2374.5507 Q12412.0117,2374.5507 12412.4186,2374.4042 Q12412.8418,2374.2578 12413.0046,2374.095 Q12413.1836,2373.9322 12413.3626,2373.7858 Q12413.5579,2373.6393 12413.7207,2373.6393 Q12413.9648,2373.6393 12414.1439,2373.8346 Q12414.3392,2374.0136 12414.3392,2374.2578 Q12414.3392,2374.7949 12413.4766,2375.2994 Q12412.6302,2375.804 12411.377,2375.804 Q12409.7982,2375.804 12408.7402,2374.8763 Q12407.6986,2373.9322 12407.6986,2372.5162 L12407.6986,2371.6861 Q12407.6986,2370.1888 12408.6751,2369.1796 Q12409.6517,2368.1705 12411.1003,2368.1705 Q12411.9792,2368.1705 12412.8743,2368.5937 L12413.0046,2368.6425 Q12413.2161,2368.3333 12413.5254,2368.3333 Q12413.8997,2368.3333 12414.0299,2368.5449 Q12414.1602,2368.7565 12414.1602,2369.1634 L12414.1602,2370.205 Q12414.1602,2371.0351 12413.5254,2371.0351 Q12413.2975,2371.0351 12413.151,2370.9212 Q12413.0208,2370.791 12412.9883,2370.6933 Q12412.9557,2370.5794 12412.9232,2370.3678 Q12412.8418,2369.9934 12412.4512,2369.7656 Q12412.0768,2369.5377 12411.7513,2369.4726 Q12411.4258,2369.4075 12411.1491,2369.4075 Q12410.2051,2369.4075 12409.5703,2370.0585 Q12408.9518,2370.6933 12408.9518,2371.6861 L12408.9518,2372.4837 Q12408.9518,2373.4277 12409.6191,2373.9973 Q12410.2865,2374.5507 12411.4095,2374.5507 Z " fill="#000000"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="11.4583" lengthAdjust="spacing" textLength="23.9583" x="12429.6875" y="2376.5624">uint8</text><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="12397.3958" x2="12460.9375" y1="2389.2707" y2="2389.2707"/><line style="stroke:#55B2DE;stroke-width:1.0416666666666667;" x1="12397.3958" x2="12460.9375" y1="2397.6041" y2="2397.6041"/><!--MD5=[22066fb0073b93a494529c6011b601b7]
reverse link v3.Options to badger.Options--><path codeLine="98" d="M14505.3229,256.4792 C14462.7708,289.7292 14400.9271,344.9167 14366.6667,407.2917 C14299.7813,529.0729 14278.5833,693.3646 14271.8646,783.6667 " fill="none" id="v3.Options-backto-badger.Options" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="14516.2396,248.0938,14508.7446,248.5928,14506.3226,255.7032,14513.8176,255.2041,14516.2396,248.0938" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[3f14b1f3cf0989eb4ddc5c48ef8d61d6]
reverse link zap.SugaredLogger to badger.compatLogger--><path codeLine="99" d="M14031.25,261.6458 C14031.25,365.2708 14031.25,652.6563 14031.25,783.5417 " fill="none" id="zap.SugaredLogger-backto-badger.compatLogger" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="14031.25,248,14027.0833,254.25,14031.25,260.5,14035.4167,254.25,14031.25,248" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[041214338969ad7d45f83ce3d0e65050]
reverse link go-ipld-format.NodeGetter to clock.crdtNodeGetter--><path codeLine="273" d="M17435.6875,3132.7917 C17453.125,3232.7188 17484.0417,3503.9792 17336.4583,3632.2917 C17247.4583,3709.6667 15330.2708,3671.8958 15214.5833,3694.7917 C15039.6146,3729.4167 14850.7188,3803.7396 14715.4583,3863.9896 " fill="none" id="go-ipld-format.NodeGetter-backto-clock.crdtNodeGetter" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="17433.2396,3119.3333,17430.2588,3126.2282,17435.4769,3131.6315,17438.4576,3124.7367,17433.2396,3119.3333" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[28e88366ee70ad56c21a73646d243288]
reverse link core.MerkleClock to clock.MerkleClock--><path codeLine="275" d="M11735.9063,3163.9063 C11771.4583,3283.4375 11862.5208,3526.1458 12038.5417,3632.2917 C12264.6354,3768.6354 12973.2292,3615.2917 13225,3694.7917 C13308.5938,3721.1875 13392.1979,3768.4792 13462.1979,3815.5208 " fill="none" id="core.MerkleClock-backto-clock.MerkleClock" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="11728.8646,3165.8021,11730.0938,3143.7604,11742.875,3161.7604,11728.8646,3165.8021" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[c4e7ee6848751acec8987b3aa9354405]
reverse link core.NodeGetter to clock.crdtNodeGetter--><path codeLine="276" d="M12711.8854,3132.8958 C13067.1771,3201.1979 13773.0208,3368.8021 14283.3333,3694.7917 C14353.25,3739.4583 14417.0417,3808.4271 14461.9688,3864.0208 " fill="none" id="core.NodeGetter-backto-clock.crdtNodeGetter" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="12710.4375,3140.0521,12691.3333,3128.9896,12713.1667,3125.7188,12710.4375,3140.0521" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[65b100a5a3f318fc6b7966ebd2c3df06]
reverse link core.NodeDeltaPair to clock.deltaEntry--><path codeLine="277" d="M12142.8646,3176.7708 C12132.8854,3297.5729 12135.0833,3521.0729 12267.7083,3632.2917 C12419.9792,3759.9896 13890.8021,3583.1458 14055.2083,3694.7917 C14107.5625,3730.3438 14135.9792,3795.7396 14151.2917,3851.9792 " fill="none" id="core.NodeDeltaPair-backto-clock.deltaEntry" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="12135.625,3175.8854,12144.8021,3155.8125,12150.1458,3177.2292,12135.625,3175.8854" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[2d17236199a25e04702e0474a8826d03]
reverse link v3.Options to cmd.BadgerOptions--><path codeLine="300" d="M14599.9063,255.3958 C14667.5729,297.625 14795.125,370.0312 14915.625,398.9583 C14935.6042,403.75 15271.0521,392.5938 15285.4167,407.2917 C15805.8542,939.5938 15811.1875,1555.2604 15285.4167,2082.2917 C15268.3021,2099.4479 11817.4583,2079.6875 11795.8333,2090.625 C11769.9375,2103.7188 11750.5625,2130.0625 11737.7188,2152.9896 " fill="none" id="v3.Options-backto-cmd.BadgerOptions" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="14588.3854,248.1354,14591.4531,254.992,14598.9622,254.7974,14595.8945,247.9408,14588.3854,248.1354" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[cf79dce8fbd30883d5dc6bab47cfd78b]
reverse link core.Delta to core.CompositeDelta--><path codeLine="411" d="M9849.2604,3181.5208 C9836.3229,3301.9375 9833.8646,3517.8542 9958.3333,3632.2917 C10069.0625,3734.0938 10503.9792,3616.3125 10632.2917,3694.7917 C10716.4583,3746.2708 10764.9271,3858.8021 10785.3438,3917.2604 " fill="none" id="core.Delta-backto-core.CompositeDelta" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="9850.7917,3168.0313,9845.9442,3173.7694,9849.3766,3180.4509,9854.224,3174.7128,9850.7917,3168.0313" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[5994ae177176924c6867c216e6deae14]
reverse link go-datastore.Key to core.Key--><path codeLine="412" d="M14725.7188,2383.8854 C14493.2708,2397.6563 13385.9583,2461.5729 12479.1667,2484.375 C12468.2188,2484.6458 10910.4167,2485.6042 10902.0833,2492.7083 C10746.7188,2625.0313 10768.9271,2899.4896 10789.1563,3026.0833 " fill="none" id="go-datastore.Key-backto-core.Key" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="14739.4583,2383.0729,14732.972,2379.2846,14726.9804,2383.815,14733.4667,2387.6033,14739.4583,2383.0729" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[004ada76d91aa679a46b1bb164b0ded6]
reverse link core.ReplicatedData to core.PersistedReplicatedData--><path codeLine="413" d="M10241.9792,3169.9896 C10246.8854,3288.25 10275,3516.1875 10413.5417,3632.2917 C10573.2188,3766.1146 10710.7188,3570.7708 10878.125,3694.7917 C10951.5521,3749.1875 10980.8229,3859.8958 10991.4375,3917.5 " fill="none" id="core.ReplicatedData-backto-core.PersistedReplicatedData" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="10241.4896,3156.125,10237.5451,3162.5176,10241.9289,3168.6173,10245.8733,3162.2247,10241.4896,3156.125" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[46587221be815a4eb5b41d4aaee587fd]
reverse link core.MultiStore to core.Txn--><path codeLine="414" d="M11003.3958,3169.3333 C10995.3438,3285.2188 10998.4688,3508.1042 11121.875,3632.2917 C11216.2813,3727.2917 11312.6875,3610.3854 11416.6667,3694.7917 C11486.9896,3751.875 11515.4167,3860.8958 11525.8438,3917.7083 " fill="none" id="core.MultiStore-backto-core.Txn" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="11004.4271,3155.75,10999.7988,3161.6663,11003.4799,3168.2141,11008.1082,3162.2978,11004.4271,3155.75" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[8c58eeeb453132c82f005526f569f08c]
reverse link core.Span to core.span--><path codeLine="415" d="M10585.8333,3193.8854 C10567.7396,3315.6458 10567.6354,3519.8542 10685.4167,3632.2917 C10855.0521,3794.2292 11025.4896,3549.2396 11209.375,3694.7917 C11253.5417,3729.75 11277.1354,3787.2604 11291.4479,3839.2604 " fill="none" id="core.Span-backto-core.span" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="10588,3180.1875,10582.9092,3185.7109,10586.0498,3192.5344,10591.1405,3187.011,10588,3180.1875" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[8c58eeeb453132c82f005526f569f08c]
reverse link core.Span to core.span--><path codeLine="417" d="M10610.8125,3201.0208 C10604.2396,3323.4792 10606.3646,3522.0208 10721.875,3632.2917 C10891.5104,3794.2292 11061.9479,3549.2396 11245.8333,3694.7917 C11290,3729.75 11313.5938,3787.2604 11324.3854,3839.2604 " fill="none" id="core.Span-backto-core.span-1" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="10603.5313,3200.5521,10612.0417,3180.1875,10618.0938,3201.4167,10603.5313,3200.5521" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[8773e27d5730ef3a3f58d6d0f35affa3]
reverse link crdt.baseCRDT to crdt.LWWRegister--><path codeLine="537" d="M9517.5833,5304.6146 C9515.9271,5494.8229 9543.3854,5805.5729 9718.75,5991.6667 C9802.2604,6080.2813 10128.3438,6151.7604 10331.5938,6188.875 " fill="none" id="crdt.baseCRDT-backto-crdt.LWWRegister" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="9517.7604,5290.8438,9513.5117,5297.0383,9517.5956,5303.3427,9521.8443,5297.1481,9517.7604,5290.8438" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[9490b52a14e050d314fd62045b0cdf57]
reverse link crdt.baseMerkleCRDT to crdt.MerkleCompositeDAG--><path codeLine="538" d="M9139.7292,5256.1875 C9138.0208,5476.7083 9134.3542,5950.8646 9132.8958,6138.1979 " fill="none" id="crdt.baseMerkleCRDT-backto-crdt.MerkleCompositeDAG" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="9139.8333,5242.3542,9135.6187,5248.5719,9139.7372,5254.8538,9143.9518,5248.636,9139.8333,5242.3542" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[01a7dfb36caa96f0a390a4850e7521bb]
reverse link crdt.baseMerkleCRDT to crdt.MerkleLWWRegister--><path codeLine="539" d="M9148.0729,5255.9688 C9163.125,5426.3229 9207.6354,5750.2708 9336.4583,5991.6667 C9365.9271,6046.8854 9412.4896,6098.5313 9454.4375,6138.3854 " fill="none" id="crdt.baseMerkleCRDT-backto-crdt.MerkleLWWRegister" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="9146.9167,5242.4688,9143.3015,5249.0531,9147.9889,5254.9227,9151.6041,5248.3383,9146.9167,5242.4688" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[b1eb5daa8f5aa77076b29a54ee419010]
reverse link core.ReplicatedData to crdt.CompositeDAG--><path codeLine="541" d="M10241.6667,3176.8125 C10241.6667,3506.9583 10241.6667,4736.375 10241.6667,5059.6979 " fill="none" id="core.ReplicatedData-backto-crdt.CompositeDAG" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="10234.375,3176.7708,10241.6667,3155.9375,10248.9583,3176.7708,10234.375,3176.7708" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[30208f9b3d80c63f483280ae7c0b632c]
reverse link core.CompositeDelta to crdt.CompositeDAGDelta--><path codeLine="542" d="M10796.7813,4013.9063 C10800.1146,4074.7604 10815.75,4168.2604 10877.0833,4215.625 C10893.5833,4228.375 11049.3646,4209.7083 11064.5833,4223.9583 C11279.6042,4425.3021 11237.1771,4811.1979 11196.6979,5011.0625 " fill="none" id="core.CompositeDelta-backto-crdt.CompositeDAGDelta" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="10789.4792,4013.8125,10796.0417,3992.7396,10804.0521,4013.3021,10789.4792,4013.8125" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[71d9a1ab2ef43822c00c7f49b2cff85e]
reverse link core.Delta to crdt.CompositeDAGDelta--><path codeLine="543" d="M9860.3854,3189.0521 C9861.9271,3301.8333 9877.7708,3492.8854 9958.3333,3632.2917 C10159.9063,3981.0729 10275.0104,4073.8333 10652.0833,4215.625 C10673.5417,4223.6875 11047.6667,4208.5 11064.5833,4223.9583 C11282.3229,4422.9479 11238.4063,4810.7917 11197.1042,5011.2604 " fill="none" id="core.Delta-backto-crdt.CompositeDAGDelta" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="9853.0938,3188.7917,9860.25,3167.9167,9867.6771,3188.6979,9853.0938,3188.7917" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[4a02ff532bb4a12692e035f2f3183cae]
reverse link core.MultiStore to crdt.Factory--><path codeLine="544" d="M11018.3542,3176.8958 C11023.4063,3292.8229 11014.8438,3504.5625 10902.0833,3632.2917 C10844.5313,3697.4896 10767.3958,3624.1563 10716.6667,3694.7917 C10470.6042,4037.4063 10561.1563,4553.3646 10652.0625,4866.625 " fill="none" id="core.MultiStore-backto-crdt.Factory" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="11011.0625,3177.2604,11017.25,3156.0729,11025.625,3176.4896,11011.0625,3177.2604" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[d5e76f5cd0630c4befb0b939d1af8934]
reverse link core.Delta to crdt.LWWRegDelta--><path codeLine="545" d="M9866.9167,3188.9375 C9882.8125,3527.8125 9937.0313,4683.9479 9953.5313,5035.6667 " fill="none" id="core.Delta-backto-crdt.LWWRegDelta" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="9859.6146,3188.9688,9865.9271,3167.8125,9874.1875,3188.2813,9859.6146,3188.9688" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[ae206bfc0b08d2753514cf503418b7db]
reverse link core.ReplicatedData to crdt.LWWRegister--><path codeLine="546" d="M10263.0625,3176.0417 C10327.5104,3413.75 10527.0729,4098.5104 10716.6667,4215.625 C10729.6667,4223.6563 11255.9479,4213.0729 11266.6667,4223.9583 C11817.9792,4783.6875 11737.6458,5362.8438 11266.6667,5991.6667 C11194.6979,6087.7604 10869.8333,6156.6771 10666.4583,6191.3021 " fill="none" id="core.ReplicatedData-backto-crdt.LWWRegister" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="10255.9792,3177.7813,10257.5938,3155.7708,10270.0521,3173.9896,10255.9792,3177.7813" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[bf38d33646f517796c20fec2cd7ec550]
reverse link core.ReplicatedData to crdt.baseMerkleCRDT--><path codeLine="547" d="M10230.5625,3176.5208 C10212.2813,3287.8125 10167.625,3489.5104 10069.7917,3632.2917 C9833.0833,3977.7604 9555.875,3867.2604 9336.4583,4223.9583 C9176.0625,4484.6979 9145.7188,4857.4479 9140.8542,5035.5938 " fill="none" id="core.ReplicatedData-backto-crdt.baseMerkleCRDT" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="10223.375,3175.2813,10233.8229,3155.8333,10237.7813,3177.5521,10223.375,3175.2813" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[a9140dade3fe1ad25bd2d57796640c46]
reverse link go-datastore.Txn to db.Txn--><path codeLine="708" d="M14864.4792,2419.5625 C14863.2604,2441.0625 14861.7292,2468.375 14860.4167,2492.7083 C14855.25,2588.4167 14840.1979,4149.4792 14770.8333,4215.625 C14752.0104,4233.5729 12917.5104,4206.8438 12897.9167,4223.9583 C12678.875,4415.2917 12706.0208,4794.7813 12740.375,4999.4583 " fill="none" id="go-datastore.Txn-backto-db.Txn" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="14865.25,2406.0417,14860.7394,2412.0482,14864.549,2418.522,14869.0596,2412.5155,14865.25,2406.0417" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[cc0f9557de3911c6c6c3a9a2a8d8f96d]
reverse link go-datastore.Batch to db.shimBatcherTxn--><path codeLine="709" d="M14974.2813,2419.7396 C15007.9375,2660.5208 15175.1667,3957.6771 14910.4167,4215.625 C14895.9688,4229.6979 13473.3438,4210.4896 13458.3333,4223.9583 C13201.0104,4454.9479 13304.4271,4948.9896 13342.4583,5095.9479 " fill="none" id="go-datastore.Batch-backto-db.shimBatcherTxn" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="14972.3438,2406.0208,14969.0902,2412.7912,14974.0884,2418.3985,14977.342,2411.6281,14972.3438,2406.0208" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[a43309665d201152bbb01bfa672de8ae]
reverse link go-datastore.Read to db.shimBatcherTxn--><path codeLine="710" d="M15076.6979,2419.5938 C15087.5,2671.9688 15141.8333,4088.6979 15006.25,4215.625 C14990.5521,4230.3229 13474.3333,4209.6042 13458.3333,4223.9583 C13200.9688,4454.9063 13304.4167,4948.9792 13342.4583,5095.9479 " fill="none" id="go-datastore.Read-backto-db.shimBatcherTxn" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="15076.1146,2405.9167,15072.2197,2412.3395,15076.6504,2418.4052,15080.5453,2411.9823,15076.1146,2405.9167" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[e954e18395989898b1a0ee50993d322d]
reverse link go-datastore.Txn to db.shimTxnStore--><path codeLine="711" d="M14867.5313,2419.4583 C14873.1875,2676.8958 14902.5833,4150.2292 14836.4583,4215.625 C14820.8021,4231.1042 13267.9896,4209.9063 13251.0417,4223.9583 C12988.3542,4441.8021 13038.5,4922.0208 13064.1563,5083.6875 " fill="none" id="go-datastore.Txn-backto-db.shimTxnStore" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="14867.2292,2405.8542,14863.2008,2412.1942,14867.5038,2418.3511,14871.5322,2412.0111,14867.2292,2405.8542" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[75cfbfdf2a69a4d73e7716917b4a7ade]
reverse link client.Collection to db.Collection--><path codeLine="713" d="M15617.1771,3417.1875 C15480.4688,3731.3646 15280.3958,4168.5729 15206.25,4215.625 C15179.9063,4232.3438 14670.6667,4206.5313 14644.7917,4223.9583 C14617.2813,4242.4896 14591.7292,4263.3958 14567.9896,4286.2292 " fill="none" id="client.Collection-backto-db.Collection" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="15610.6875,3413.8229,15625.6771,3397.6146,15624.0625,3419.6354,15610.6875,3413.8229" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[758dbfa25267aea1d0223972b66ad2d3]
reverse link client.DB to db.DB--><path codeLine="714" d="M16234.0313,3224.0313 C16191.9271,3336.4479 16123.125,3501.3854 16039.5833,3632.2917 C15854.5729,3922.1667 15842.3646,4069.1042 15531.25,4215.625 C15499.4063,4230.625 15242.7813,4202.8958 15214.5833,4223.9583 C15072.8854,4329.8021 14997.6354,4504.6979 14958.0938,4673.3333 " fill="none" id="client.DB-backto-db.DB" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="16227.25,3221.3646,16241.3333,3204.3646,16240.9167,3226.4375,16227.25,3221.3646" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[4384c93c4588051779105b49ce3510ad]
reverse link client.Txn to db.Txn--><path codeLine="715" d="M15320.1458,3164.2917 C15252.2813,3389.3854 15028.1979,4091.0417 14836.4583,4215.625 C14813.8854,4230.2917 12918.1979,4206.25 12897.9167,4223.9583 C12678.8646,4415.2813 12706.0208,4794.7708 12740.375,4999.4479 " fill="none" id="client.Txn-backto-db.Txn" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="15313.25,3161.8958,15326.2188,3144.0313,15327.2188,3166.0833,15313.25,3161.8958" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[491a1b96ac22c432e108779af2ab64df]
reverse link core.MultiStore to db.Txn--><path codeLine="716" d="M11001.0104,3176.9375 C10990.875,3296.9583 10992.5417,3518.3333 11121.875,3632.2917 C11258.4375,3752.625 11784.5521,3597.75 11938.5417,3694.7917 C12424.5833,4001.0833 12656.8854,4701.2917 12736.5417,4999.4583 " fill="none" id="core.MultiStore-backto-db.Txn" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="10993.7604,3176.1563,11002.9792,3156.1042,11008.2813,3177.5313,10993.7604,3176.1563" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[c3c665dda33967daff317006aec6a7b9]
reverse link core.Txn to db.Txn--><path codeLine="717" d="M11547.8021,4013.0938 C11565.8229,4068.5417 11598.5313,4153.375 11645.8333,4215.625 C11944.0208,4608.0521 12441.1667,4938.4375 12660.3229,5073.1458 " fill="none" id="core.Txn-backto-db.Txn" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="11540.7917,4015.1042,11541.5104,3993.0417,11554.7083,4010.7396,11540.7917,4015.1042" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[bd0eff275aba54bc0429fd8252e6139b]
reverse link document.simpleValue to document.Int64Value--><path codeLine="845" d="M17409.5938,6391.8125 C17414.7083,6397.0521 17420.1771,6401.8958 17426.0417,6406.25 C17526.9583,6481.1042 17612.6354,6359.9479 17706.25,6443.75 C17796.8333,6524.8333 17801.5833,6682.875 17798.125,6758.1667 " fill="none" id="document.simpleValue-backto-document.Int64Value" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="17400.2292,6381.2813,17401.2706,6388.7203,17408.538,6390.6201,17407.4965,6383.1811,17400.2292,6381.2813" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[cd361ff9169cf40ba72032947fd42180]
reverse link document.Value to document.ReadableValue--><path codeLine="846" d="M17273.7604,5263.1979 C17264,5434.25 17264.2708,5750.0521 17369.7917,5991.6667 C17384.625,6025.6354 17402.8021,6024.4896 17425,6054.1667 C17455.9271,6095.5208 17486.8333,6146.3646 17506.3958,6180.0521 " fill="none" id="document.Value-backto-document.ReadableValue" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="17274.5729,5249.6146,17270.0429,5255.6065,17273.8316,5262.0926,17278.3616,5256.1007,17274.5729,5249.6146" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[8546110294979681a466fdd44cf38ced]
reverse link document.simpleValue to document.StringValue--><path codeLine="847" d="M17370.3438,6395.1458 C17391.6979,6521.9271 17418.8646,6683.1979 17431.5,6758.1771 " fill="none" id="document.simpleValue-backto-document.StringValue" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="17368.0313,6381.4375,17364.9587,6388.2919,17370.104,6393.7644,17373.1766,6386.91,17368.0313,6381.4375" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[50b66dbb8c0bfed67998dcf7af4bcdd7]
reverse link document.Value to document.WriteableValue--><path codeLine="848" d="M17270.9167,5263.2292 C17244.3438,5506.25 17186.3646,6036.5104 17170.6563,6180.1563 " fill="none" id="document.Value-backto-document.WriteableValue" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="17272.3854,5249.75,17267.5638,5255.5098,17271.0261,5262.1759,17275.8477,5256.416,17272.3854,5249.75" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[0ef0f442dd3afb532c43faf2517a3bb3]
reverse link document.simpleValue to document.cborValue--><path codeLine="849" d="M17412.8542,6392.5521 C17417.0208,6397.375 17421.4167,6401.9583 17426.0417,6406.25 C17461.4792,6439.1146 17495.8542,6407.7708 17528.125,6443.75 C17608.6667,6533.5313 17618.5104,6685.2604 17618.1771,6758.2813 " fill="none" id="document.simpleValue-backto-document.cborValue" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="17404.0729,6381.6354,17404.748,6389.1166,17411.9134,6391.3708,17411.2383,6383.8896,17404.0729,6381.6354" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[60c0ae89cb92ba8588a004be471b8fdd]
reverse link document.WriteableValue to document.Document--><path codeLine="851" d="M17165.2188,6276.4896 C17164.1667,6318.3021 17162.6563,6378.6979 17161.0208,6443.7188 " fill="none" id="document.WriteableValue-backto-document.Document" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="17157.9271,6276.1979,17165.7396,6255.5521,17172.5104,6276.5625,17157.9271,6276.1979" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[a049c32ca867fce7bdffbb91335ea000]
reverse link document.WriteableValue to document.Int64Value--><path codeLine="852" d="M17177.9167,6275.7292 C17189.6667,6319.0729 17212.7188,6376.2083 17256.25,6406.25 C17338.8333,6463.25 17629.8333,6378.7083 17706.25,6443.75 C17799.0625,6522.75 17802.6146,6682.5417 17798.4792,6758.3229 " fill="none" id="document.WriteableValue-backto-document.Int64Value" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="17170.8125,6277.4167,17172.9479,6255.4479,17184.9792,6273.9479,17170.8125,6277.4167" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[198f3fdd5d57182f07c2690ea2cfa566]
reverse link document.WriteableValue to document.StringValue--><path codeLine="853" d="M17181.6354,6275.3854 C17195.1042,6316.5 17218.6563,6370.8958 17256.25,6406.25 C17288.625,6436.6979 17319.7708,6410.2292 17348.9583,6443.75 C17428.1042,6534.6563 17439.2188,6685.5104 17439.6146,6758.25 " fill="none" id="document.WriteableValue-backto-document.StringValue" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="17174.6042,6277.3229,17175.4896,6255.2708,17188.5521,6273.0625,17174.6042,6277.3229" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[16da9c95f0c82a8a4f53cedcff36f202]
reverse link document.WriteableValue to document.cborValue--><path codeLine="854" d="M17178.5521,6275.7708 C17190.6146,6318.6667 17213.7604,6375.2083 17256.25,6406.25 C17354.7292,6478.2188 17437.4063,6362.2188 17528.125,6443.75 C17618.5417,6525.0104 17623.375,6682.9688 17619.9688,6758.2083 " fill="none" id="document.WriteableValue-backto-document.cborValue" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="17171.4375,6277.3646,17173.3542,6255.375,17185.5625,6273.7604,17171.4375,6277.3646" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[52f81082024aac7befa907f8f12e8a24]
reverse link document.Field to document.simpleField--><path codeLine="855" d="M17452.8958,5234.1979 C17438.7604,5398.1979 17428.9063,5742.6667 17558.3333,5991.6667 C17577.6979,6028.9167 17602.5833,6021.6667 17629.1667,6054.1667 C17638.2396,6065.2604 17646.9583,6077.3438 17655.1875,6089.7396 " fill="none" id="document.Field-backto-document.simpleField" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="17445.6563,5233.3021,17454.8229,5213.2188,17460.1771,5234.6354,17445.6563,5233.3021" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[019fd492829a0de68ab15347e415ab1c]
reverse link document.Value to document.simpleValue--><path codeLine="856" d="M17291.2083,5270.8438 C17301.4896,5467.6042 17320.9271,5839.5938 17332.1146,6053.7396 " fill="none" id="document.Value-backto-document.simpleValue" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="17283.9063,5270.9375,17290.1042,5249.75,17298.4688,5270.1771,17283.9063,5270.9375" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[9f4eb6af756f56b1a44fac443cde10f0]
reverse link go-datastore.Key to key.DocKey--><path codeLine="948" d="M14777.1563,2419.0833 C14783.8229,2442.2292 14796.1979,2470.0521 14818.75,2484.375 C14843.5313,2500.1146 16908.3229,2475.7604 16932.2917,2492.7083 C17071.4896,2591.1667 17120.8646,2788.5521 17138.1042,2930.0625 " fill="none" id="go-datastore.Key-backto-key.DocKey" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="14773.7813,2405.7917,14771.2813,2412.875,14776.8582,2417.9071,14779.3582,2410.8237,14773.7813,2405.7917" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[f42beb8d04b5ee92cd83c43f2370cf18]
reverse link context.Context to parser.EvalContext--><path codeLine="1097" d="M5067.4479,2382.4063 C5373.7188,2389.2188 6883.6563,2426.0833 6954.1667,2492.7083 C7117.6354,2647.1667 7055.4375,2964.0208 7030.9688,3062.6979 " fill="none" id="context.Context-backto-parser.EvalContext" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="5053.7813,2382.1042,5059.9382,2386.4072,5066.2782,2382.3788,5060.1213,2378.0758,5053.7813,2382.1042" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[ff5145234bb4b0549664433f567ad368]
reverse link parser.Statement to parser.Selection--><path codeLine="1098" d="M7694.9167,3145 C7692.2813,3290.1042 7684.6354,3710.4792 7681.5417,3881.0104 " fill="none" id="parser.Statement-backto-parser.Selection" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="7695.1667,3131.4479,7690.884,3137.619,7694.9332,3143.9457,7699.2159,3137.7747,7695.1667,3131.4479" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[27022fa453884dce276abddda833e730]
reverse link parser.Selection to parser.CommitSelect--><path codeLine="1100" d="M7620.1979,4047.0938 C7590.0521,4097.1979 7555.8854,4161.7292 7536.4583,4223.9583 C7465.1354,4452.4375 7441.9792,4726.6875 7435.0417,4914.8021 " fill="none" id="parser.Selection-backto-parser.CommitSelect" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="7613.9896,4043.2708,7631.0938,4029.3125,7626.4271,4050.8854,7613.9896,4043.2708" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[1ddd76d5cfc20af27af4ed0e9568c2e0]
reverse link parser.Statement to parser.CommitSelect--><path codeLine="1101" d="M7695.4792,3152.6771 C7692.6875,3254.8542 7676.8958,3471.6042 7596.875,3632.2917 C7580.0833,3666.0208 7554.5208,3660.1979 7539.5833,3694.7917 C7539.2083,3695.6563 7479.3958,4510.2083 7449.6875,4915.0521 " fill="none" id="parser.Statement-backto-parser.CommitSelect" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="7688.1979,3152.2083,7695.9167,3131.5313,7702.7813,3152.5104,7688.1979,3152.2083" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[0e7a4423b83aeb73dcf49eeda8590f75]
reverse link parser.Selection to parser.Field--><path codeLine="1102" d="M7676.8958,4050.1875 C7669.5833,4257.5729 7652.0313,4755.4479 7643.4375,4999.0417 " fill="none" id="parser.Selection-backto-parser.Field" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="7669.6146,4049.8438,7677.6354,4029.2813,7684.1875,4050.3646,7669.6146,4049.8438" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[22e831045ee0b843a4960386a93aa61a]
reverse link parser.Statement to parser.Field--><path codeLine="1103" d="M7687.4167,3151.9792 C7672.4167,3250.6667 7638.6771,3459.0417 7596.875,3632.2917 C7590.0729,3660.4792 7582.3333,3666.0938 7578.125,3694.7917 C7508.4375,4169.6354 7576.6979,4741.0729 7615.6146,4999.3229 " fill="none" id="parser.Statement-backto-parser.Field" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="7680.2188,3150.7708,7690.5313,3131.25,7694.6458,3152.9375,7680.2188,3150.7708" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[43019155dff1ac7e561d5f25d21256ed]
reverse link parser.Selection to parser.Mutation--><path codeLine="1104" d="M7704.4271,4049.6979 C7716.9896,4100.8854 7731.7396,4165.5938 7741.6667,4223.9583 C7782.3854,4463.4271 7810.7604,4741.0729 7827.0833,4926.9479 " fill="none" id="parser.Selection-backto-parser.Mutation" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="7697.3229,4051.3438,7699.375,4029.3646,7711.4792,4047.8333,7697.3229,4051.3438" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[a997501a69c5fdb43b39c662dd4d1046]
reverse link parser.Statement to parser.Mutation--><path codeLine="1105" d="M7706.2188,3152.2188 C7725.0521,3258.7604 7764.5833,3494.4479 7783.3333,3694.7917 C7824.2188,4131.5938 7837.4375,4645.3542 7841.7083,4926.9271 " fill="none" id="parser.Statement-backto-parser.Mutation" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="7699.0104,3153.2917,7702.5313,3131.5,7713.3646,3150.7396,7699.0104,3153.2917" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[776c7d48a33639538a659350cb881dc4]
reverse link parser.Statement to parser.OperationDefinition--><path codeLine="1106" d="M7701.625,3152.3333 C7712.6979,3251.9583 7740.7396,3462.2292 7794.7917,3632.2917 C7822.2604,3718.6979 7867.4063,3812.1979 7900.8125,3876.0417 " fill="none" id="parser.Statement-backto-parser.OperationDefinition" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="7694.3542,3152.9063,7699.3646,3131.4167,7708.8542,3151.3438,7694.3542,3152.9063" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[db47010f68a61e8a7b97def8e73b1a7b]
reverse link parser.Statement to parser.Query--><path codeLine="1107" d="M7687.8542,3152.4063 C7676.2292,3261.6979 7668.1771,3500 7794.7917,3632.2917 C7880.5208,3721.8646 7971.0729,3615.8333 8066.6667,3694.7917 C8121.6979,3740.25 8151.1563,3817.4271 8166.3438,3875.8021 " fill="none" id="parser.Statement-backto-parser.Query" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="7680.6458,3151.2813,7690.3021,3131.4271,7695.1354,3152.9688,7680.6458,3151.2813" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[72a859b17c1f50286a1ec10f921bf87d]
reverse link parser.Selection to parser.Select--><path codeLine="1108" d="M7705.7708,4049.3542 C7726.9063,4107.4583 7763.1875,4178.1146 7821.875,4215.625 C7845.3333,4230.6146 7925.4479,4206.1771 7946.875,4223.9583 C8143.2917,4386.9375 8187.8438,4689.9479 8192.625,4902.2708 " fill="none" id="parser.Selection-backto-parser.Select" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="7698.7917,4051.4688,7698.9167,4029.3958,7712.5833,4046.7292,7698.7917,4051.4688" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[728d1b08dcab54c21aae69310c8a343f]
reverse link parser.Statement to parser.Select--><path codeLine="1109" d="M7686.8021,3152.4583 C7673.0625,3263.2917 7661.1354,3506.1979 7794.7917,3632.2917 C7958.3646,3786.6042 8148.0104,3526.25 8296.875,3694.7917 C8450.1667,3868.3438 8323.4479,4539.6771 8240.375,4902.3542 " fill="none" id="parser.Statement-backto-parser.Select" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="7679.6146,3151.1875,7689.6146,3131.5208,7694.0729,3153.1354,7679.6146,3151.1875" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[c59cf01d0dee9dcfb9ee3dfcb99ff127]
reverse link context.Context to planner.ExecutionContext--><path codeLine="1659" d="M5013.5417,2419.4271 C5013.5417,2545.9271 5013.5417,2949.7604 5013.5417,3062.9583 " fill="none" id="context.Context-backto-planner.ExecutionContext" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="5013.5417,2405.7396,5009.375,2411.9896,5013.5417,2418.2396,5017.7083,2411.9896,5013.5417,2405.7396" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[a921ece7e3d67d63a219e9b89168d962]
reverse link planner.planNode to planner.MultiNode--><path codeLine="1660" d="M3204.7917,3215 C3109.3958,3333.7813 2962.7813,3522.2396 2848.9583,3694.7917 C2808.7083,3755.8021 2767.9271,3828.2917 2739.4063,3881.1042 " fill="none" id="planner.planNode-backto-planner.MultiNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="3213.2813,3204.4375,3206.1159,3206.6917,3205.4408,3214.1729,3212.6061,3211.9187,3213.2813,3204.4375" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[0ab9222b9a178f915bc90dc87faa14e5]
reverse link context.Context to planner.PlanContext--><path codeLine="1661" d="M4980.1667,2416.3333 C4962.5833,2436.9479 4942.4063,2464.4479 4931.25,2492.7083 C4849.9271,2698.7813 4855.2917,2973.3229 4859.6563,3063.0104 " fill="none" id="context.Context-backto-planner.PlanContext" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="4989.3229,2405.9167,4982.0661,2407.8562,4981.0654,2415.3009,4988.3222,2413.3613,4989.3229,2405.9167" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[6cbbb53266c6c2b6d03bc15a66ea8618]
reverse link planner.planNode to planner.appendNode--><path codeLine="1662" d="M3317.6354,3218.2188 C3341.0208,3417.1354 3385.8542,3798.3958 3399.8646,3917.6146 " fill="none" id="planner.planNode-backto-planner.appendNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="3316.0208,3204.5,3312.6177,3211.1964,3317.4901,3216.9133,3320.8933,3210.2169,3316.0208,3204.5" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[034d278bea03b2ed4ec647307e10ec53]
reverse link planner.planNode to planner.mergeNode--><path codeLine="1663" d="M3195.3021,3106.8125 C2769.4375,3156.4063 1211.0104,3358.4583 868.75,3694.7917 C807.9479,3754.5417 798.9375,3861.4063 798.75,3917.5 " fill="none" id="planner.planNode-backto-planner.mergeNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="3208.7708,3105.25,3202.0856,3101.825,3196.3527,3106.6786,3203.038,3110.1037,3208.7708,3105.25" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[cd017172ee4360e91e8ffb9afd63b35a]
reverse link planner.scanNode to planner.multiScanNode--><path codeLine="1664" d="M990.625,5449.6563 C990.625,5662.3333 990.625,5933.5208 990.625,6089.8958 " fill="none" id="planner.scanNode-backto-planner.multiScanNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="990.625,5436.0625,986.4583,5442.3125,990.625,5448.5625,994.7917,5442.3125,990.625,5436.0625" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[8aa98f18d8ff434b35fd1de23fe8a926]
reverse link planner.valueIterator to planner.sortingStrategy--><path codeLine="1665" d="M449.4167,3168.7917 C382.8854,3340.3333 219.5521,3761.4271 163.8021,3905.1563 " fill="none" id="planner.valueIterator-backto-planner.sortingStrategy" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="454.4167,3155.9063,448.2715,3160.226,449.8954,3167.5599,456.0406,3163.2402,454.4167,3155.9063" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[170be69e42044e876270d82295651c88]
reverse link planner.sortingStrategy to planner.allSortStrategy--><path codeLine="1667" d="M166.8333,4025.5 C230.2292,4224.7604 413.3646,4800.2813 488.2917,5035.75 " fill="none" id="planner.sortingStrategy-backto-planner.allSortStrategy" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="159.8438,4027.5833,160.4688,4005.5208,173.7396,4023.1667,159.8438,4027.5833" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[5d94b41edf917a40e4da01c9c2439127]
reverse link planner.valueIterator to planner.allSortStrategy--><path codeLine="1668" d="M516.7604,3175.1771 C568.6771,3288.0938 658.3021,3501.5625 691.6667,3694.7917 C777.8958,4194.2292 623.6146,4798.4792 553.1771,5035.5521 " fill="none" id="planner.valueIterator-backto-planner.allSortStrategy" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="509.9896,3177.9167,507.8333,3155.9479,523.2188,3171.7708,509.9896,3177.9167" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[320a5ad74c038c3704720eeae28120f8]
reverse link planner.planNode to planner.baseNode--><path codeLine="1669" d="M3251.6458,3224.2813 C3186.8229,3387.3125 3076.2083,3665.5521 3011.8854,3827.3125 " fill="none" id="planner.planNode-backto-planner.baseNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="3245.0313,3221.1667,3259.5104,3204.5,3258.5833,3226.5625,3245.0313,3221.1667" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[0f493cd953a097fe23626598b180cddf]
reverse link planner.planNode to planner.commitSelectNode--><path codeLine="1670" d="M3287.9479,3225.2292 C3270.3021,3376.9063 3241.1563,3627.375 3222.0417,3791.5938 " fill="none" id="planner.planNode-backto-planner.commitSelectNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="3280.7083,3224.3542,3290.3542,3204.5,3295.1979,3226.0417,3280.7083,3224.3542" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[97dcdab4adc9a3299c7f5aab21806772]
reverse link planner.appendNode to planner.commitSelectTopNode--><path codeLine="1671" d="M3401.8958,4013.9896 C3403,4074.9063 3415.3958,4168.4583 3476.0417,4215.625 C3492.9896,4228.8125 3845.2917,4211.1146 3862.5,4223.9583 C4101.1875,4402.125 4149.2604,4777.125 4156.5417,4987.2292 " fill="none" id="planner.appendNode-backto-planner.commitSelectTopNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="3394.6042,4013.6042,3401.9375,3992.7917,3409.1875,4013.6354,3394.6042,4013.6042" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[6dc746d3522e43fee46a336b09ffe16e]
reverse link planner.planNode to planner.commitSelectTopNode--><path codeLine="1672" d="M3417.4271,3130.2708 C3763.9063,3238.9063 4784.1771,3567.3542 4871.875,3694.7917 C4937.4896,3790.1354 4909.4063,4106.1354 4871.875,4215.625 C4747.1667,4579.3854 4413.9896,4910.3438 4249.6042,5057.5104 " fill="none" id="planner.planNode-backto-planner.commitSelectTopNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="3415.2396,3137.2188,3397.5313,3124.0417,3419.5938,3123.3021,3415.2396,3137.2188" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[21764d9c5eb2556dca0e6cde27359662]
reverse link planner.planNode to planner.createNode--><path codeLine="1673" d="M3346.2604,3224.6771 C3394.1771,3368.9375 3471.9271,3603.0521 3526.3958,3767.0521 " fill="none" id="planner.planNode-backto-planner.createNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="3339.2083,3226.5729,3339.5625,3204.5,3353.0521,3221.9792,3339.2083,3226.5729" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[e142dcaee48ec88f989bc1832e4baa8e]
reverse link planner.planNode to planner.dagScanNode--><path codeLine="1674" d="M3396.5,3221.2188 C3481.8333,3339.9167 3608.4583,3524.2708 3701.0417,3694.7917 C3707.4271,3706.5417 3713.7188,3718.7396 3719.8854,3731.1354 " fill="none" id="planner.planNode-backto-planner.dagScanNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="3390.4896,3225.3542,3384.2188,3204.1979,3402.3229,3216.8229,3390.4896,3225.3542" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[6f03f2d70787bfe7287bc348c9c92562]
reverse link planner.planNode to planner.deleteNode--><path codeLine="1675" d="M3414,3178.6563 C3549.625,3285.9167 3779.2396,3483.2708 3926.0417,3694.7917 C3936.5313,3709.9167 3946.375,3726.1667 3955.5104,3742.9063 " fill="none" id="planner.planNode-backto-planner.deleteNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="3409.4063,3184.3125,3397.5313,3165.7083,3418.4167,3172.8542,3409.4063,3184.3125" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[dc36cc76627f16b94ec9cb2fd41a38e2]
reverse link planner.planNode to planner.groupNode--><path codeLine="1676" d="M3416.0833,3150.3854 C3593,3242.2917 3937.2708,3441.1979 4151.0417,3694.7917 C4166.4792,3713.1042 4180.4896,3733.6771 4193.0625,3755 " fill="none" id="planner.planNode-backto-planner.groupNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="3412.6042,3156.8021,3397.4271,3140.7708,3419.2813,3143.8333,3412.6042,3156.8021" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[e66478ff65e868890261883dee3c2195]
reverse link planner.planNode to planner.headsetScanNode--><path codeLine="1677" d="M3417.4792,3129.4583 C3636.0521,3201.0938 4116.4792,3385.1458 4398.9583,3694.7917 C4412.2708,3709.3854 4424.1771,3725.8021 4434.8021,3743.1146 " fill="none" id="planner.planNode-backto-planner.headsetScanNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="3415.0417,3136.3333,3397.4688,3122.9792,3419.5417,3122.4688,3415.0417,3136.3333" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[85f5656ec66e7970cab348b4d4a14794]
reverse link planner.planNode to planner.limitNode--><path codeLine="1678" d="M3418.4167,3117.6771 C3669.7917,3173.1771 4272.7292,3337.4896 4623.9583,3694.7917 C4647.5313,3718.7708 4666.5417,3748.4896 4681.7396,3779.1563 " fill="none" id="planner.planNode-backto-planner.limitNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="3416.5208,3124.7292,3397.7083,3113.1771,3419.6146,3110.4792,3416.5208,3124.7292" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[f5396f1fe9efbf832a3882393822dae8]
reverse link planner.MultiNode to planner.parallelNode--><path codeLine="1679" d="M2694.4063,4050.2917 C2682.0938,4224.9271 2655.2708,4605.2917 2636.8542,4866.5417 " fill="none" id="planner.MultiNode-backto-planner.parallelNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="2687.1563,4049.5521,2695.8958,4029.2813,2701.6979,4050.5729,2687.1563,4049.5521" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[99f9dbf677cda0ebc89ef5d79ef63ae1]
reverse link planner.planNode to planner.parallelNode--><path codeLine="1680" d="M3189.6563,3145.0521 C3014.8333,3229.5729 2685.9271,3418.4688 2553.125,3694.7917 C2503.9063,3797.1875 2556.7083,4477.5938 2591.7813,4866.5313 " fill="none" id="planner.planNode-backto-planner.parallelNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="3186.6979,3138.375,3208.6458,3135.9896,3192.9792,3151.5417,3186.6979,3138.375" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[491a2408141b474b865838a06c454b7c]
reverse link planner.planNode to planner.pipeNode--><path codeLine="1681" d="M3417.2604,3134.7188 C3775.3854,3260.3333 4856.7083,3642.2396 4916.6667,3694.7917 C4950.3021,3724.2708 4977.0313,3764.0104 4997.6354,3803.5208 " fill="none" id="planner.planNode-backto-planner.pipeNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="3414.7292,3141.5625,3397.4792,3127.7917,3419.5521,3127.8021,3414.7292,3141.5625" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[3d019f6f6cdc71871ba770525b34dc3e]
reverse link planner.planNode to planner.renderNode--><path codeLine="1682" d="M3416.75,3145.6875 C3662.4375,3253.4896 4263.6563,3505.375 4792.7083,3632.2917 C4901.375,3658.3646 5202.2396,3627.7813 5291.6667,3694.7917 C5327.5104,3721.6458 5352.0938,3762.3125 5368.8958,3803.5313 " fill="none" id="planner.planNode-backto-planner.renderNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="3413.7188,3152.3125,3397.5833,3137.25,3419.5938,3138.9688,3413.7188,3152.3125" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[df42ba4b1a425409c5bd8b5df469b7de]
reverse link planner.mergeNode to planner.scanNode--><path codeLine="1683" d="M809.2396,4013.5625 C833.0208,4160.9375 897.5833,4561.2083 942.875,4842.0104 " fill="none" id="planner.mergeNode-backto-planner.scanNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="802.0313,4014.6458,805.9167,3992.9167,816.4271,4012.3229,802.0313,4014.6458" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[7a36c5096c67ca00d0c519f7fd8dd9ba]
reverse link planner.planNode to planner.scanNode--><path codeLine="1684" d="M3187.3229,3097.1979 C2879.4583,3110.5 2038.3854,3193.2292 1658.3333,3694.7917 C1588.2292,3787.3021 1657.1146,4106.0729 1618.75,4215.625 C1514.4583,4513.4479 1288.6146,4805.6771 1138.1042,4978.875 " fill="none" id="planner.planNode-backto-planner.scanNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="3187.4479,3089.8958,3208.5521,3096.3542,3188.0208,3104.4688,3187.4479,3089.8958" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[08f26adc0aea1207bbba4784b3ac2dc9]
reverse link planner.planNode to planner.selectNode--><path codeLine="1685" d="M3187.625,3097.5938 C2843.2813,3111.6146 1807.9583,3195.3958 1166.6667,3694.7917 C1160.4167,3699.6563 1154.3854,3704.8646 1148.5625,3710.3542 " fill="none" id="planner.planNode-backto-planner.selectNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="3187.7188,3090.3021,3208.8125,3096.7917,3188.2708,3104.875,3187.7188,3090.3021" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[b0e8b41683c5d4c936e9dce4888bfb2c]
reverse link planner.planNode to planner.selectTopNode--><path codeLine="1686" d="M3187.8125,3098.875 C2863.4688,3116.375 1931.7917,3208.6354 1391.6667,3694.7917 C1369.3229,3714.9063 1351.2292,3740.2396 1336.6354,3767.1458 " fill="none" id="planner.planNode-backto-planner.selectTopNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="3187.5625,3091.5938,3208.7396,3097.8125,3188.3021,3106.1563,3187.5625,3091.5938" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[2d057da2777d8fb57b6989ab9c7f8da0]
reverse link planner.planNode to planner.sortNode--><path codeLine="1687" d="M3187.6875,3106.0625 C2892.3646,3140.5938 2099.625,3269.8854 1629.1667,3694.7917 C1606.6667,3715.1146 1587.8646,3740.3958 1572.2708,3767.1458 " fill="none" id="planner.planNode-backto-planner.sortNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="3186.9688,3098.8021,3208.4896,3103.6875,3188.625,3113.2917,3186.9688,3098.8021" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[88656ad60d96d1c577e544cbf2eea98e]
reverse link planner.mergeNode to planner.typeIndexJoin--><path codeLine="1688" d="M796.8333,4013.7083 C796.9792,4074.7188 808.0208,4168.6875 868.75,4215.625 C889.8438,4231.9271 2763.8021,4214.0104 2788.5417,4223.9583 C3179.6042,4381.1667 3502.875,4780.7083 3655.4479,4995.7813 " fill="none" id="planner.mergeNode-backto-planner.typeIndexJoin" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="789.5417,4013.5729,797.1979,3992.875,804.125,4013.8333,789.5417,4013.5729" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[f6e2ec5a74d28005dd1fa4c9fe880a46]
reverse link planner.planNode to planner.typeIndexJoin--><path codeLine="1689" d="M3417.8229,3121.6563 C3746.3333,3201.125 4678.1146,3445.2188 4848.9583,3694.7917 C4881.6458,3742.5417 4889.6667,4174.4896 4848.9583,4215.625 C4833.2083,4231.5417 4060.7292,4210.6667 4042.7083,4223.9583 C3802.8542,4400.9063 3755.2813,4776.8438 3748.3854,4987.3021 " fill="none" id="planner.planNode-backto-planner.typeIndexJoin" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="3416.0833,3128.7292,3397.5313,3116.7708,3419.5,3114.5521,3416.0833,3128.7292" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[fa4f02a400d691f7fb649091bb09dcbb]
reverse link planner.planNode to planner.typeJoinMany--><path codeLine="1690" d="M3187.8125,3113.5208 C2923.1458,3162.1667 2265.5521,3316.1458 1883.3333,3694.7917 C1862.5,3715.4271 1845.2604,3740.5625 1831.0729,3766.9688 " fill="none" id="planner.planNode-backto-planner.typeJoinMany" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="3186.6354,3106.3229,3208.4375,3109.7917,3189.2292,3120.6667,3186.6354,3106.3229" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[f14c47a1326f9c7ebbddf1deb8689e0a]
reverse link planner.planNode to planner.typeJoinOne--><path codeLine="1691" d="M3189.6042,3144.7604 C2992.2708,3235.1771 2579.3958,3440.3646 2289.5833,3694.7917 C2283.4583,3700.1667 2277.3854,3705.75 2271.375,3711.5 " fill="none" id="planner.planNode-backto-planner.typeJoinOne" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="3186.6042,3138.1146,3208.5833,3136.1146,3192.6563,3151.3854,3186.6042,3138.1146" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[c7e04e87188d3dab4e3ec899a2769144]
reverse link planner.planNode to planner.updateNode--><path codeLine="1692" d="M3190.1979,3158.1354 C3025.5208,3255.2604 2718.1042,3455.1354 2525,3694.7917 C2512.9583,3709.7292 2501.7708,3726.0417 2491.4271,3742.9792 " fill="none" id="planner.planNode-backto-planner.updateNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="3186.9271,3151.6042,3208.5938,3147.3646,3194.3021,3164.1875,3186.9271,3151.6042" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[caf9ccc9a7839dcd25375094ce17f9c3]
reverse link planner.valueIterator to planner.valuesNode--><path codeLine="1693" d="M478.125,3176.8542 C478.125,3300.2083 478.125,3538.1771 478.125,3718.4792 " fill="none" id="planner.valueIterator-backto-planner.valuesNode" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="none" points="470.8333,3176.7396,478.125,3155.9063,485.4167,3176.7396,470.8333,3176.7396" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[b0cff43e7b46caf0841667b26c138fc5]
reverse link graphql.ObjectConfig to schema.Type--><path codeLine="1785" d="M18532.2917,2419.3229 C18532.2917,2541.5417 18532.2917,2923.375 18532.2917,3050.8229 " fill="none" id="graphql.ObjectConfig-backto-schema.Type" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="18532.2917,2405.7396,18528.125,2411.9896,18532.2917,2418.2396,18536.4583,2411.9896,18532.2917,2405.7396" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[a5c15725982251e9cef734f54bda1c14]
reverse link go-ipfs-blockstore.Blockstore to store.dagStore--><path codeLine="1808" d="M17492.7083,261.6146 C17492.7083,372.3646 17492.7083,693.2292 17492.7083,808.3125 " fill="none" id="go-ipfs-blockstore.Blockstore-backto-store.dagStore" style="stroke:#2A9FD6;stroke-width:3.125;"/><polygon fill="#2A9FD6" points="17492.7083,248,17488.5417,254.25,17492.7083,260.5,17496.875,254.25,17492.7083,248" style="stroke:#2A9FD6;stroke-width:3.125;"/><!--MD5=[24b4ed0af93f75f5e60d7ae8c91bd546]
reverse link __builtin__.byte to core.CType--><path codeLine="1841" d="M12214.5417,2411.1563 C12208.5208,2435.5104 12196.0313,2468.375 12170.8333,2484.375 C12146.1979,2500.0208 10091.3333,2473.0208 10069.7917,2492.7083 C9903.9688,2644.3125 9976.7708,2963.7813 10004.5313,3062.8021 " fill="none" id="__builtin__.byte-backto-core.CType" style="stroke:#2A9FD6;stroke-width:3.125;stroke-dasharray:7.0,7.0;"/><rect height="10.4167" style="stroke:#2A9FD6;stroke-width:1.5625;fill:none;" width="10.4167" x="12210.5938" y="2400.5833"/><!--MD5=[a8af9674896fee68d4998868fcfcc92f]
reverse link __builtin__.int to parser.CommitType--><path codeLine="1842" d="M12009.0833,2411.1979 C11998.5104,2435.7917 11979.7188,2468.9896 11951.0417,2484.375 C11927.375,2497.0729 8103.4063,2474.8646 8083.3333,2492.7083 C7914.7813,2642.6042 7978.6458,2963.9271 8003.4271,3063 " fill="none" id="__builtin__.int-backto-parser.CommitType" style="stroke:#2A9FD6;stroke-width:3.125;stroke-dasharray:7.0,7.0;"/><rect height="10.4167" style="stroke:#2A9FD6;stroke-width:1.5625;fill:none;" width="10.4167" x="12006.0104" y="2400.875"/><!--MD5=[00583fa0e9d5ec4a7ef04b20ad60fea0]
reverse link __builtin__.int to parser.MutationType--><path codeLine="1843" d="M12009.0833,2411.1979 C11998.5104,2435.7917 11979.7188,2468.9896 11951.0417,2484.375 C11926.5,2497.5417 7961.4479,2474.2188 7940.625,2492.7083 C7771.9063,2642.4792 7835.1458,2963.8854 7859.7396,3062.9896 " fill="none" id="__builtin__.int-backto-parser.MutationType" style="stroke:#2A9FD6;stroke-width:3.125;stroke-dasharray:7.0,7.0;"/><rect height="10.4167" style="stroke:#2A9FD6;stroke-width:1.5625;fill:none;" width="10.4167" x="12006.0104" y="2400.875"/><!--MD5=[072d65ea33529cc55cbdc20541c64b20]
reverse link __builtin__.int to parser.SelectionType--><path codeLine="1844" d="M12009.0833,2411.1875 C11998.5104,2435.7917 11979.7188,2468.9896 11951.0417,2484.375 C11928.2813,2496.5833 8251.6354,2475.5938 8232.2917,2492.7083 C8063.2604,2642.2708 8125.25,2963.8125 8149.4375,3062.9792 " fill="none" id="__builtin__.int-backto-parser.SelectionType" style="stroke:#2A9FD6;stroke-width:3.125;stroke-dasharray:7.0,7.0;"/><rect height="10.4167" style="stroke:#2A9FD6;stroke-width:1.5625;fill:none;" width="10.4167" x="12006.0104" y="2400.875"/><!--MD5=[3fe4339fa8c28e5fa03f0378732562e6]
reverse link __builtin__.string to parser.SortDirection--><path codeLine="1845" d="M12111.3542,2410.9375 C12104.3854,2435.3646 12090.5625,2468.4687 12064.5833,2484.375 C12050.9896,2492.6979 9784.3854,2489.6042 9768.75,2492.7083 C9184.5938,2608.8229 8539.7188,2958.4375 8355.6979,3062.9063 " fill="none" id="__builtin__.string-backto-parser.SortDirection" style="stroke:#2A9FD6;stroke-width:3.125;stroke-dasharray:7.0,7.0;"/><rect height="10.4167" style="stroke:#2A9FD6;stroke-width:1.5625;fill:none;" width="10.4167" x="12107.5313" y="2400.6563"/><!--MD5=[f8462389840cc24446fe7afd252bcc06]
reverse link __builtin__.uint32 to base.DataEncoding--><path codeLine="1846" d="M12330.6042,2410.9688 C12337.8021,2435.4167 12351.9583,2468.5313 12378.125,2484.375 C12393.8333,2493.8854 17653.9583,2480.5313 17667.7083,2492.7083 C17836.625,2642.3229 17773.9792,2963.8333 17749.5833,3062.9792 " fill="none" id="__builtin__.uint32-backto-base.DataEncoding" style="stroke:#2A9FD6;stroke-width:3.125;stroke-dasharray:7.0,7.0;"/><rect height="10.4167" style="stroke:#2A9FD6;stroke-width:1.5625;fill:none;" width="10.4167" x="12323.9583" y="2400.6771"/><!--MD5=[ee77adacc7b19e724f5b321f92bf26d3]
reverse link __builtin__.uint32 to base.FieldID--><path codeLine="1847" d="M12330.6042,2410.9688 C12337.8021,2435.4167 12351.9583,2468.5313 12378.125,2484.375 C12393.3229,2493.5729 17481.1042,2481.3854 17494.7917,2492.7083 C17670.75,2638.2396 17632.5521,2963.2292 17615.9375,3063 " fill="none" id="__builtin__.uint32-backto-base.FieldID" style="stroke:#2A9FD6;stroke-width:3.125;stroke-dasharray:7.0,7.0;"/><rect height="10.4167" style="stroke:#2A9FD6;stroke-width:1.5625;fill:none;" width="10.4167" x="12323.9583" y="2400.6771"/><!--MD5=[0f462c7bb08942bb7cba98df1e524e57]
reverse link __builtin__.uint8 to base.FieldKind--><path codeLine="1848" d="M12467.4688,2383.5833 C12686.9375,2396.8021 13807.0417,2462.5625 14722.9167,2484.375 C14733.6563,2484.6354 17808.6979,2485.5 17816.6667,2492.7083 C17983.375,2643.625 17913.6354,2963.5625 17886.8333,3062.75 " fill="none" id="__builtin__.uint8-backto-base.FieldKind" style="stroke:#2A9FD6;stroke-width:3.125;stroke-dasharray:7.0,7.0;"/><rect height="10.4167" style="stroke:#2A9FD6;stroke-width:1.5625;fill:none;" width="10.4167" x="12456.9479" y="2378.0521"/><!--MD5=[5fd9727d977d2320b0aaabe523547aa0]
reverse link core.[]Span to core.Spans--><path codeLine="1849" d="M10460.6354,3124.7813 C10437.9896,3215.875 10384.5625,3491.7188 10525,3632.2917 C10618.4479,3725.8229 11018.4271,3606.3125 11116.6667,3694.7917 C11182.1771,3753.7917 11180.5729,3869.6667 11175.6042,3924.3021 " fill="none" id="core.[]Span-backto-core.Spans" style="stroke:#2A9FD6;stroke-width:3.125;stroke-dasharray:7.0,7.0;"/><rect height="10.4167" style="stroke:#2A9FD6;stroke-width:1.5625;fill:none;" width="10.4167" x="10456.7396" y="3114.3542"/><!--MD5=[27b3e89056432970deb7a5b02c14cdc1]
reverse link crdt.fontcolorbluefuncfontcoreMultiStoreMerkleCRDTInitFn to crdt.MerkleCRDTFactory--><path codeLine="1850" d="M8803.125,5169.8646 C8803.125,5324.1979 8803.125,6032.1667 8803.125,6186.7813 " fill="none" id="crdt.fontcolorbluefuncfontcoreMultiStoreMerkleCRDTInitFn-backto-crdt.MerkleCRDTFactory" style="stroke:#2A9FD6;stroke-width:3.125;stroke-dasharray:7.0,7.0;"/><rect height="10.4167" style="stroke:#2A9FD6;stroke-width:1.5625;fill:none;" width="10.4167" x="8797.9167" y="5159.4063"/><!--MD5=[fef3faa26292c2747a5d4518601a266a]
reverse link crdt.fontcolorbluefuncfontgodatastoreKeyMerkleCRDT to crdt.MerkleCRDTInitFn--><path codeLine="1851" d="M8530.2083,5169.8646 C8530.2083,5324.1979 8530.2083,6032.1667 8530.2083,6186.7813 " fill="none" id="crdt.fontcolorbluefuncfontgodatastoreKeyMerkleCRDT-backto-crdt.MerkleCRDTInitFn" style="stroke:#2A9FD6;stroke-width:3.125;stroke-dasharray:7.0,7.0;"/><rect height="10.4167" style="stroke:#2A9FD6;stroke-width:1.5625;fill:none;" width="10.4167" x="8525" y="5159.4063"/><!--MD5=[39ed128b89277339d7be6d1a0aff04dd]
reverse link document.[]EncProperty to document.EPTuple--><path codeLine="1852" d="M17028.8229,5169.8646 C17027.0313,5324.1979 17018.8125,6032.1667 17017.0104,6186.7813 " fill="none" id="document.[]EncProperty-backto-document.EPTuple" style="stroke:#2A9FD6;stroke-width:3.125;stroke-dasharray:7.0,7.0;"/><rect height="10.4167" style="stroke:#2A9FD6;stroke-width:1.5625;fill:none;" width="10.4167" x="17023.6771" y="5159.4063"/><!--MD5=[528186ef64f4105166577d945ab09cd6]
reverse link parser.fontcolorbluefuncfontastObjectValuefontcolorblueinterfacefonterror to parser.parseFn--><path codeLine="1853" d="M6810.4167,3124.875 C6810.4167,3257.7396 6810.4167,3791.2292 6810.4167,3924.0833 " fill="none" id="parser.fontcolorbluefuncfontastObjectValuefontcolorblueinterfacefonterror-backto-parser.parseFn" style="stroke:#2A9FD6;stroke-width:3.125;stroke-dasharray:7.0,7.0;"/><rect height="10.4167" style="stroke:#2A9FD6;stroke-width:1.5625;fill:none;" width="10.4167" x="6805.2083" y="3114.375"/><!--MD5=[548a08177416b49a9a86cf17eab01897]
reverse link planner.planNode to planner.Query--><path codeLine="1854" d="M3402.2708,3137.9375 C3638.5104,3239.0938 4255.0313,3493.4583 4792.7083,3632.2917 C4962.5,3676.1354 5055.4271,3573.7292 5182.2917,3694.7917 C5245.8542,3755.4479 5244.7188,3869.9792 5240.0521,3924.2292 " fill="none" id="planner.planNode-backto-planner.Query" style="stroke:#2A9FD6;stroke-width:3.125;stroke-dasharray:7.0,7.0;"/><rect height="10.4167" style="stroke:#2A9FD6;stroke-width:1.5625;fill:none;" width="10.4167" x="3392.2396" y="3130.6667"/><!--MD5=[257264d5f40403cb56c549bfe927159b]
link badger.Datastore to badger.batch--><!--MD5=[a0da697bf540e1cb57bb8a1526425474]
link badger.Datastore to badger.txn--><!--MD5=[e2e69d7f318b8b6add6037d1587bf770]
link base.CollectionDescription to base.FieldDescription--><!--MD5=[0599f9e93c8a043cd6d16a5fd6f99ced]
link base.CollectionDescription to base.IndexDescription--><!--MD5=[261af7e30381e543612814de8b718ac1]
link base.IndexDescription to base.SchemaDescription--><!--MD5=[6e78a94a5bf0149256e81c97f65e0b5d]
link client.CreateOpt to client.DeleteOpt--><!--MD5=[77bd039e947bb4c7028d271fc53f1904]
link client.DeleteOpt to client.DeleteResult--><!--MD5=[15d0dc98d9b375d31f335df6db7931e9]
link client.CreateOpt to client.QueryResult--><!--MD5=[d4872e69c2fcf7a38c6480c1af7c3e29]
link client.QueryResult to client.Sequence--><!--MD5=[394f0a463ccd347f0b0ecfe4e58336ed]
link client.Sequence to client.UpdateOpt--><!--MD5=[680d4b53996ce2e63b98357b29fd6a30]
link client.QueryResult to client.UpdateResult--><!--MD5=[6057e0857f506125b4b9da0cff77005f]
link core.DAGLink to core.DAGStore--><!--MD5=[ddcad1841db590456f2eb0eca7b26760]
link core.DAGLink to core.DSReaderWriter--><!--MD5=[136ad1315e191781058a1a6d343297a9]
link core.DSReaderWriter to core.KeyValue--><!--MD5=[95f0ac722f2483f14a04675064afec66]
link cmd.Config to cmd.MemoryOptions--><!--MD5=[309efccfccf55895780bec1b2d25329a]
link cmd.Config to cmd.Options--><!--MD5=[8702cdf5f426a0e948cfe12a866a88c1]
link db.CreateOpt to db.DeleteOpt--><!--MD5=[7fcff60fb4bcf561f3f0bbf993e8a4fd]
link db.DeleteOpt to db.DeleteResult--><!--MD5=[f2c5d2dc6f767bc58d69498f05e675c4]
link db.CreateOpt to db.UpdateOpt--><!--MD5=[459bfd735262f3ef1b9e40218552903d]
link db.UpdateOpt to db.patcher--><!--MD5=[e2c2f457d8f8abade7a6fa715fe66f36]
link db.patcher to db.sequence--><!--MD5=[d1f8cdbc5617178fae1dbbf7688b3e24]
link document.EncProperty to document.EncodedDocument--><!--MD5=[eeb027d041518e38c3cb7abb8de8a1e1]
link document.EncodedDocument to document.List--><!--MD5=[3f4b550b486db3143d0af920dd2f687f]
link document.EncProperty to document.Scalar--><!--MD5=[2882c2081b60fe3dd010861be82e814f]
link document.Scalar to document.SimpleDocument--><!--MD5=[ebe0e4048f8767c60e1410d1ac0a6cf7]
link document.SimpleDocument to document.ValueType--><!--MD5=[6fc6c1e7f025b053cdc4c00df340dc4e]
link fetcher.BlockFetcher to fetcher.DocumentFetcher--><!--MD5=[57b1f342bd16f8a9f69fea38d9742c89]
link fetcher.BlockFetcher to fetcher.HeadFetcher--><!--MD5=[2606f84c2143ee6b3532ee6b309ab4e7]
link parser.Filter to parser.GroupBy--><!--MD5=[0d1ef42566a1e704d1b8aaa747e77fe4]
link parser.GroupBy to parser.Limit--><!--MD5=[9c71e2f3797c7aaf5252f28a5eb4fb4d]
link parser.Filter to parser.ObjectPayload--><!--MD5=[d614efe663100b0812eb034cbbdcf517]
link parser.ObjectPayload to parser.OrderBy--><!--MD5=[cd49f9a85d6c646307cc1b0f73fcc926]
link parser.OrderBy to parser.SortCondition--><!--MD5=[a2591ba48c28a39ee70d42df0e150b12]
link planner.Planner to planner.QueryExecutor--><!--MD5=[877fb52e1d1e18c69cde006de76b1e58]
link planner.QueryExecutor to planner.Statement--><!--MD5=[7c31dbb9e892059c2dcecd92b36fe226]
link planner.Planner to planner.dataSource--><!--MD5=[825393232b9324332de1b5b8ead81acd]
link planner.dataSource to planner.orderedMap--><!--MD5=[1ba4148132879697d904fd22b565cce5]
link planner.orderedMap to planner.planSource--><!--MD5=[630b212c0f019970e328e27cfc03bff9]
link planner.dataSource to planner.renderInfo--><!--MD5=[3911b89a2509441e35bca4a78578aaca]
link planner.renderInfo to planner.sourceInfo--><!--MD5=[9246552f5ee790cf2aeae207bc3b6095]
link planner.sourceInfo to planner.topLevelRenderInfo--><!--MD5=[05302160dc2f723c9b9416aca1adc0ee]
link schema.Generator to schema.Relation--><!--MD5=[b90824edb46079e133d80e002767ed4c]
link schema.Relation to schema.RelationManager--><!--MD5=[8d2ea83c821fbf7359efe29f9bae9913]
link schema.Generator to schema.SchemaManager--><!--MD5=[faae8340be73d64b30a3327ade50a008]
link schema.SchemaManager to schema.queryInputTypeConfig--><!--MD5=[764947425058d80a002e82fc7f33e35b]
link badger.batch to base.CollectionDescription--><!--MD5=[dbc217cb4f8ddc828f44d6610dd57ff0]
link base.FieldDescription to client.CreateOpt--><!--MD5=[e00d2940b3274c3b3ed9d8d2d43210aa]
link client.DeleteResult to core.DAGLink--><!--MD5=[643bcdd5d68d384dfb3565df0e0ecd5f]
link badger.txn to cmd.Config--><!--MD5=[d1ce5dc75a85b05b1769d58200365087]
link cmd.MemoryOptions to db.CreateOpt--><!--MD5=[b31035dfbeae9430ffdf34e18c97a25c]
link db.DeleteResult to document.EncProperty--><!--MD5=[471c948738c8f85875c4cbd1bc39e3a0]
link document.List to fetcher.BlockFetcher--><!--MD5=[136ce39ce82049abc6cc826b7037cfa2]
link cmd.Options to parser.Filter--><!--MD5=[16c7ae37e76c00acee2459c9fa272dc1]
link parser.Limit to planner.Planner--><!--MD5=[ccc568589f81a2c1ebb0d51231bbf54d]
link planner.Statement to schema.Generator--><!--MD5=[73186b48afe91541a740c1e2004aa25e]
@startuml
!theme cyborg
namespace badger {
    class Datastore << (S,Aquamarine) >> {
        - closeLk sync.RWMutex
        - closed bool
        - closeOnce sync.Once
        - closing <font color=blue>chan</font> <font color=blue>struct</font>{}
        - gcDiscardRatio float64
        - gcSleep time.Duration
        - gcInterval time.Duration
        - syncWrites bool

        + DB *v3.DB

        - periodicGC() 
        - newImplicitTransaction(readOnly bool) *txn
        - gcOnce() error

        + NewTransaction(ctx context.Context, readOnly bool) (go-datastore.Txn, error)
        + Put(ctx context.Context, key go-datastore.Key, value []byte) error
        + Sync(ctx context.Context, prefix go-datastore.Key) error
        + PutWithTTL(ctx context.Context, key go-datastore.Key, value []byte, ttl time.Duration) error
        + SetTTL(ctx context.Context, key go-datastore.Key, ttl time.Duration) error
        + GetExpiration(ctx context.Context, key go-datastore.Key) (time.Time, error)
        + Get(ctx context.Context, key go-datastore.Key) ([]byte, error)
        + Has(ctx context.Context, key go-datastore.Key) (bool, error)
        + GetSize(ctx context.Context, key go-datastore.Key) (int, error)
        + Delete(ctx context.Context, key go-datastore.Key) error
        + Query(ctx context.Context, q query.Query) (query.Results, error)
        + DiskUsage(ctx context.Context) (uint64, error)
        + Close() error
        + Batch(ctx context.Context) (go-datastore.Batch, error)
        + CollectGarbage(ctx context.Context) error

    }
    class Options << (S,Aquamarine) >> {
        + GcDiscardRatio float64
        + GcInterval time.Duration
        + GcSleep time.Duration

    }
    class batch << (S,Aquamarine) >> {
        - ds *Datastore
        - writeBatch *v3.WriteBatch

        - put(key go-datastore.Key, value []byte) error
        - delete(key go-datastore.Key) error
        - commit() error
        - cancel() 

        + Put(ctx context.Context, key go-datastore.Key, value []byte) error
        + Delete(ctx context.Context, key go-datastore.Key) error
        + Commit(ctx context.Context) error
        + Cancel() error

    }
    class compatLogger << (S,Aquamarine) >> {
        - skipLogger zap.SugaredLogger

        + Warning(args ...<font color=blue>interface</font>{}) 
        + Warningf(format string, args ...<font color=blue>interface</font>{}) 

    }
    class txn << (S,Aquamarine) >> {
        - ds *Datastore
        - txn *v3.Txn
        - implicit bool

        - put(key go-datastore.Key, value []byte) error
        - putWithTTL(key go-datastore.Key, value []byte, ttl time.Duration) error
        - getExpiration(key go-datastore.Key) (time.Time, error)
        - setTTL(key go-datastore.Key, ttl time.Duration) error
        - get(key go-datastore.Key) ([]byte, error)
        - has(key go-datastore.Key) (bool, error)
        - getSize(key go-datastore.Key) (int, error)
        - delete(key go-datastore.Key) error
        - query(q query.Query) (query.Results, error)
        - commit() error
        - close() error
        - discard() 

        + Put(ctx context.Context, key go-datastore.Key, value []byte) error
        + Sync(ctx context.Context, prefix go-datastore.Key) error
        + PutWithTTL(ctx context.Context, key go-datastore.Key, value []byte, ttl time.Duration) error
        + GetExpiration(ctx context.Context, key go-datastore.Key) (time.Time, error)
        + SetTTL(ctx context.Context, key go-datastore.Key, ttl time.Duration) error
        + Get(ctx context.Context, key go-datastore.Key) ([]byte, error)
        + Has(ctx context.Context, key go-datastore.Key) (bool, error)
        + GetSize(ctx context.Context, key go-datastore.Key) (int, error)
        + Delete(ctx context.Context, key go-datastore.Key) error
        + Query(ctx context.Context, q query.Query) (query.Results, error)
        + Commit(ctx context.Context) error
        + Close() error
        + Discard(ctx context.Context) 

    }
}
"v3.Options" *- - "badger.Options"
"zap.SugaredLogger" *- - "badger.compatLogger"


namespace base {
    class CollectionDescription << (S,Aquamarine) >> {
        + Name string
        + ID uint32
        + Schema SchemaDescription
        + Indexes []IndexDescription

        + IDString() string
        + GetField(name string) (FieldDescription, bool)

    }
    class FieldDescription << (S,Aquamarine) >> {
        + Name string
        + ID FieldID
        + Kind FieldKind
        + Schema string
        + RelationName string
        + Typ core.CType
        + Meta uint8

        + IsObject() bool

    }
    class IndexDescription << (S,Aquamarine) >> {
        + Name string
        + ID uint32
        + Primary bool
        + Unique bool
        + FieldIDs []uint32
        + Junction bool
        + RelationType string

        + IDString() string

    }
    class SchemaDescription << (S,Aquamarine) >> {
        + ID uint32
        + Name string
        + Key []byte
        + FieldIDs []uint32
        + Fields []FieldDescription

        + IsEmpty() bool

    }
    class base.DataEncoding << (T, #FF7700) >>  {
    }
    class base.FieldID << (T, #FF7700) >>  {
    }
    class base.FieldKind << (T, #FF7700) >>  {
    }
}


namespace client {
    interface Collection  {
        + Description() base.CollectionDescription
        + Name() string
        + Schema() base.SchemaDescription
        + ID() uint32
        + Indexes() []base.IndexDescription
        + PrimaryIndex() base.IndexDescription
        + Index( uint32) (base.IndexDescription, error)
        + CreateIndex( base.IndexDescription) error
        + Create( context.Context,  *document.Document) error
        + CreateMany( context.Context,  []*document.Document) error
        + Update( context.Context,  *document.Document) error
        + Save( context.Context,  *document.Document) error
        + Delete( context.Context,  key.DocKey) (bool, error)
        + Exists( context.Context,  key.DocKey) (bool, error)
        + UpdateWith( context.Context,  <font color=blue>interface</font>{},  <font color=blue>interface</font>{},  ...UpdateOpt) error
        + UpdateWithFilter( context.Context,  <font color=blue>interface</font>{},  <font color=blue>interface</font>{},  ...UpdateOpt) (*UpdateResult, error)
        + UpdateWithKey( context.Context,  key.DocKey,  <font color=blue>interface</font>{},  ...UpdateOpt) (*UpdateResult, error)
        + UpdateWithKeys( context.Context,  []key.DocKey,  <font color=blue>interface</font>{},  ...UpdateOpt) (*UpdateResult, error)
        + DeleteWith( context.Context,  <font color=blue>interface</font>{},  <font color=blue>interface</font>{},  ...DeleteOpt) error
        + DeleteWithFilter( context.Context,  <font color=blue>interface</font>{},  <font color=blue>interface</font>{},  ...DeleteOpt) (*DeleteResult, error)
        + DeleteWithKey( context.Context,  key.DocKey,  <font color=blue>interface</font>{},  ...DeleteOpt) (*DeleteResult, error)
        + DeleteWithKeys( context.Context,  []key.DocKey,  <font color=blue>interface</font>{},  ...DeleteOpt) (*DeleteResult, error)
        + WithTxn( Txn) Collection

    }
    class CreateOpt << (S,Aquamarine) >> {
    }
    interface DB  {
        + CreateCollection( context.Context,  base.CollectionDescription) (Collection, error)
        + GetCollection( context.Context,  string) (Collection, error)
        + ExecQuery( context.Context,  string) *QueryResult
        + SchemaManager() *schema.SchemaManager
        + AddSchema( context.Context,  string) error
        + PrintDump(ctx context.Context) 
        + GetBlock(ctx context.Context, c go-cid.Cid) (go-block-format.Block, error)

    }
    class DeleteOpt << (S,Aquamarine) >> {
    }
    class DeleteResult << (S,Aquamarine) >> {
        + Count int64
        + DocKeys []string

    }
    class QueryResult << (S,Aquamarine) >> {
        + Errors []<font color=blue>interface</font>{}
        + Data <font color=blue>interface</font>{}

    }
    interface Sequence  {
    }
    interface Txn  {
        + Systemstore() core.DSReaderWriter
        + IsBatch() bool

    }
    class UpdateOpt << (S,Aquamarine) >> {
    }
    class UpdateResult << (S,Aquamarine) >> {
        + Count int64
        + DocKeys []string

    }
}


namespace clock {
    class MerkleClock << (S,Aquamarine) >> {
        - headstore core.DSReaderWriter
        - dagstore core.DAGStore
        - headset *heads
        - crdt core.ReplicatedData

        - putBlock(ctx context.Context, heads []go-cid.Cid, height uint64, delta core.Delta) (go-ipld-format.Node, error)

        + AddDAGNode(ctx context.Context, delta core.Delta) (go-cid.Cid, error)
        + ProcessNode(ctx context.Context, ng core.NodeGetter, root go-cid.Cid, rootPrio uint64, delta core.Delta, node go-ipld-format.Node) ([]go-cid.Cid, error)
        + Heads() *heads

    }
    class crdtNodeGetter << (S,Aquamarine) >> {
        - deltaExtractor <font color=blue>func</font>(go-ipld-format.Node) (core.Delta, error)

        + GetDelta(ctx context.Context, c go-cid.Cid) (go-ipld-format.Node, core.Delta, error)
        + GetPriority(ctx context.Context, c go-cid.Cid) (uint64, error)
        + GetDeltas(ctx context.Context, cids []go-cid.Cid) <font color=blue>chan</font> core.NodeDeltaPair

    }
    class deltaEntry << (S,Aquamarine) >> {
        - delta core.Delta
        - node go-ipld-format.Node
        - err error

        + GetNode() go-ipld-format.Node
        + GetDelta() core.Delta
        + Error() error

    }
    class heads << (S,Aquamarine) >> {
        - store core.DSReaderWriter
        - namespace go-datastore.Key

        - key(c go-cid.Cid) go-datastore.Key
        - load(ctx context.Context, c go-cid.Cid) (uint64, error)
        - write(ctx context.Context, store go-datastore.Write, c go-cid.Cid, height uint64) error
        - delete(ctx context.Context, store go-datastore.Write, c go-cid.Cid) error

        + IsHead(ctx context.Context, c go-cid.Cid) (bool, uint64, error)
        + Len(ctx context.Context) (int, error)
        + Replace(ctx context.Context, h go-cid.Cid, c go-cid.Cid, height uint64) error
        + Add(ctx context.Context, c go-cid.Cid, height uint64) error
        + List(ctx context.Context) ([]go-cid.Cid, uint64, error)

    }
}
"go-ipld-format.NodeGetter" *- - "clock.crdtNodeGetter"

"core.MerkleClock" <|- - "clock.MerkleClock"
"core.NodeGetter" <|- - "clock.crdtNodeGetter"
"core.NodeDeltaPair" <|- - "clock.deltaEntry"

namespace cmd {
    class BadgerOptions << (S,Aquamarine) >> {
        + Path string

    }
    class Config << (S,Aquamarine) >> {
        + Database Options

    }
    class MemoryOptions << (S,Aquamarine) >> {
        + Size uint64

    }
    class Options << (S,Aquamarine) >> {
        + Address string
        + Store string
        + Memory MemoryOptions
        + Badger BadgerOptions

    }
}
"v3.Options" *- - "cmd.BadgerOptions"


namespace container {
    class DocumentContainer << (S,Aquamarine) >> {
        - docs []<font color=blue>map</font>[string]<font color=blue>interface</font>{}
        - numDocs int

        + At(index int) <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Len() int
        + AddDoc(doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}) error
        + Swap(i int, j int) 
        + Close() error

    }
}


namespace core {
    interface CompositeDelta  {
        + Links() []DAGLink

    }
    class DAGLink << (S,Aquamarine) >> {
        + Name string
        + Cid go-cid.Cid

    }
    interface DAGStore  {
    }
    interface DSReaderWriter  {
    }
    interface Delta  {
        + GetPriority() uint64
        + SetPriority( uint64) 
        + Marshal() ([]byte, error)
        + Value() <font color=blue>interface</font>{}

    }
    class Key << (S,Aquamarine) >> {
        + ToDS() go-datastore.Key
        + PrefixEnd() Key
        + FieldID() (uint32, error)

    }
    class KeyValue << (S,Aquamarine) >> {
        + Key Key
        + Value []byte

    }
    interface MerkleClock  {
        + AddDAGNode(ctx context.Context, delta Delta) (go-cid.Cid, error)
        + ProcessNode( context.Context,  NodeGetter,  go-cid.Cid,  uint64,  Delta,  go-ipld-format.Node) ([]go-cid.Cid, error)

    }
    interface MultiStore  {
        + Datastore() DSReaderWriter
        + Headstore() DSReaderWriter
        + DAGstore() DAGStore

    }
    interface NodeDeltaPair  {
        + GetNode() go-ipld-format.Node
        + GetDelta() Delta
        + Error() error

    }
    interface NodeGetter  {
        + GetDelta( context.Context,  go-cid.Cid) (go-ipld-format.Node, Delta, error)
        + GetDeltas( context.Context,  []go-cid.Cid) <font color=blue>chan</font> NodeDeltaPair
        + GetPriority( context.Context,  go-cid.Cid) (uint64, error)

    }
    interface PersistedReplicatedData  {
        + Publish( Delta) (go-cid.Cid, error)

    }
    interface ReplicatedData  {
        + Merge(ctx context.Context, other Delta, id string) error
        + DeltaDecode(node go-ipld-format.Node) (Delta, error)
        + Value(ctx context.Context) ([]byte, error)

    }
    interface Span  {
        + Start() Key
        + End() Key
        + Contains( Span) bool
        + Equal( Span) bool
        + Compare( Span) int

    }
    interface Txn  {
        + Systemstore() DSReaderWriter

    }
    class core.CType << (T, #FF7700) >>  {
    }
    class core.Spans << (T, #FF7700) >>  {
    }
    class span << (S,Aquamarine) >> {
        - start Key
        - end Key

        + Start() Key
        + End() Key
        + Contains(s2 Span) bool
        + Equal(s2 Span) bool
        + Compare(s2 Span) int

    }
}
"core.Delta" *- - "core.CompositeDelta"
"go-datastore.Key" *- - "core.Key"
"core.ReplicatedData" *- - "core.PersistedReplicatedData"
"core.MultiStore" *- - "core.Txn"
"core.Span" *- - "core.span"

"core.Span" <|- - "core.span"

namespace crdt {
    class CompositeDAG << (S,Aquamarine) >> {
        + Value(ctx context.Context) ([]byte, error)
        + Set(patch []byte, links []core.DAGLink) *CompositeDAGDelta
        + Merge(ctx context.Context, delta core.Delta, id string) error
        + DeltaDecode(node go-ipld-format.Node) (core.Delta, error)

    }
    class CompositeDAGDelta << (S,Aquamarine) >> {
        + Priority uint64
        + Data []byte
        + SubDAGs []core.DAGLink

        + GetPriority() uint64
        + SetPriority(prio uint64) 
        + Marshal() ([]byte, error)
        + Value() <font color=blue>interface</font>{}
        + Links() []core.DAGLink

    }
    class Factory << (S,Aquamarine) >> {
        - crdts <font color=blue>map</font>[core.CType]*MerkleCRDTFactory
        - datastore core.DSReaderWriter
        - headstore core.DSReaderWriter
        - dagstore core.DAGStore

        - getRegisteredFactory(t core.CType) (*MerkleCRDTFactory, error)

        + Register(t core.CType, fn *MerkleCRDTFactory) error
        + Instance(t core.CType, key go-datastore.Key) (MerkleCRDT, error)
        + InstanceWithStores(store core.MultiStore, t core.CType, key go-datastore.Key) (MerkleCRDT, error)
        + SetStores(datastore core.DSReaderWriter, headstore core.DSReaderWriter, dagstore core.DAGStore) error
        + WithStores(datastore core.DSReaderWriter, headstore core.DSReaderWriter, dagstore core.DAGStore) Factory
        + SetDatastore(datastore core.DSReaderWriter) error
        + WithDatastore(datastore core.DSReaderWriter) Factory
        + SetHeadstore(headstore core.DSReaderWriter) error
        + WithHeadstore(headstore core.DSReaderWriter) Factory
        + SetDagstore(dagstore core.DAGStore) error
        + WithDagstore(dagstore core.DAGStore) Factory
        + Datastore() core.DSReaderWriter
        + Headstore() core.DSReaderWriter
        + DAGstore() core.DAGStore

    }
    class LWWRegDelta << (S,Aquamarine) >> {
        + Priority uint64
        + Data []byte

        + GetPriority() uint64
        + SetPriority(prio uint64) 
        + Marshal() ([]byte, error)
        + Value() <font color=blue>interface</font>{}

    }
    class LWWRegister << (S,Aquamarine) >> {
        - key string

        - setValue(ctx context.Context, val []byte, priority uint64) error

        + Value(ctx context.Context) ([]byte, error)
        + Set(value []byte) *LWWRegDelta
        + Merge(ctx context.Context, delta core.Delta, id string) error
        + DeltaDecode(node go-ipld-format.Node) (core.Delta, error)

    }
    interface MerkleCRDT  {
    }
    class MerkleCompositeDAG << (S,Aquamarine) >> {
        - reg crdt.CompositeDAG

        + Set(ctx context.Context, patch []byte, links []core.DAGLink) (go-cid.Cid, error)
        + Value(ctx context.Context) ([]byte, error)
        + Merge(ctx context.Context, other core.Delta, id string) error

    }
    class MerkleLWWRegister << (S,Aquamarine) >> {
        - reg crdt.LWWRegister

        + Set(ctx context.Context, value []byte) (go-cid.Cid, error)
        + Value(ctx context.Context) ([]byte, error)
        + Merge(ctx context.Context, other core.Delta, id string) error

    }
    class baseCRDT << (S,Aquamarine) >> {
        - store core.DSReaderWriter
        - namespace go-datastore.Key
        - keysNs string
        - valueSuffix string
        - prioritySuffix string

        - keyPrefix(key string) go-datastore.Key
        - valueKey(key string) go-datastore.Key
        - priorityKey(key string) go-datastore.Key
        - setPriority(ctx context.Context, key string, priority uint64) error
        - getPriority(ctx context.Context, key string) (uint64, error)

    }
    class baseMerkleCRDT << (S,Aquamarine) >> {
        - clock core.MerkleClock
        - crdt core.ReplicatedData

        + Merge(ctx context.Context, other core.Delta, id string) error
        + DeltaDecode(node go-ipld-format.Node) (core.Delta, error)
        + Value(ctx context.Context) ([]byte, error)
        + Publish(ctx context.Context, delta core.Delta) (go-cid.Cid, error)

    }
    class crdt.MerkleCRDTFactory << (T, #FF7700) >>  {
    }
    class crdt.MerkleCRDTInitFn << (T, #FF7700) >>  {
    }
    class "<font color=blue>func</font>(core.MultiStore) MerkleCRDTInitFn" as fontcolorbluefuncfontcoreMultiStoreMerkleCRDTInitFn {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
    class "<font color=blue>func</font>(go-datastore.Key) MerkleCRDT" as fontcolorbluefuncfontgodatastoreKeyMerkleCRDT {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
}
"crdt.baseCRDT" *- - "crdt.LWWRegister"
"crdt.baseMerkleCRDT" *- - "crdt.MerkleCompositeDAG"
"crdt.baseMerkleCRDT" *- - "crdt.MerkleLWWRegister"

"core.ReplicatedData" <|- - "crdt.CompositeDAG"
"core.CompositeDelta" <|- - "crdt.CompositeDAGDelta"
"core.Delta" <|- - "crdt.CompositeDAGDelta"
"core.MultiStore" <|- - "crdt.Factory"
"core.Delta" <|- - "crdt.LWWRegDelta"
"core.ReplicatedData" <|- - "crdt.LWWRegister"
"core.ReplicatedData" <|- - "crdt.baseMerkleCRDT"

namespace db {
    class Collection << (S,Aquamarine) >> {
        - db *DB
        - txn *Txn
        - colID uint32
        - colIDKey core.Key
        - desc base.CollectionDescription

        - create(ctx context.Context, txn *Txn, doc *document.Document) error
        - update(ctx context.Context, txn *Txn, doc *document.Document) error
        - save(ctx context.Context, txn *Txn, doc *document.Document) error
        - delete(ctx context.Context, txn *Txn, key key.DocKey) (bool, error)
        - exists(ctx context.Context, txn *Txn, key key.DocKey) (bool, error)
        - saveDocValue(ctx context.Context, txn *Txn, key go-datastore.Key, val document.Value) (go-cid.Cid, error)
        - saveValueToMerkleCRDT(ctx context.Context, txn *Txn, key go-datastore.Key, ctype core.CType, args ...<font color=blue>interface</font>{}) (go-cid.Cid, error)
        - getTxn(ctx context.Context, readonly bool) (*Txn, error)
        - discardImplicitTxn(ctx context.Context, txn *Txn) 
        - commitImplicitTxn(ctx context.Context, txn *Txn) error
        - getIndexDocKey(key go-datastore.Key, indexID uint32) go-datastore.Key
        - getPrimaryIndexDocKey(key go-datastore.Key) go-datastore.Key
        - getFieldKey(key go-datastore.Key, fieldName string) go-datastore.Key
        - getSchemaFieldID(fieldName string) uint32
        - deleteWithKey(ctx context.Context, txn *Txn, key key.DocKey, deleter <font color=blue>interface</font>{}, opts ...client.DeleteOpt) (*client.DeleteResult, error)
        - deleteWithKeys(ctx context.Context, txn *Txn, keys []key.DocKey, deleter <font color=blue>interface</font>{}, opts ...client.DeleteOpt) (*client.DeleteResult, error)
        - makeSelectionDeleteQuery(ctx context.Context, txn *Txn, filter <font color=blue>interface</font>{}, opts ...client.DeleteOpt) (planner.Query, error)
        - deleteWithFilter(ctx context.Context, txn *Txn, filter <font color=blue>interface</font>{}, deleter <font color=blue>interface</font>{}, opts ...client.DeleteOpt) (*client.DeleteResult, error)
        - makeSelectDeleteLocal(filter *parser.Filter) (*parser.Select, error)
        - get(ctx context.Context, txn *Txn, key key.DocKey) (*document.Document, error)
        - updateWithKey(ctx context.Context, txn *Txn, key key.DocKey, updater <font color=blue>interface</font>{}, opts ...client.UpdateOpt) (*client.UpdateResult, error)
        - updateWithKeys(ctx context.Context, txn *Txn, keys []key.DocKey, updater <font color=blue>interface</font>{}, opts ...client.UpdateOpt) (*client.UpdateResult, error)
        - updateWithFilter(ctx context.Context, txn *Txn, filter <font color=blue>interface</font>{}, updater <font color=blue>interface</font>{}, opts ...client.UpdateOpt) (*client.UpdateResult, error)
        - applyPatch(txn *Txn, doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}, patch []<font color=blue>map</font>[string]<font color=blue>interface</font>{}) error
        - applyPatchOp(txn *Txn, dockey string, field string, currentVal <font color=blue>interface</font>{}, patchOp <font color=blue>map</font>[string]<font color=blue>interface</font>{}) error
        - applyMerge(ctx context.Context, txn *Txn, doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}, merge <font color=blue>map</font>[string]<font color=blue>interface</font>{}) error
        - applyMergePatchOp(txn *Txn, docKey string, field string, currentVal <font color=blue>interface</font>{}, targetVal <font color=blue>interface</font>{}) error
        - makeSelectionUpdateQuery(ctx context.Context, txn *Txn, filter <font color=blue>interface</font>{}, opts ...client.UpdateOpt) (planner.Query, error)
        - makeSelectUpdateLocal(filter *parser.Filter) (*parser.Select, error)
        - getCollectionForPatchOpPath(txn *Txn, path string) (*Collection, bool, error)
        - getTargetKeyForPatchPath(txn *Txn, doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}, path string) (string, error)

        + Description() base.CollectionDescription
        + Name() string
        + Schema() base.SchemaDescription
        + ID() uint32
        + Indexes() []base.IndexDescription
        + PrimaryIndex() base.IndexDescription
        + Index(id uint32) (base.IndexDescription, error)
        + CreateIndex(idesc base.IndexDescription) error
        + WithTxn(txn client.Txn) client.Collection
        + Create(ctx context.Context, doc *document.Document) error
        + CreateMany(ctx context.Context, docs []*document.Document) error
        + Update(ctx context.Context, doc *document.Document) error
        + Save(ctx context.Context, doc *document.Document) error
        + Delete(ctx context.Context, key key.DocKey) (bool, error)
        + Exists(ctx context.Context, key key.DocKey) (bool, error)
        + Delete2(doc *document.SimpleDocument, opts ...client.DeleteOpt) error
        + DeleteWith(ctx context.Context, target <font color=blue>interface</font>{}, deleter <font color=blue>interface</font>{}, opts ...client.DeleteOpt) error
        + DeleteWithFilter(ctx context.Context, filter <font color=blue>interface</font>{}, deleter <font color=blue>interface</font>{}, opts ...client.DeleteOpt) (*client.DeleteResult, error)
        + DeleteWithKey(ctx context.Context, key key.DocKey, deleter <font color=blue>interface</font>{}, opts ...client.DeleteOpt) (*client.DeleteResult, error)
        + DeleteWithKeys(ctx context.Context, keys []key.DocKey, deleter <font color=blue>interface</font>{}, opts ...client.DeleteOpt) (*client.DeleteResult, error)
        + DeleteWithDoc(doc *document.SimpleDocument, deleter <font color=blue>interface</font>{}, opts ...client.DeleteOpt) error
        + DeleteWithDocs(docs []*document.SimpleDocument, deleter <font color=blue>interface</font>{}, opts ...client.DeleteOpt) error
        + Get(ctx context.Context, key key.DocKey) (*document.Document, error)
        + Create2(doc *document.SimpleDocument, opts ...CreateOpt) error
        + Update2(doc *document.SimpleDocument, opts ...client.UpdateOpt) error
        + UpdateWith(ctx context.Context, target <font color=blue>interface</font>{}, updater <font color=blue>interface</font>{}, opts ...client.UpdateOpt) error
        + UpdateWithFilter(ctx context.Context, filter <font color=blue>interface</font>{}, updater <font color=blue>interface</font>{}, opts ...client.UpdateOpt) (*client.UpdateResult, error)
        + UpdateWithKey(ctx context.Context, key key.DocKey, updater <font color=blue>interface</font>{}, opts ...client.UpdateOpt) (*client.UpdateResult, error)
        + UpdateWithKeys(ctx context.Context, keys []key.DocKey, updater <font color=blue>interface</font>{}, opts ...client.UpdateOpt) (*client.UpdateResult, error)
        + UpdateWithDoc(doc *document.SimpleDocument, updater <font color=blue>interface</font>{}, opts ...client.UpdateOpt) error
        + UpdateWithDocs(docs []*document.SimpleDocument, updater <font color=blue>interface</font>{}, opts ...client.UpdateOpt) error

    }
    class CreateOpt << (S,Aquamarine) >> {
    }
    class DB << (S,Aquamarine) >> {
        - glock sync.RWMutex
        - rootstore go-datastore.Batching
        - systemstore core.DSReaderWriter
        - ssKeyTransform keytransform.KeyTransform
        - datastore core.DSReaderWriter
        - dsKeyTransform keytransform.KeyTransform
        - headstore core.DSReaderWriter
        - hsKeyTransform keytransform.KeyTransform
        - dagstore core.DAGStore
        - dagKeyTransform keytransform.KeyTransform
        - crdtFactory *crdt.Factory
        - schema *schema.SchemaManager
        - queryExecutor *planner.QueryExecutor
        - initialized bool
        - log v2.StandardLogger
        - options <font color=blue>interface</font>{}

        - newCollection(desc base.CollectionDescription) (*Collection, error)
        - printDebugDB(ctx context.Context) 
        - loadSchema(ctx context.Context) error
        - saveSchema(ctx context.Context, astdoc *ast.Document) error
        - getSequence(ctx context.Context, key string) (*sequence, error)
        - newTxn(ctx context.Context, readonly bool) (*Txn, error)

        + Listen(address string) 
        + GetBlock(ctx context.Context, c go-cid.Cid) (go-block-format.Block, error)
        + CreateCollection(ctx context.Context, desc base.CollectionDescription) (client.Collection, error)
        + GetCollection(ctx context.Context, name string) (client.Collection, error)
        + Start(ctx context.Context) error
        + Initialize(ctx context.Context) error
        + PrintDump(ctx context.Context) 
        + Close() 
        + ExecQuery(ctx context.Context, query string) *client.QueryResult
        + ExecIntrospection(query string) *client.QueryResult
        + AddSchema(ctx context.Context, schema string) error
        + SchemaManager() *schema.SchemaManager
        + NewTxn(ctx context.Context, readonly bool) (*Txn, error)

    }
    class DeleteOpt << (S,Aquamarine) >> {
    }
    class DeleteResult << (S,Aquamarine) >> {
        + Count int64
        + DocKeys []string

    }
    class Txn << (S,Aquamarine) >> {
        - systemstore core.DSReaderWriter
        - datastore core.DSReaderWriter
        - headstore core.DSReaderWriter
        - dagstore core.DAGStore

        + Systemstore() core.DSReaderWriter
        + Datastore() core.DSReaderWriter
        + Headstore() core.DSReaderWriter
        + DAGstore() core.DAGStore
        + IsBatch() bool

    }
    class UpdateOpt << (S,Aquamarine) >> {
    }
    interface patcher  {
    }
    class sequence << (S,Aquamarine) >> {
        - db *DB
        - key go-datastore.Key
        - val uint64

        - get(ctx context.Context) (uint64, error)
        - update(ctx context.Context) error
        - next(ctx context.Context) (uint64, error)

    }
    class shimBatcherTxn << (S,Aquamarine) >> {
        + Discard(_ context.Context) 

    }
    class shimTxnStore << (S,Aquamarine) >> {
        + Sync(ctx context.Context, prefix go-datastore.Key) error
        + Close() error

    }
}
"go-datastore.Txn" *- - "db.Txn"
"go-datastore.Batch" *- - "db.shimBatcherTxn"
"go-datastore.Read" *- - "db.shimBatcherTxn"
"go-datastore.Txn" *- - "db.shimTxnStore"

"client.Collection" <|- - "db.Collection"
"client.DB" <|- - "db.DB"
"client.Txn" <|- - "db.Txn"
"core.MultiStore" <|- - "db.Txn"
"core.Txn" <|- - "db.Txn"

namespace document {
    class Document << (S,Aquamarine) >> {
        - schema base.SchemaDescription
        - key key.DocKey
        - fields <font color=blue>map</font>[string]Field
        - values <font color=blue>map</font>[Field]Value
        - isDirty bool

        - set(t core.CType, field string, value Value) error
        - setCBOR(t core.CType, field string, val <font color=blue>interface</font>{}) error
        - setObject(t core.CType, field string, val *Document) error
        - setAndParseType(field string, value <font color=blue>interface</font>{}) error
        - setAndParseObjectType(value <font color=blue>map</font>[string]<font color=blue>interface</font>{}) error
        - toMap() (<font color=blue>map</font>[string]<font color=blue>interface</font>{}, error)
        - toMapWithKey() (<font color=blue>map</font>[string]<font color=blue>interface</font>{}, error)
        - newField(t core.CType, name string, schemaType ...string) Field

        + Key() key.DocKey
        + Get(field string) (<font color=blue>interface</font>{}, error)
        + GetValue(field string) (Value, error)
        + GetValueWithField(f Field) (Value, error)
        + SetWithJSON(patch []byte) error
        + Set(field string, value <font color=blue>interface</font>{}) error
        + SetAs(field string, value <font color=blue>interface</font>{}, t core.CType) error
        + Delete(fields ...string) error
        + Fields() <font color=blue>map</font>[string]Field
        + Values() <font color=blue>map</font>[Field]{packageName}Value
        + Bytes() ([]byte, error)
        + String() string
        + ToMap() (<font color=blue>map</font>[string]<font color=blue>interface</font>{}, error)

    }
    class EncProperty << (S,Aquamarine) >> {
        + Desc base.FieldDescription
        + Raw []byte

        + Decode() (core.CType, <font color=blue>interface</font>{}, error)

    }
    class EncodedDocument << (S,Aquamarine) >> {
        + Key []byte
        + Schema *base.SchemaDescription
        + Properties <font color=blue>map</font>[base.FieldDescription]*EncProperty

        + Reset() 
        + Decode() (*Document, error)
        + DecodeToMap() (<font color=blue>map</font>[string]<font color=blue>interface</font>{}, error)

    }
    interface Field  {
        + Key() go-datastore.Key
        + Name() string
        + Type() core.CType
        + SchemaType() string

    }
    class Int64Value << (S,Aquamarine) >> {
        + Bytes() ([]byte, error)

    }
    class List << (S,Aquamarine) >> {
    }
    interface ReadableValue  {
        + Read() (<font color=blue>interface</font>{}, error)

    }
    class Scalar << (S,Aquamarine) >> {
    }
    class SimpleDocument << (S,Aquamarine) >> {
        + Get(field string) <font color=blue>interface</font>{}

    }
    class StringValue << (S,Aquamarine) >> {
        + Bytes() ([]byte, error)

    }
    interface Value  {
        + Value() <font color=blue>interface</font>{}
        + IsDocument() bool
        + Type() core.CType
        + IsDirty() bool
        + Clean() 
        + IsDelete() bool
        + Delete() 

    }
    interface ValueType  {
    }
    interface WriteableValue  {
        + Bytes() ([]byte, error)

    }
    class cborValue << (S,Aquamarine) >> {
        + Bytes() ([]byte, error)

    }
    class document.EPTuple << (T, #FF7700) >>  {
    }
    class simpleField << (S,Aquamarine) >> {
        - name string
        - key go-datastore.Key
        - crdtType core.CType
        - schemaType string

        + Name() string
        + Type() core.CType
        + Key() go-datastore.Key
        + SchemaType() string

    }
    class simpleValue << (S,Aquamarine) >> {
        - t core.CType
        - value <font color=blue>interface</font>{}
        - isDirty bool
        - delete bool

        + Value() <font color=blue>interface</font>{}
        + Type() core.CType
        + IsDocument() bool
        + IsDirty() bool
        + Clean() 
        + Delete() 
        + IsDelete() bool

    }
}
"document.simpleValue" *- - "document.Int64Value"
"document.Value" *- - "document.ReadableValue"
"document.simpleValue" *- - "document.StringValue"
"document.Value" *- - "document.WriteableValue"
"document.simpleValue" *- - "document.cborValue"

"document.WriteableValue" <|- - "document.Document"
"document.WriteableValue" <|- - "document.Int64Value"
"document.WriteableValue" <|- - "document.StringValue"
"document.WriteableValue" <|- - "document.cborValue"
"document.Field" <|- - "document.simpleField"
"document.Value" <|- - "document.simpleValue"

namespace fetcher {
    class BlockFetcher << (S,Aquamarine) >> {
    }
    class DocumentFetcher << (S,Aquamarine) >> {
        - col *base.CollectionDescription
        - index *base.IndexDescription
        - reverse bool
        - txn core.Txn
        - spans core.Spans
        - curSpanIndex int
        - schemaFields <font color=blue>map</font>[uint32]base.FieldDescription
        - fields []*base.FieldDescription
        - doc *document.EncodedDocument
        - decodedDoc *document.Document
        - initialized bool
        - kv *core.KeyValue
        - kvIter query.Results
        - kvEnd bool
        - indexKey []byte

        - nextKey() (bool, error)
        - nextKV() (bool, *core.KeyValue, error)
        - processKV(kv *core.KeyValue) error

        + Init(col *base.CollectionDescription, index *base.IndexDescription, fields []*base.FieldDescription, reverse bool) error
        + Start(ctx context.Context, txn core.Txn, spans core.Spans) error
        + KVEnd() bool
        + KV() *core.KeyValue
        + NextKey() (bool, error)
        + NextKV() (bool, *core.KeyValue, error)
        + ProcessKV(kv *core.KeyValue) error
        + FetchNext() (*document.EncodedDocument, error)
        + FetchNextDecoded() (*document.Document, error)
        + FetchNextMap() ([]byte, <font color=blue>map</font>[string]<font color=blue>interface</font>{}, error)
        + ReadIndexKey(key core.Key) core.Key
        + Close() error

    }
    class HeadFetcher << (S,Aquamarine) >> {
        - spans core.Spans
        - cid *go-cid.Cid
        - kv *core.KeyValue
        - kvIter query.Results
        - kvEnd bool

        - nextKey() (bool, error)
        - nextKV() (bool, *core.KeyValue, error)
        - processKV(kv *core.KeyValue) error

        + Start(ctx context.Context, txn core.Txn, spans core.Spans) error
        + FetchNext() (*go-cid.Cid, error)

    }
}


namespace http {
    class Server << (S,Aquamarine) >> {
        - db client.DB
        - router *chi.Mux

        - ping(w http.ResponseWriter, r *http.Request) 
        - dump(w http.ResponseWriter, r *http.Request) 
        - execGQL(w http.ResponseWriter, r *http.Request) 
        - loadSchema(w http.ResponseWriter, r *http.Request) 
        - getBlock(w http.ResponseWriter, r *http.Request) 

        + Listen(addr string) 

    }
}


namespace key {
    class DocKey << (S,Aquamarine) >> {
        - version uint16
        - uuid go.uuid.UUID
        - cid go-cid.Cid
        - peerID string

        - subrec(subparts []string) DocKey

        + UUID() go.uuid.UUID
        + String() string
        + Bytes() []byte
        + Verify(ctx context.Context, data go-cid.Cid, peerID string) bool
        + Sub(subname string) DocKey

    }
}
"go-datastore.Key" *- - "key.DocKey"


namespace parser {
    class CommitSelect << (S,Aquamarine) >> {
        + Alias string
        + Name string
        + Type CommitType
        + DocKey string
        + FieldName string
        + Cid string
        + Limit *Limit
        + OrderBy *OrderBy
        + Fields []Selection
        + Statement *ast.Field

        + GetRoot() SelectionType
        + GetStatement() ast.Node
        + GetName() string
        + GetAlias() string
        + GetSelections() []Selection
        + ToSelect() *Select

    }
    class EvalContext << (S,Aquamarine) >> {
    }
    class Field << (S,Aquamarine) >> {
        + Name string
        + Alias string
        + Root SelectionType
        + Statement *ast.Field

        + GetRoot() SelectionType
        + GetSelections() []Selection
        + GetName() string
        + GetAlias() string
        + GetStatement() ast.Node

    }
    class Filter << (S,Aquamarine) >> {
        + Conditions <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Statement *ast.ObjectValue

    }
    class GroupBy << (S,Aquamarine) >> {
        + Fields []string

    }
    class Limit << (S,Aquamarine) >> {
        + Limit int64
        + Offset int64

    }
    class Mutation << (S,Aquamarine) >> {
        + Name string
        + Alias string
        + Type MutationType
        + Schema string
        + IDs []string
        + Filter *Filter
        + Data string
        + Fields []Selection
        + Statement *ast.Field

        + GetRoot() SelectionType
        + GetStatement() ast.Node
        + GetSelections() []Selection
        + GetName() string
        + GetAlias() string
        + ToSelect() *Select

    }
    class ObjectPayload << (S,Aquamarine) >> {
        + Object <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Array []<font color=blue>interface</font>{}

    }
    class OperationDefinition << (S,Aquamarine) >> {
        + Name string
        + Selections []Selection
        + Statement *ast.OperationDefinition

        + GetStatement() ast.Node

    }
    class OrderBy << (S,Aquamarine) >> {
        + Conditions []SortCondition
        + Statement *ast.ObjectValue

    }
    class Query << (S,Aquamarine) >> {
        + Queries []*OperationDefinition
        + Mutations []*OperationDefinition
        + Statement *ast.Document

        + GetStatement() ast.Node

    }
    class Select << (S,Aquamarine) >> {
        + Name string
        + Alias string
        + CollectionName string
        + Root SelectionType
        + DocKey string
        + CID string
        + Filter *Filter
        + Limit *Limit
        + OrderBy *OrderBy
        + GroupBy *GroupBy
        + Fields []Selection
        + Statement *ast.Field

        + GetRoot() SelectionType
        + GetStatement() ast.Node
        + GetSelections() []Selection
        + GetName() string
        + GetAlias() string

    }
    interface Selection  {
        + GetName() string
        + GetAlias() string
        + GetSelections() []Selection
        + GetRoot() SelectionType

    }
    class SortCondition << (S,Aquamarine) >> {
        + Field string
        + Direction SortDirection

    }
    interface Statement  {
        + GetStatement() ast.Node

    }
    class parser.CommitType << (T, #FF7700) >>  {
    }
    class parser.MutationType << (T, #FF7700) >>  {
    }
    class parser.SelectionType << (T, #FF7700) >>  {
    }
    class parser.SortDirection << (T, #FF7700) >>  {
    }
    class parser.parseFn << (T, #FF7700) >>  {
    }
    class "<font color=blue>func</font>(*ast.ObjectValue) (<font color=blue>interface</font>{}, error)" as fontcolorbluefuncfontastObjectValuefontcolorblueinterfacefonterror {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
}
"context.Context" *- - "parser.EvalContext"
"parser.Statement" *- - "parser.Selection"

"parser.Selection" <|- - "parser.CommitSelect"
"parser.Statement" <|- - "parser.CommitSelect"
"parser.Selection" <|- - "parser.Field"
"parser.Statement" <|- - "parser.Field"
"parser.Selection" <|- - "parser.Mutation"
"parser.Statement" <|- - "parser.Mutation"
"parser.Statement" <|- - "parser.OperationDefinition"
"parser.Statement" <|- - "parser.Query"
"parser.Selection" <|- - "parser.Select"
"parser.Statement" <|- - "parser.Select"

namespace planner {
    class ExecutionContext << (S,Aquamarine) >> {
    }
    interface MultiNode  {
        + Children() []planNode
        + AddChild( string,  planNode) error
        + ReplaceChildAt( int,  string,  planNode) error
        + SetMultiScanner( *multiScanNode) 

    }
    class PlanContext << (S,Aquamarine) >> {
    }
    class Planner << (S,Aquamarine) >> {
        - txn client.Txn
        - db client.DB
        - ctx context.Context
        - evalCtx parser.EvalContext

        - commitSelectLatest(parsed *parser.CommitSelect) (*commitSelectNode, error)
        - commitSelectBlock(parsed *parser.CommitSelect) (*commitSelectNode, error)
        - commitSelectAll(parsed *parser.CommitSelect) (*commitSelectNode, error)
        - getSource(collection string) (planSource, error)
        - getCollectionScanPlan(collection string) (planSource, error)
        - getCollectionDesc(name string) (base.CollectionDescription, error)
        - newPlan(stmt parser.Statement) (planNode, error)
        - newObjectMutationPlan(stmt *parser.Mutation) (planNode, error)
        - makePlan(stmt parser.Statement) (planNode, error)
        - optimizePlan(plan planNode) error
        - expandPlan(plan planNode) error
        - expandSelectTopNodePlan(plan *selectTopNode) error
        - expandMultiNode(plan MultiNode) error
        - expandTypeIndexJoinPlan(plan *typeIndexJoin) error
        - expandGroupNodePlan(plan *selectTopNode) error
        - walkAndReplacePlan(plan planNode, target planNode, replace planNode) error
        - walkAndFindPlanType(plan planNode, target planNode) planNode
        - queryDocs(query *parser.Query) ([]<font color=blue>map</font>[string]<font color=blue>interface</font>{}, error)
        - query(query *parser.Query) (planNode, error)
        - render(parsed *parser.Select) *renderNode
        - makeTypeIndexJoin(parent *selectNode, source planNode, subType *parser.Select) (*typeIndexJoin, error)
        - makeTypeJoinOne(parent *selectNode, source planNode, subType *parser.Select) (*typeJoinOne, error)
        - makeTypeJoinMany(parent *selectNode, source planNode, subType *parser.Select) (*typeJoinMany, error)
        - newContainerValuesNode(ordering []parser.SortCondition) *valuesNode

        + CommitSelect(parsed *parser.CommitSelect) (planNode, error)
        + CreateDoc(parsed *parser.Mutation) (planNode, error)
        + HeadScan() *headsetScanNode
        + DAGScan() *dagScanNode
        + DeleteDocs(parsed *parser.Mutation) (planNode, error)
        + GroupBy(n *parser.GroupBy, childSelect *parser.Select) (*groupNode, error)
        + Limit(n *parser.Limit) (*limitNode, error)
        + Scan() *scanNode
        + SubSelect(parsed *parser.Select) (planNode, error)
        + SelectFromSource(parsed *parser.Select, source planNode, fromCollection bool, providedSourceInfo *sourceInfo) (planNode, error)
        + Select(parsed *parser.Select) (planNode, error)
        + OrderBy(n *parser.OrderBy) (*sortNode, error)
        + UpdateDocs(parsed *parser.Mutation) (planNode, error)

    }
    class QueryExecutor << (S,Aquamarine) >> {
        + SchemaManager *schema.SchemaManager

        - parseQueryString(query string) (*parser.Query, error)

        + MakeSelectQuery(ctx context.Context, db client.DB, txn client.Txn, selectStmt *parser.Select) (Query, error)
        + ExecQuery(ctx context.Context, db client.DB, txn client.Txn, query string, args ...<font color=blue>interface</font>{}) ([]<font color=blue>map</font>[string]<font color=blue>interface</font>{}, error)

    }
    class Statement << (S,Aquamarine) >> {
    }
    class allSortStrategy << (S,Aquamarine) >> {
        - valueNode *valuesNode

        + Add(doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}) error
        + Finish() 
        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Close() 

    }
    interface appendNode  {
        + Append() bool

    }
    class baseNode << (S,Aquamarine) >> {
        - plan planNode

        + Init() error
        + Start() error
        + Next() (bool, error)
        + Spans(spans core.Spans) 
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Close() error
        + Source() planNode

    }
    class commitSelectNode << (S,Aquamarine) >> {
        - p *Planner
        - source *dagScanNode
        - subRenderInfo <font color=blue>map</font>[string]renderInfo
        - doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}

        + Init() error
        + Start() error
        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Spans(spans core.Spans) 
        + Close() error
        + Source() planNode

    }
    class commitSelectTopNode << (S,Aquamarine) >> {
        - p *Planner
        - plan planNode

        + Init() error
        + Start() error
        + Next() (bool, error)
        + Spans(spans core.Spans) 
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Source() planNode
        + Close() error
        + Append() bool

    }
    class createNode << (S,Aquamarine) >> {
        - p *Planner
        - collection client.Collection
        - newDocStr string
        - doc *document.Document
        - err error
        - returned bool

        + Init() error
        + Start() error
        + Next() (bool, error)
        + Spans(spans core.Spans) 
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Close() error
        + Source() planNode

    }
    class dagScanNode << (S,Aquamarine) >> {
        - p *Planner
        - cid *go-cid.Cid
        - field string
        - depthLimit uint32
        - depthVisited uint32
        - visitedNodes <font color=blue>map</font>[string]bool
        - queuedCids *list.List
        - headset *headsetScanNode
        - doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Close() error
        + Source() planNode
        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}

    }
    class dataSource << (S,Aquamarine) >> {
        - pipeNode *pipeNode
        - parentSource planNode
        - childSource planNode
        - childName string
        - lastParentDocIndex int
        - lastChildDocIndex int

        - mergeParent(keyFields []string, destination *orderedMap) (<font color=blue>map</font>[string]<font color=blue>interface</font>{}, bool, error)
        - appendChild(keyFields []string, valuesByKey *orderedMap) (<font color=blue>map</font>[string]<font color=blue>interface</font>{}, bool, error)

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Close() error
        + Source() planNode

    }
    class deleteNode << (S,Aquamarine) >> {
        - p *Planner
        - collection client.Collection
        - filter *parser.Filter
        - ids []string
        - patch string
        - isUpdating bool
        - deleteIter *valuesNode
        - results planNode

        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Spans(spans core.Spans) 
        + Init() error
        + Start() error
        + Close() error
        + Source() planNode

    }
    class groupNode << (S,Aquamarine) >> {
        - p *Planner
        - childSelect *parser.Select
        - groupByFields []string
        - dataSource dataSource
        - values []<font color=blue>map</font>[string]<font color=blue>interface</font>{}
        - currentIndex int
        - currentValue <font color=blue>map</font>[string]<font color=blue>interface</font>{}

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Close() error
        + Source() planNode
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Next() (bool, error)

    }
    class headsetScanNode << (S,Aquamarine) >> {
        - p *Planner
        - key core.Key
        - spans core.Spans
        - scanInitialized bool
        - cid *go-cid.Cid
        - fetcher fetcher.HeadFetcher

        - initScan() error

        + Init() error
        + Spans(spans core.Spans) 
        + Start() error
        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Close() error
        + Source() planNode

    }
    class limitNode << (S,Aquamarine) >> {
        - p *Planner
        - plan planNode
        - limit int64
        - offset int64
        - rowIndex int64

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Close() error
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Next() (bool, error)
        + Source() planNode

    }
    interface mergeNode  {
        + Merge() bool

    }
    class multiScanNode << (S,Aquamarine) >> {
        - numReaders int
        - numCalls int
        - lastBool bool
        - lastErr error

        - addReader() 

        + Source() planNode
        + Next() (bool, error)

    }
    class orderedMap << (S,Aquamarine) >> {
        - values []<font color=blue>map</font>[string]<font color=blue>interface</font>{}
        - indexesByKey <font color=blue>map</font>[string]int

        - mergeParent(key string, childAddress string, value <font color=blue>map</font>[string]<font color=blue>interface</font>{}) 
        - appendChild(key string, childAddress string, value <font color=blue>map</font>[string]<font color=blue>interface</font>{}) 

    }
    class parallelNode << (S,Aquamarine) >> {
        - p *Planner
        - children []planNode
        - childFields []string
        - multiscan *multiScanNode
        - doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}

        - applyToPlans(fn <font color=blue>func</font>(planNode) error) error
        - nextMerge(index int, plan mergeNode) (bool, error)
        - nextAppend(index int, plan appendNode) (bool, error)

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Close() error
        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Source() planNode
        + Children() []planNode
        + AddChild(field string, node planNode) error
        + ReplaceChildAt(i int, field string, node planNode) error
        + SetMultiScanner(ms *multiScanNode) 

    }
    class pipeNode << (S,Aquamarine) >> {
        - source planNode
        - docs *container.DocumentContainer
        - docIndex int

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Close() error
        + Source() planNode
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Next() (bool, error)

    }
    interface planNode  {
        + Init() error
        + Start() error
        + Next() (bool, error)
        + Spans( core.Spans) 
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Source() planNode
        + Close() error

    }
    class planSource << (S,Aquamarine) >> {
        - info sourceInfo
        - plan planNode

    }
    class planner.Query << (T, #FF7700) >>  {
    }
    class renderInfo << (S,Aquamarine) >> {
        - sourceFieldName string
        - destinationFieldName string
        - children []renderInfo

        - render(src <font color=blue>map</font>[string]<font color=blue>interface</font>{}, destination <font color=blue>map</font>[string]<font color=blue>interface</font>{}) 

    }
    class renderNode << (S,Aquamarine) >> {
        - p *Planner
        - plan planNode
        - renderInfo topLevelRenderInfo

        + Init() error
        + Start() error
        + Next() (bool, error)
        + Spans(spans core.Spans) 
        + Close() error
        + Source() planNode
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}

    }
    class scanNode << (S,Aquamarine) >> {
        - p *Planner
        - desc base.CollectionDescription
        - index *base.IndexDescription
        - fields []*base.FieldDescription
        - doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        - docKey []byte
        - spans core.Spans
        - reverse bool
        - filter *parser.Filter
        - scanInitialized bool
        - fetcher fetcher.DocumentFetcher

        - initCollection(desc base.CollectionDescription) error
        - initScan() error

        + Init() error
        + Start() error
        + Next() (bool, error)
        + Spans(spans core.Spans) 
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Close() error
        + Source() planNode
        + Merge() bool

    }
    class selectNode << (S,Aquamarine) >> {
        - p *Planner
        - source planNode
        - origSource planNode
        - sourceInfo sourceInfo
        - renderInfo *renderInfo
        - doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        - filter *parser.Filter
        - groupSelect *parser.Select

        - addSubPlan(field string, plan planNode) error
        - initSource(parsed *parser.Select) error
        - initFields(parsed *parser.Select) error

        + Init() error
        + Start() error
        + Next() (bool, error)
        + Spans(spans core.Spans) 
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Close() error
        + Source() planNode

    }
    class selectTopNode << (S,Aquamarine) >> {
        - source planNode
        - group *groupNode
        - sort *sortNode
        - limit *limitNode
        - render *renderNode
        - plan planNode

        + Init() error
        + Start() error
        + Next() (bool, error)
        + Spans(spans core.Spans) 
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Source() planNode
        + Close() error

    }
    class sortNode << (S,Aquamarine) >> {
        - p *Planner
        - plan planNode
        - ordering []parser.SortCondition
        - valueIter valueIterator
        - sortStrategy sortingStrategy
        - needSort bool

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Next() (bool, error)
        + Close() error
        + Source() planNode

    }
    interface sortingStrategy  {
        + Add( <font color=blue>map</font>[string]<font color=blue>interface</font>{}) error
        + Finish() 

    }
    class sourceInfo << (S,Aquamarine) >> {
        - collectionDescription base.CollectionDescription

    }
    class topLevelRenderInfo << (S,Aquamarine) >> {
        - children []renderInfo

    }
    class typeIndexJoin << (S,Aquamarine) >> {
        - p *Planner
        - joinPlan planNode

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Close() error
        + Source() planNode
        + Merge() bool

    }
    class typeJoinMany << (S,Aquamarine) >> {
        - p *Planner
        - root planNode
        - rootName string
        - index *scanNode
        - subType planNode
        - subTypeName string

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Close() error
        + Source() planNode

    }
    class typeJoinOne << (S,Aquamarine) >> {
        - p *Planner
        - root planNode
        - subType planNode
        - rootName string
        - subTypeName string
        - subTypeFieldName string
        - primary bool
        - spans core.Spans

        - valuesSecondary(doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}) <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        - valuesPrimary(doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}) <font color=blue>map</font>[string]<font color=blue>interface</font>{}

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Close() error
        + Source() planNode

    }
    class updateNode << (S,Aquamarine) >> {
        - p *Planner
        - collection client.Collection
        - filter *parser.Filter
        - ids []string
        - patch string
        - isUpdating bool
        - updateIter *valuesNode
        - results planNode

        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Spans(spans core.Spans) 
        + Init() error
        + Start() error
        + Close() error
        + Source() planNode

    }
    interface valueIterator  {
        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Close() 

    }
    class valuesNode << (S,Aquamarine) >> {
        - p *Planner
        - ordering []parser.SortCondition
        - docs *container.DocumentContainer
        - docIndex int

        - docValueLess(da <font color=blue>map</font>[string]<font color=blue>interface</font>{}, db <font color=blue>map</font>[string]<font color=blue>interface</font>{}) bool

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Close() 
        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Source() planNode
        + SortAll() 
        + Less(i int, j int) bool
        + Swap(i int, j int) 
        + Len() int

    }
}
"context.Context" *- - "planner.ExecutionContext"
"planner.planNode" *- - "planner.MultiNode"
"context.Context" *- - "planner.PlanContext"
"planner.planNode" *- - "planner.appendNode"
"planner.planNode" *- - "planner.mergeNode"
"planner.scanNode" *- - "planner.multiScanNode"
"planner.valueIterator" *- - "planner.sortingStrategy"

"planner.sortingStrategy" <|- - "planner.allSortStrategy"
"planner.valueIterator" <|- - "planner.allSortStrategy"
"planner.planNode" <|- - "planner.baseNode"
"planner.planNode" <|- - "planner.commitSelectNode"
"planner.appendNode" <|- - "planner.commitSelectTopNode"
"planner.planNode" <|- - "planner.commitSelectTopNode"
"planner.planNode" <|- - "planner.createNode"
"planner.planNode" <|- - "planner.dagScanNode"
"planner.planNode" <|- - "planner.deleteNode"
"planner.planNode" <|- - "planner.groupNode"
"planner.planNode" <|- - "planner.headsetScanNode"
"planner.planNode" <|- - "planner.limitNode"
"planner.MultiNode" <|- - "planner.parallelNode"
"planner.planNode" <|- - "planner.parallelNode"
"planner.planNode" <|- - "planner.pipeNode"
"planner.planNode" <|- - "planner.renderNode"
"planner.mergeNode" <|- - "planner.scanNode"
"planner.planNode" <|- - "planner.scanNode"
"planner.planNode" <|- - "planner.selectNode"
"planner.planNode" <|- - "planner.selectTopNode"
"planner.planNode" <|- - "planner.sortNode"
"planner.mergeNode" <|- - "planner.typeIndexJoin"
"planner.planNode" <|- - "planner.typeIndexJoin"
"planner.planNode" <|- - "planner.typeJoinMany"
"planner.planNode" <|- - "planner.typeJoinOne"
"planner.planNode" <|- - "planner.updateNode"
"planner.valueIterator" <|- - "planner.valuesNode"

namespace schema {
    class Generator << (S,Aquamarine) >> {
        - typeDefs []*graphql.Object
        - manager *SchemaManager
        - expandedFields <font color=blue>map</font>[string]bool

        - expandInputArgument(obj *graphql.Object) error
        - createExpandedFieldSingle(f *graphql.FieldDefinition, t *graphql.Object) (*graphql.Field, error)
        - createExpandedFieldList(f *graphql.FieldDefinition, t *graphql.Object) (*graphql.Field, error)
        - buildTypesFromAST(document *ast.Document) ([]*graphql.Object, error)
        - genTypeMutationFields(obj *graphql.Object, filterInput *graphql.InputObject) ([]*graphql.Field, error)
        - genTypeMutationCreateField(obj *graphql.Object) (*graphql.Field, error)
        - genTypeMutationUpdateField(obj *graphql.Object, filter *graphql.InputObject) (*graphql.Field, error)
        - genTypeMutationDeleteField(obj *graphql.Object, filter *graphql.InputObject) (*graphql.Field, error)
        - genTypeFieldsEnum(obj *graphql.Object) *graphql.Enum
        - genTypeFilterArgInput(obj *graphql.Object) *graphql.InputObject
        - genTypeFilterBaseArgInput(obj *graphql.Object) *graphql.InputObject
        - genTypeHavingArgInput(obj *graphql.Object) *graphql.InputObject
        - genTypeHavingBlockInput(obj *graphql.Object) *graphql.InputObject
        - genTypeOrderArgInput(obj *graphql.Object) *graphql.InputObject
        - genTypeQueryableFieldList(obj *graphql.Object, config queryInputTypeConfig) *graphql.Field

        + CreateDescriptions(types []*graphql.Object) ([]base.CollectionDescription, error)
        + FromSDL(schema string) ([]*graphql.Object, *ast.Document, error)
        + FromAST(document *ast.Document) ([]*graphql.Object, error)
        + GenerateQueryInputForGQLType(obj *graphql.Object) (*graphql.Field, error)
        + GenerateMutationInputForGQLType(obj *graphql.Object) ([]*graphql.Field, error)
        + Reset() 

    }
    class Relation << (S,Aquamarine) >> {
        - name string
        - relType uint8
        - types []uint8
        - schemaTypes []string
        - fields []string
        - finalized bool

        - finalize() error
        - schemaTypeExists(t string) (int, bool)

        + Kind() uint8
        + Valid() bool
        + SchemaTypeIsPrimary(t string) bool
        + SchemaTypeIsOne(t string) bool
        + SchemaTypeIsMany(t string) bool
        + GetField(field string) (string, uint8, bool)
        + GetFieldFromSchemaType(schemaType string) (string, uint8, bool)

    }
    class RelationManager << (S,Aquamarine) >> {
        - relations <font color=blue>map</font>[string]*Relation

        - validate() ([]*Relation, bool)
        - register(rel *Relation) (bool, error)

        + GetRelations() 
        + GetRelation(name string) (*Relation, error)
        + GetRelationByDescription(field string, schemaType string, objectType string) *Relation
        + NumRelations() int
        + Exists(name string) bool
        + RegisterSingle(name string, schemaType string, schemaField string, relType uint8) (bool, error)
        + RegisterOneToOne(name string, primaryType string, primaryField string, secondaryType string, secondaryField string) (bool, error)
        + RegisterOneToMany(name string, oneType string, oneField string, manyType string, manyField string) (bool, error)
        + RegisterManyToMany(name string, type1 string, type2 string) (bool, error)

    }
    class SchemaManager << (S,Aquamarine) >> {
        - schema graphql.Schema

        + Generator *Generator
        + Relations *RelationManager

        + NewGenerator() *Generator
        + Schema() *graphql.Schema
        + ResolveTypes() error

    }
    class Type << (S,Aquamarine) >> {
        + Object *graphql.Object

    }
    class queryInputTypeConfig << (S,Aquamarine) >> {
        - filter *graphql.InputObject
        - groupBy *graphql.Enum
        - having *graphql.InputObject
        - order *graphql.InputObject

    }
}
"graphql.ObjectConfig" *- - "schema.Type"


namespace store {
    class bstore << (S,Aquamarine) >> {
        - store core.DSReaderWriter
        - rehash bool

        + HashOnRead(_ context.Context, enabled bool) 
        + Get(ctx context.Context, k go-cid.Cid) (go-block-format.Block, error)
        + Put(ctx context.Context, block go-block-format.Block) error
        + PutMany(ctx context.Context, blocks []go-block-format.Block) error
        + Has(ctx context.Context, k go-cid.Cid) (bool, error)
        + GetSize(ctx context.Context, k go-cid.Cid) (int, error)
        + DeleteBlock(ctx context.Context, k go-cid.Cid) error
        + AllKeysChan(ctx context.Context) (<font color=blue>chan</font> go-cid.Cid, error)

    }
    class dagStore << (S,Aquamarine) >> {
        - store core.DSReaderWriter

    }
}
"go-ipfs-blockstore.Blockstore" *- - "store.dagStore"


namespace tests_test {
    class QueryTestCase << (S,Aquamarine) >> {
        + Description string
        + Query string
        + Docs <font color=blue>map</font>[int][]string
        + Updates <font color=blue>map</font>[int][]string
        + Results []<font color=blue>map</font>[string]<font color=blue>interface</font>{}

    }
}


namespace utils {
    class ProxyStore << (S,Aquamarine) >> {
        - frontend go-datastore.Datastore
        - backends []go-datastore.Datastore

        + Get(ctx context.Context, key datastore.Key) ([]byte, error)
        + Has(ctx context.Context, key datastore.Key) (bool, error)
        + GetSize(ctx context.Context, key datastore.Key) (int, error)
        + Query(ctx context.Context, q query.Query) (query.Results, error)
        + Put(ctx context.Context, key datastore.Key, value []byte) error
        + Delete(ctx context.Context, key datastore.Key) error
        + Sync(ctx context.Context, prefix datastore.Key) error
        + Close() error

    }
}


"__builtin__.byte" #.. "core.CType"
"__builtin__.int" #.. "parser.CommitType"
"__builtin__.int" #.. "parser.MutationType"
"__builtin__.int" #.. "parser.SelectionType"
"__builtin__.string" #.. "parser.SortDirection"
"__builtin__.uint32" #.. "base.DataEncoding"
"__builtin__.uint32" #.. "base.FieldID"
"__builtin__.uint8" #.. "base.FieldKind"
"core.[]Span" #.. "core.Spans"
"crdt.fontcolorbluefuncfontcoreMultiStoreMerkleCRDTInitFn" #.. "crdt.MerkleCRDTFactory"
"crdt.fontcolorbluefuncfontgodatastoreKeyMerkleCRDT" #.. "crdt.MerkleCRDTInitFn"
"document.[]EncProperty" #.. "document.EPTuple"
"parser.fontcolorbluefuncfontastObjectValuefontcolorblueinterfacefonterror" #.. "parser.parseFn"
"planner.planNode" #.. "planner.Query"
@enduml

@startuml



skinparam backgroundColor transparent
skinparam useBetaStyle false






<style>
  root {
    BackgroundColor transparent
    FontColor #FFF
    HyperLinkColor #fd7e14
    LineColor #55B2DE
    LineThickness 1
    Margin 10
    Padding 6
    Shadowing 0.0
  }
  node {
   Padding 15
   roundcorner 20
   BackgroundColor #2A9FD6-#55B2DE
  }
  caption {
    LineThickness 0
  }
  footer {
    LineThickness 0
  }
  groupHeader {
    BackgroundColor #555
    FontColor #9933CC
    FontStyle bold
  }
  header {
    LineThickness 0
  }
  referenceHeader {
    BackgroundColor transparent
    FontColor #ADAFAE
    FontStyle bold
  }
  separator {
    BackgroundColor #FFF
    FontColor transparent
    FontStyle bold
  }
  title {
	FontSize 20
	BorderRoundCorner            8
	BorderThickness 	         1
	BackgroundColor  #444444-#555
	FontColor #2A9FD6
	BorderColor #555
  }
  nwdiagDiagram {
	network {
			FontColor #FFF
	BorderColor #55B2DE
	BackgroundColor #2A9FD6    
		LineColor #2A9FD6
		LineThickness 1.0
		FontColor #227FAB
	}
	server {
			FontColor #FFF
	BorderColor #55B2DE
	BackgroundColor #2A9FD6
	}
	arrow {
		FontColor #227FAB
		LineColor #227FAB
	}
	group {
		BackGroundColor #222
		LineColor #4E4E4E
		LineThickness 2.0
		Margin 5
		Padding 5
	}
  }
  ganttDiagram {
	task {
			FontColor #FFF
	BorderColor #55B2DE
	BackgroundColor #2A9FD6
		LineColor #2A9FD6
		Margin 10
		Padding 6
	}
	note {
		FontColor #FFF
		LineColor #AD5CD6
		BackGroundColor #9933CC
	}
	separator {
		LineColor #555
		BackGroundColor #555-#777777
		FontColor #FFF
	}
	milestone {
		FontColor #9933CC
		FontSize 16
		FontStyle italic
		BackGroundColor #555
		LineColor #777777
	}
	timeline {
		BackgroundColor #555
		FontColor #FFF
	}
	closed {
		BackgroundColor #FFA033
		FontColor #FFF
	}
  }
</style>
skinparam defaultFontName       "Verdana"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           8
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               5
skinparam ArrowColor            #ADAFAE
skinparam stereotype {
    CBackgroundColor #777777
    CBorderColor #444444
    ABackgroundColor #5F8F00
    ABorderColor #92C233
    IBackgroundColor #A30000
    IBorderColor #D63333
    EBackgroundColor #CC6D00
    EBorderColor #FFA033
    NBackgroundColor #9F161B
    NBorderColor #AD5CD6
}
skinparam title {
	FontColor	                 #2A9FD6
	BorderColor	                 #777777
	FontSize	    	         20
	BorderRoundCorner            8
	BorderThickness 	         1
	BackgroundColor              #444444-#555
}


skinparam legend {
	BackgroundColor #555
	BorderColor #777777
	FontColor #ADAFAE
}

skinparam swimlane {
	BorderColor #9933CC
	BorderThickness 2
	TitleBackgroundColor  #444444-#555
	TitleFontColor #2A9FD6
}


skinparam activity {
		FontColor #FFF
	BorderColor #55B2DE
	BackgroundColor #2A9FD6
	BarColor #77B300
	StartColor #9933CC
	EndColor #9933CC
	DiamondBackgroundColor #444444
  	DiamondBorderColor #777777
  	DiamondFontColor #FFF
}


skinparam participant {
		FontColor #FFF
	BorderColor #55B2DE
	BackgroundColor #2A9FD6
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #FFF
	BorderColor #55B2DE
	BackgroundColor #2A9FD6
	FontColor #2A9FD6
}


skinparam arrow {
	Thickness 3
	Color #2A9FD6
	FontColor #FFF
}


skinparam sequence {
	BorderColor #2A9FD6
	TitleFontColor #2A9FD6
	BackgroundColor transparent
	StartColor #2A9FD6
	EndColor #2A9FD6
	BoxBackgroundColor transparent
	BoxBorderColor #ADAFAE
	BoxFontColor #ADAFAE
	DelayFontColor #ADAFAE
	LifeLineBorderColor #555
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #777777
	GroupBorderColor #555
	GroupFontColor #ADAFAE
	GroupHeaderFontColor #9933CC
	GroupBackgroundColor #555
	GroupHeaderBackgroundColor transparent
	DividerBackgroundColor #ADAFAE
    DividerBorderColor #ADAFAE
    DividerBorderThickness 2
    DividerFontColor #222
	ReferenceBackgroundColor transparent
	ReferenceBorderColor #555
	ReferenceFontColor #FFF
	ReferenceHeaderBackgroundColor #555
	StereotypeFontColor #FFF
}


skinparam partition {
	BorderColor #2A9FD6
	FontColor #2A9FD6
	BackgroundColor transparent
}


skinparam collections {
		FontColor #FFF
	BorderColor #55B2DE
	BackgroundColor #2A9FD6
}


skinparam control {
		FontColor #FFF
	BorderColor #55B2DE
	BackgroundColor #2A9FD6
	FontColor #ADAFAE
}


skinparam entity {
		FontColor #FFF
	BorderColor #55B2DE
	BackgroundColor #2A9FD6
	FontColor #ADAFAE
}


skinparam boundary {
		FontColor #FFF
	BorderColor #55B2DE
	BackgroundColor #2A9FD6
	FontColor #ADAFAE
}


skinparam agent {
	BackgroundColor #FF8800
	BorderColor #CC6D00
	FontColor #ADAFAE
}


skinparam note {
	BorderThickness 1
	BackgroundColor #9933CC
	BorderColor #AD5CD6
	FontColor #FFF
}


skinparam artifact {
	BackgroundColor #ADAFAE
	BorderColor #BDBFBE
	FontColor #222
}


skinparam component {
		FontColor #FFF
	BorderColor #55B2DE
	BackgroundColor #2A9FD6
}


skinparam interface {
	BackgroundColor  #D63333
	BorderColor  #CC0000
	FontColor #ADAFAE
}


skinparam storage {
	BackgroundColor #FF8800
  	BorderColor #FFA033
	FontColor #FFF
}


skinparam node {
	BackgroundColor  #555
	BorderColor #ADAFAE
	FontColor #ADAFAE
}


skinparam cloud {
	BackgroundColor #222-black
	BorderColor #222
	FontColor #ADAFAE
}


skinparam database {
		FontColor #FFF
	BorderColor #55B2DE
	BackgroundColor #2A9FD6
	FontColor #ADAFAE
}


skinparam actor {
	FontColor #ADAFAE
}


skinparam class {
		FontColor #FFF
	BorderColor #55B2DE
	BackgroundColor #2A9FD6
	HeaderBackgroundColor #227FAB
	StereotypeFontColor #ADAFAE
	BorderThickness 1
	AttributeFontColor #222
	AttributeFontSize 11
}


skinparam object {
		FontColor #FFF
	BorderColor #55B2DE
	BackgroundColor #2A9FD6
	StereotypeFontColor #ADAFAE
	BorderThickness 1
	AttributeFontColor #FFF
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #FFF
	BorderColor #55B2DE
	BackgroundColor #2A9FD6
	BorderThickness 2
	StereotypeFontColor #2A9FD6
}


skinparam rectangle {
		FontColor #FFF
	BorderColor #55B2DE
	BackgroundColor #2A9FD6
	BackgroundColor #444444
	BorderThickness 2
	StereotypeFontColor #2A9FD6
}


skinparam package {
	BackgroundColor #555
  	BorderColor #2A9FD6
	FontColor #2A9FD6
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #444444
  	BorderColor #FF8800
	FontColor #FF8800
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #444444
  	BorderColor #9933CC
	FontColor #9933CC
	BorderThickness 2
}


skinparam state {
		FontColor #FFF
	BorderColor #55B2DE
	BackgroundColor #2A9FD6
	StartColor #9933CC
	EndColor #9933CC
	AttributeFontColor #FFF
	AttributeFontSize 11
}


skinparam queue {
		FontColor #FFF
	BorderColor #55B2DE
	BackgroundColor #2A9FD6
}


skinparam card {
	BackgroundColor #9933CC
	BorderColor #AD5CD6
	FontColor #FFF
}


skinparam file {
	BackgroundColor #777777
	BorderColor #ADAFAE
	FontColor #ADAFAE
}


skinparam stack {
		FontColor #FFF
	BorderColor #55B2DE
	BackgroundColor #2A9FD6
}
namespace badger {
    class Datastore << (S,Aquamarine) >> {
        - closeLk sync.RWMutex
        - closed bool
        - closeOnce sync.Once
        - closing <font color=blue>chan</font> <font color=blue>struct</font>{}
        - gcDiscardRatio float64
        - gcSleep time.Duration
        - gcInterval time.Duration
        - syncWrites bool

        + DB *v3.DB

        - periodicGC() 
        - newImplicitTransaction(readOnly bool) *txn
        - gcOnce() error

        + NewTransaction(ctx context.Context, readOnly bool) (go-datastore.Txn, error)
        + Put(ctx context.Context, key go-datastore.Key, value []byte) error
        + Sync(ctx context.Context, prefix go-datastore.Key) error
        + PutWithTTL(ctx context.Context, key go-datastore.Key, value []byte, ttl time.Duration) error
        + SetTTL(ctx context.Context, key go-datastore.Key, ttl time.Duration) error
        + GetExpiration(ctx context.Context, key go-datastore.Key) (time.Time, error)
        + Get(ctx context.Context, key go-datastore.Key) ([]byte, error)
        + Has(ctx context.Context, key go-datastore.Key) (bool, error)
        + GetSize(ctx context.Context, key go-datastore.Key) (int, error)
        + Delete(ctx context.Context, key go-datastore.Key) error
        + Query(ctx context.Context, q query.Query) (query.Results, error)
        + DiskUsage(ctx context.Context) (uint64, error)
        + Close() error
        + Batch(ctx context.Context) (go-datastore.Batch, error)
        + CollectGarbage(ctx context.Context) error

    }
    class Options << (S,Aquamarine) >> {
        + GcDiscardRatio float64
        + GcInterval time.Duration
        + GcSleep time.Duration

    }
    class batch << (S,Aquamarine) >> {
        - ds *Datastore
        - writeBatch *v3.WriteBatch

        - put(key go-datastore.Key, value []byte) error
        - delete(key go-datastore.Key) error
        - commit() error
        - cancel() 

        + Put(ctx context.Context, key go-datastore.Key, value []byte) error
        + Delete(ctx context.Context, key go-datastore.Key) error
        + Commit(ctx context.Context) error
        + Cancel() error

    }
    class compatLogger << (S,Aquamarine) >> {
        - skipLogger zap.SugaredLogger

        + Warning(args ...<font color=blue>interface</font>{}) 
        + Warningf(format string, args ...<font color=blue>interface</font>{}) 

    }
    class txn << (S,Aquamarine) >> {
        - ds *Datastore
        - txn *v3.Txn
        - implicit bool

        - put(key go-datastore.Key, value []byte) error
        - putWithTTL(key go-datastore.Key, value []byte, ttl time.Duration) error
        - getExpiration(key go-datastore.Key) (time.Time, error)
        - setTTL(key go-datastore.Key, ttl time.Duration) error
        - get(key go-datastore.Key) ([]byte, error)
        - has(key go-datastore.Key) (bool, error)
        - getSize(key go-datastore.Key) (int, error)
        - delete(key go-datastore.Key) error
        - query(q query.Query) (query.Results, error)
        - commit() error
        - close() error
        - discard() 

        + Put(ctx context.Context, key go-datastore.Key, value []byte) error
        + Sync(ctx context.Context, prefix go-datastore.Key) error
        + PutWithTTL(ctx context.Context, key go-datastore.Key, value []byte, ttl time.Duration) error
        + GetExpiration(ctx context.Context, key go-datastore.Key) (time.Time, error)
        + SetTTL(ctx context.Context, key go-datastore.Key, ttl time.Duration) error
        + Get(ctx context.Context, key go-datastore.Key) ([]byte, error)
        + Has(ctx context.Context, key go-datastore.Key) (bool, error)
        + GetSize(ctx context.Context, key go-datastore.Key) (int, error)
        + Delete(ctx context.Context, key go-datastore.Key) error
        + Query(ctx context.Context, q query.Query) (query.Results, error)
        + Commit(ctx context.Context) error
        + Close() error
        + Discard(ctx context.Context) 

    }
}
"v3.Options" *- - "badger.Options"
"zap.SugaredLogger" *- - "badger.compatLogger"


namespace base {
    class CollectionDescription << (S,Aquamarine) >> {
        + Name string
        + ID uint32
        + Schema SchemaDescription
        + Indexes []IndexDescription

        + IDString() string
        + GetField(name string) (FieldDescription, bool)

    }
    class FieldDescription << (S,Aquamarine) >> {
        + Name string
        + ID FieldID
        + Kind FieldKind
        + Schema string
        + RelationName string
        + Typ core.CType
        + Meta uint8

        + IsObject() bool

    }
    class IndexDescription << (S,Aquamarine) >> {
        + Name string
        + ID uint32
        + Primary bool
        + Unique bool
        + FieldIDs []uint32
        + Junction bool
        + RelationType string

        + IDString() string

    }
    class SchemaDescription << (S,Aquamarine) >> {
        + ID uint32
        + Name string
        + Key []byte
        + FieldIDs []uint32
        + Fields []FieldDescription

        + IsEmpty() bool

    }
    class base.DataEncoding << (T, #FF7700) >>  {
    }
    class base.FieldID << (T, #FF7700) >>  {
    }
    class base.FieldKind << (T, #FF7700) >>  {
    }
}


namespace client {
    interface Collection  {
        + Description() base.CollectionDescription
        + Name() string
        + Schema() base.SchemaDescription
        + ID() uint32
        + Indexes() []base.IndexDescription
        + PrimaryIndex() base.IndexDescription
        + Index( uint32) (base.IndexDescription, error)
        + CreateIndex( base.IndexDescription) error
        + Create( context.Context,  *document.Document) error
        + CreateMany( context.Context,  []*document.Document) error
        + Update( context.Context,  *document.Document) error
        + Save( context.Context,  *document.Document) error
        + Delete( context.Context,  key.DocKey) (bool, error)
        + Exists( context.Context,  key.DocKey) (bool, error)
        + UpdateWith( context.Context,  <font color=blue>interface</font>{},  <font color=blue>interface</font>{},  ...UpdateOpt) error
        + UpdateWithFilter( context.Context,  <font color=blue>interface</font>{},  <font color=blue>interface</font>{},  ...UpdateOpt) (*UpdateResult, error)
        + UpdateWithKey( context.Context,  key.DocKey,  <font color=blue>interface</font>{},  ...UpdateOpt) (*UpdateResult, error)
        + UpdateWithKeys( context.Context,  []key.DocKey,  <font color=blue>interface</font>{},  ...UpdateOpt) (*UpdateResult, error)
        + DeleteWith( context.Context,  <font color=blue>interface</font>{},  <font color=blue>interface</font>{},  ...DeleteOpt) error
        + DeleteWithFilter( context.Context,  <font color=blue>interface</font>{},  <font color=blue>interface</font>{},  ...DeleteOpt) (*DeleteResult, error)
        + DeleteWithKey( context.Context,  key.DocKey,  <font color=blue>interface</font>{},  ...DeleteOpt) (*DeleteResult, error)
        + DeleteWithKeys( context.Context,  []key.DocKey,  <font color=blue>interface</font>{},  ...DeleteOpt) (*DeleteResult, error)
        + WithTxn( Txn) Collection

    }
    class CreateOpt << (S,Aquamarine) >> {
    }
    interface DB  {
        + CreateCollection( context.Context,  base.CollectionDescription) (Collection, error)
        + GetCollection( context.Context,  string) (Collection, error)
        + ExecQuery( context.Context,  string) *QueryResult
        + SchemaManager() *schema.SchemaManager
        + AddSchema( context.Context,  string) error
        + PrintDump(ctx context.Context) 
        + GetBlock(ctx context.Context, c go-cid.Cid) (go-block-format.Block, error)

    }
    class DeleteOpt << (S,Aquamarine) >> {
    }
    class DeleteResult << (S,Aquamarine) >> {
        + Count int64
        + DocKeys []string

    }
    class QueryResult << (S,Aquamarine) >> {
        + Errors []<font color=blue>interface</font>{}
        + Data <font color=blue>interface</font>{}

    }
    interface Sequence  {
    }
    interface Txn  {
        + Systemstore() core.DSReaderWriter
        + IsBatch() bool

    }
    class UpdateOpt << (S,Aquamarine) >> {
    }
    class UpdateResult << (S,Aquamarine) >> {
        + Count int64
        + DocKeys []string

    }
}


namespace clock {
    class MerkleClock << (S,Aquamarine) >> {
        - headstore core.DSReaderWriter
        - dagstore core.DAGStore
        - headset *heads
        - crdt core.ReplicatedData

        - putBlock(ctx context.Context, heads []go-cid.Cid, height uint64, delta core.Delta) (go-ipld-format.Node, error)

        + AddDAGNode(ctx context.Context, delta core.Delta) (go-cid.Cid, error)
        + ProcessNode(ctx context.Context, ng core.NodeGetter, root go-cid.Cid, rootPrio uint64, delta core.Delta, node go-ipld-format.Node) ([]go-cid.Cid, error)
        + Heads() *heads

    }
    class crdtNodeGetter << (S,Aquamarine) >> {
        - deltaExtractor <font color=blue>func</font>(go-ipld-format.Node) (core.Delta, error)

        + GetDelta(ctx context.Context, c go-cid.Cid) (go-ipld-format.Node, core.Delta, error)
        + GetPriority(ctx context.Context, c go-cid.Cid) (uint64, error)
        + GetDeltas(ctx context.Context, cids []go-cid.Cid) <font color=blue>chan</font> core.NodeDeltaPair

    }
    class deltaEntry << (S,Aquamarine) >> {
        - delta core.Delta
        - node go-ipld-format.Node
        - err error

        + GetNode() go-ipld-format.Node
        + GetDelta() core.Delta
        + Error() error

    }
    class heads << (S,Aquamarine) >> {
        - store core.DSReaderWriter
        - namespace go-datastore.Key

        - key(c go-cid.Cid) go-datastore.Key
        - load(ctx context.Context, c go-cid.Cid) (uint64, error)
        - write(ctx context.Context, store go-datastore.Write, c go-cid.Cid, height uint64) error
        - delete(ctx context.Context, store go-datastore.Write, c go-cid.Cid) error

        + IsHead(ctx context.Context, c go-cid.Cid) (bool, uint64, error)
        + Len(ctx context.Context) (int, error)
        + Replace(ctx context.Context, h go-cid.Cid, c go-cid.Cid, height uint64) error
        + Add(ctx context.Context, c go-cid.Cid, height uint64) error
        + List(ctx context.Context) ([]go-cid.Cid, uint64, error)

    }
}
"go-ipld-format.NodeGetter" *- - "clock.crdtNodeGetter"

"core.MerkleClock" <|- - "clock.MerkleClock"
"core.NodeGetter" <|- - "clock.crdtNodeGetter"
"core.NodeDeltaPair" <|- - "clock.deltaEntry"

namespace cmd {
    class BadgerOptions << (S,Aquamarine) >> {
        + Path string

    }
    class Config << (S,Aquamarine) >> {
        + Database Options

    }
    class MemoryOptions << (S,Aquamarine) >> {
        + Size uint64

    }
    class Options << (S,Aquamarine) >> {
        + Address string
        + Store string
        + Memory MemoryOptions
        + Badger BadgerOptions

    }
}
"v3.Options" *- - "cmd.BadgerOptions"


namespace container {
    class DocumentContainer << (S,Aquamarine) >> {
        - docs []<font color=blue>map</font>[string]<font color=blue>interface</font>{}
        - numDocs int

        + At(index int) <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Len() int
        + AddDoc(doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}) error
        + Swap(i int, j int) 
        + Close() error

    }
}


namespace core {
    interface CompositeDelta  {
        + Links() []DAGLink

    }
    class DAGLink << (S,Aquamarine) >> {
        + Name string
        + Cid go-cid.Cid

    }
    interface DAGStore  {
    }
    interface DSReaderWriter  {
    }
    interface Delta  {
        + GetPriority() uint64
        + SetPriority( uint64) 
        + Marshal() ([]byte, error)
        + Value() <font color=blue>interface</font>{}

    }
    class Key << (S,Aquamarine) >> {
        + ToDS() go-datastore.Key
        + PrefixEnd() Key
        + FieldID() (uint32, error)

    }
    class KeyValue << (S,Aquamarine) >> {
        + Key Key
        + Value []byte

    }
    interface MerkleClock  {
        + AddDAGNode(ctx context.Context, delta Delta) (go-cid.Cid, error)
        + ProcessNode( context.Context,  NodeGetter,  go-cid.Cid,  uint64,  Delta,  go-ipld-format.Node) ([]go-cid.Cid, error)

    }
    interface MultiStore  {
        + Datastore() DSReaderWriter
        + Headstore() DSReaderWriter
        + DAGstore() DAGStore

    }
    interface NodeDeltaPair  {
        + GetNode() go-ipld-format.Node
        + GetDelta() Delta
        + Error() error

    }
    interface NodeGetter  {
        + GetDelta( context.Context,  go-cid.Cid) (go-ipld-format.Node, Delta, error)
        + GetDeltas( context.Context,  []go-cid.Cid) <font color=blue>chan</font> NodeDeltaPair
        + GetPriority( context.Context,  go-cid.Cid) (uint64, error)

    }
    interface PersistedReplicatedData  {
        + Publish( Delta) (go-cid.Cid, error)

    }
    interface ReplicatedData  {
        + Merge(ctx context.Context, other Delta, id string) error
        + DeltaDecode(node go-ipld-format.Node) (Delta, error)
        + Value(ctx context.Context) ([]byte, error)

    }
    interface Span  {
        + Start() Key
        + End() Key
        + Contains( Span) bool
        + Equal( Span) bool
        + Compare( Span) int

    }
    interface Txn  {
        + Systemstore() DSReaderWriter

    }
    class core.CType << (T, #FF7700) >>  {
    }
    class core.Spans << (T, #FF7700) >>  {
    }
    class span << (S,Aquamarine) >> {
        - start Key
        - end Key

        + Start() Key
        + End() Key
        + Contains(s2 Span) bool
        + Equal(s2 Span) bool
        + Compare(s2 Span) int

    }
}
"core.Delta" *- - "core.CompositeDelta"
"go-datastore.Key" *- - "core.Key"
"core.ReplicatedData" *- - "core.PersistedReplicatedData"
"core.MultiStore" *- - "core.Txn"
"core.Span" *- - "core.span"

"core.Span" <|- - "core.span"

namespace crdt {
    class CompositeDAG << (S,Aquamarine) >> {
        + Value(ctx context.Context) ([]byte, error)
        + Set(patch []byte, links []core.DAGLink) *CompositeDAGDelta
        + Merge(ctx context.Context, delta core.Delta, id string) error
        + DeltaDecode(node go-ipld-format.Node) (core.Delta, error)

    }
    class CompositeDAGDelta << (S,Aquamarine) >> {
        + Priority uint64
        + Data []byte
        + SubDAGs []core.DAGLink

        + GetPriority() uint64
        + SetPriority(prio uint64) 
        + Marshal() ([]byte, error)
        + Value() <font color=blue>interface</font>{}
        + Links() []core.DAGLink

    }
    class Factory << (S,Aquamarine) >> {
        - crdts <font color=blue>map</font>[core.CType]*MerkleCRDTFactory
        - datastore core.DSReaderWriter
        - headstore core.DSReaderWriter
        - dagstore core.DAGStore

        - getRegisteredFactory(t core.CType) (*MerkleCRDTFactory, error)

        + Register(t core.CType, fn *MerkleCRDTFactory) error
        + Instance(t core.CType, key go-datastore.Key) (MerkleCRDT, error)
        + InstanceWithStores(store core.MultiStore, t core.CType, key go-datastore.Key) (MerkleCRDT, error)
        + SetStores(datastore core.DSReaderWriter, headstore core.DSReaderWriter, dagstore core.DAGStore) error
        + WithStores(datastore core.DSReaderWriter, headstore core.DSReaderWriter, dagstore core.DAGStore) Factory
        + SetDatastore(datastore core.DSReaderWriter) error
        + WithDatastore(datastore core.DSReaderWriter) Factory
        + SetHeadstore(headstore core.DSReaderWriter) error
        + WithHeadstore(headstore core.DSReaderWriter) Factory
        + SetDagstore(dagstore core.DAGStore) error
        + WithDagstore(dagstore core.DAGStore) Factory
        + Datastore() core.DSReaderWriter
        + Headstore() core.DSReaderWriter
        + DAGstore() core.DAGStore

    }
    class LWWRegDelta << (S,Aquamarine) >> {
        + Priority uint64
        + Data []byte

        + GetPriority() uint64
        + SetPriority(prio uint64) 
        + Marshal() ([]byte, error)
        + Value() <font color=blue>interface</font>{}

    }
    class LWWRegister << (S,Aquamarine) >> {
        - key string

        - setValue(ctx context.Context, val []byte, priority uint64) error

        + Value(ctx context.Context) ([]byte, error)
        + Set(value []byte) *LWWRegDelta
        + Merge(ctx context.Context, delta core.Delta, id string) error
        + DeltaDecode(node go-ipld-format.Node) (core.Delta, error)

    }
    interface MerkleCRDT  {
    }
    class MerkleCompositeDAG << (S,Aquamarine) >> {
        - reg crdt.CompositeDAG

        + Set(ctx context.Context, patch []byte, links []core.DAGLink) (go-cid.Cid, error)
        + Value(ctx context.Context) ([]byte, error)
        + Merge(ctx context.Context, other core.Delta, id string) error

    }
    class MerkleLWWRegister << (S,Aquamarine) >> {
        - reg crdt.LWWRegister

        + Set(ctx context.Context, value []byte) (go-cid.Cid, error)
        + Value(ctx context.Context) ([]byte, error)
        + Merge(ctx context.Context, other core.Delta, id string) error

    }
    class baseCRDT << (S,Aquamarine) >> {
        - store core.DSReaderWriter
        - namespace go-datastore.Key
        - keysNs string
        - valueSuffix string
        - prioritySuffix string

        - keyPrefix(key string) go-datastore.Key
        - valueKey(key string) go-datastore.Key
        - priorityKey(key string) go-datastore.Key
        - setPriority(ctx context.Context, key string, priority uint64) error
        - getPriority(ctx context.Context, key string) (uint64, error)

    }
    class baseMerkleCRDT << (S,Aquamarine) >> {
        - clock core.MerkleClock
        - crdt core.ReplicatedData

        + Merge(ctx context.Context, other core.Delta, id string) error
        + DeltaDecode(node go-ipld-format.Node) (core.Delta, error)
        + Value(ctx context.Context) ([]byte, error)
        + Publish(ctx context.Context, delta core.Delta) (go-cid.Cid, error)

    }
    class crdt.MerkleCRDTFactory << (T, #FF7700) >>  {
    }
    class crdt.MerkleCRDTInitFn << (T, #FF7700) >>  {
    }
    class "<font color=blue>func</font>(core.MultiStore) MerkleCRDTInitFn" as fontcolorbluefuncfontcoreMultiStoreMerkleCRDTInitFn {
    }
    class "<font color=blue>func</font>(go-datastore.Key) MerkleCRDT" as fontcolorbluefuncfontgodatastoreKeyMerkleCRDT {
    }
}
"crdt.baseCRDT" *- - "crdt.LWWRegister"
"crdt.baseMerkleCRDT" *- - "crdt.MerkleCompositeDAG"
"crdt.baseMerkleCRDT" *- - "crdt.MerkleLWWRegister"

"core.ReplicatedData" <|- - "crdt.CompositeDAG"
"core.CompositeDelta" <|- - "crdt.CompositeDAGDelta"
"core.Delta" <|- - "crdt.CompositeDAGDelta"
"core.MultiStore" <|- - "crdt.Factory"
"core.Delta" <|- - "crdt.LWWRegDelta"
"core.ReplicatedData" <|- - "crdt.LWWRegister"
"core.ReplicatedData" <|- - "crdt.baseMerkleCRDT"

namespace db {
    class Collection << (S,Aquamarine) >> {
        - db *DB
        - txn *Txn
        - colID uint32
        - colIDKey core.Key
        - desc base.CollectionDescription

        - create(ctx context.Context, txn *Txn, doc *document.Document) error
        - update(ctx context.Context, txn *Txn, doc *document.Document) error
        - save(ctx context.Context, txn *Txn, doc *document.Document) error
        - delete(ctx context.Context, txn *Txn, key key.DocKey) (bool, error)
        - exists(ctx context.Context, txn *Txn, key key.DocKey) (bool, error)
        - saveDocValue(ctx context.Context, txn *Txn, key go-datastore.Key, val document.Value) (go-cid.Cid, error)
        - saveValueToMerkleCRDT(ctx context.Context, txn *Txn, key go-datastore.Key, ctype core.CType, args ...<font color=blue>interface</font>{}) (go-cid.Cid, error)
        - getTxn(ctx context.Context, readonly bool) (*Txn, error)
        - discardImplicitTxn(ctx context.Context, txn *Txn) 
        - commitImplicitTxn(ctx context.Context, txn *Txn) error
        - getIndexDocKey(key go-datastore.Key, indexID uint32) go-datastore.Key
        - getPrimaryIndexDocKey(key go-datastore.Key) go-datastore.Key
        - getFieldKey(key go-datastore.Key, fieldName string) go-datastore.Key
        - getSchemaFieldID(fieldName string) uint32
        - deleteWithKey(ctx context.Context, txn *Txn, key key.DocKey, deleter <font color=blue>interface</font>{}, opts ...client.DeleteOpt) (*client.DeleteResult, error)
        - deleteWithKeys(ctx context.Context, txn *Txn, keys []key.DocKey, deleter <font color=blue>interface</font>{}, opts ...client.DeleteOpt) (*client.DeleteResult, error)
        - makeSelectionDeleteQuery(ctx context.Context, txn *Txn, filter <font color=blue>interface</font>{}, opts ...client.DeleteOpt) (planner.Query, error)
        - deleteWithFilter(ctx context.Context, txn *Txn, filter <font color=blue>interface</font>{}, deleter <font color=blue>interface</font>{}, opts ...client.DeleteOpt) (*client.DeleteResult, error)
        - makeSelectDeleteLocal(filter *parser.Filter) (*parser.Select, error)
        - get(ctx context.Context, txn *Txn, key key.DocKey) (*document.Document, error)
        - updateWithKey(ctx context.Context, txn *Txn, key key.DocKey, updater <font color=blue>interface</font>{}, opts ...client.UpdateOpt) (*client.UpdateResult, error)
        - updateWithKeys(ctx context.Context, txn *Txn, keys []key.DocKey, updater <font color=blue>interface</font>{}, opts ...client.UpdateOpt) (*client.UpdateResult, error)
        - updateWithFilter(ctx context.Context, txn *Txn, filter <font color=blue>interface</font>{}, updater <font color=blue>interface</font>{}, opts ...client.UpdateOpt) (*client.UpdateResult, error)
        - applyPatch(txn *Txn, doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}, patch []<font color=blue>map</font>[string]<font color=blue>interface</font>{}) error
        - applyPatchOp(txn *Txn, dockey string, field string, currentVal <font color=blue>interface</font>{}, patchOp <font color=blue>map</font>[string]<font color=blue>interface</font>{}) error
        - applyMerge(ctx context.Context, txn *Txn, doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}, merge <font color=blue>map</font>[string]<font color=blue>interface</font>{}) error
        - applyMergePatchOp(txn *Txn, docKey string, field string, currentVal <font color=blue>interface</font>{}, targetVal <font color=blue>interface</font>{}) error
        - makeSelectionUpdateQuery(ctx context.Context, txn *Txn, filter <font color=blue>interface</font>{}, opts ...client.UpdateOpt) (planner.Query, error)
        - makeSelectUpdateLocal(filter *parser.Filter) (*parser.Select, error)
        - getCollectionForPatchOpPath(txn *Txn, path string) (*Collection, bool, error)
        - getTargetKeyForPatchPath(txn *Txn, doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}, path string) (string, error)

        + Description() base.CollectionDescription
        + Name() string
        + Schema() base.SchemaDescription
        + ID() uint32
        + Indexes() []base.IndexDescription
        + PrimaryIndex() base.IndexDescription
        + Index(id uint32) (base.IndexDescription, error)
        + CreateIndex(idesc base.IndexDescription) error
        + WithTxn(txn client.Txn) client.Collection
        + Create(ctx context.Context, doc *document.Document) error
        + CreateMany(ctx context.Context, docs []*document.Document) error
        + Update(ctx context.Context, doc *document.Document) error
        + Save(ctx context.Context, doc *document.Document) error
        + Delete(ctx context.Context, key key.DocKey) (bool, error)
        + Exists(ctx context.Context, key key.DocKey) (bool, error)
        + Delete2(doc *document.SimpleDocument, opts ...client.DeleteOpt) error
        + DeleteWith(ctx context.Context, target <font color=blue>interface</font>{}, deleter <font color=blue>interface</font>{}, opts ...client.DeleteOpt) error
        + DeleteWithFilter(ctx context.Context, filter <font color=blue>interface</font>{}, deleter <font color=blue>interface</font>{}, opts ...client.DeleteOpt) (*client.DeleteResult, error)
        + DeleteWithKey(ctx context.Context, key key.DocKey, deleter <font color=blue>interface</font>{}, opts ...client.DeleteOpt) (*client.DeleteResult, error)
        + DeleteWithKeys(ctx context.Context, keys []key.DocKey, deleter <font color=blue>interface</font>{}, opts ...client.DeleteOpt) (*client.DeleteResult, error)
        + DeleteWithDoc(doc *document.SimpleDocument, deleter <font color=blue>interface</font>{}, opts ...client.DeleteOpt) error
        + DeleteWithDocs(docs []*document.SimpleDocument, deleter <font color=blue>interface</font>{}, opts ...client.DeleteOpt) error
        + Get(ctx context.Context, key key.DocKey) (*document.Document, error)
        + Create2(doc *document.SimpleDocument, opts ...CreateOpt) error
        + Update2(doc *document.SimpleDocument, opts ...client.UpdateOpt) error
        + UpdateWith(ctx context.Context, target <font color=blue>interface</font>{}, updater <font color=blue>interface</font>{}, opts ...client.UpdateOpt) error
        + UpdateWithFilter(ctx context.Context, filter <font color=blue>interface</font>{}, updater <font color=blue>interface</font>{}, opts ...client.UpdateOpt) (*client.UpdateResult, error)
        + UpdateWithKey(ctx context.Context, key key.DocKey, updater <font color=blue>interface</font>{}, opts ...client.UpdateOpt) (*client.UpdateResult, error)
        + UpdateWithKeys(ctx context.Context, keys []key.DocKey, updater <font color=blue>interface</font>{}, opts ...client.UpdateOpt) (*client.UpdateResult, error)
        + UpdateWithDoc(doc *document.SimpleDocument, updater <font color=blue>interface</font>{}, opts ...client.UpdateOpt) error
        + UpdateWithDocs(docs []*document.SimpleDocument, updater <font color=blue>interface</font>{}, opts ...client.UpdateOpt) error

    }
    class CreateOpt << (S,Aquamarine) >> {
    }
    class DB << (S,Aquamarine) >> {
        - glock sync.RWMutex
        - rootstore go-datastore.Batching
        - systemstore core.DSReaderWriter
        - ssKeyTransform keytransform.KeyTransform
        - datastore core.DSReaderWriter
        - dsKeyTransform keytransform.KeyTransform
        - headstore core.DSReaderWriter
        - hsKeyTransform keytransform.KeyTransform
        - dagstore core.DAGStore
        - dagKeyTransform keytransform.KeyTransform
        - crdtFactory *crdt.Factory
        - schema *schema.SchemaManager
        - queryExecutor *planner.QueryExecutor
        - initialized bool
        - log v2.StandardLogger
        - options <font color=blue>interface</font>{}

        - newCollection(desc base.CollectionDescription) (*Collection, error)
        - printDebugDB(ctx context.Context) 
        - loadSchema(ctx context.Context) error
        - saveSchema(ctx context.Context, astdoc *ast.Document) error
        - getSequence(ctx context.Context, key string) (*sequence, error)
        - newTxn(ctx context.Context, readonly bool) (*Txn, error)

        + Listen(address string) 
        + GetBlock(ctx context.Context, c go-cid.Cid) (go-block-format.Block, error)
        + CreateCollection(ctx context.Context, desc base.CollectionDescription) (client.Collection, error)
        + GetCollection(ctx context.Context, name string) (client.Collection, error)
        + Start(ctx context.Context) error
        + Initialize(ctx context.Context) error
        + PrintDump(ctx context.Context) 
        + Close() 
        + ExecQuery(ctx context.Context, query string) *client.QueryResult
        + ExecIntrospection(query string) *client.QueryResult
        + AddSchema(ctx context.Context, schema string) error
        + SchemaManager() *schema.SchemaManager
        + NewTxn(ctx context.Context, readonly bool) (*Txn, error)

    }
    class DeleteOpt << (S,Aquamarine) >> {
    }
    class DeleteResult << (S,Aquamarine) >> {
        + Count int64
        + DocKeys []string

    }
    class Txn << (S,Aquamarine) >> {
        - systemstore core.DSReaderWriter
        - datastore core.DSReaderWriter
        - headstore core.DSReaderWriter
        - dagstore core.DAGStore

        + Systemstore() core.DSReaderWriter
        + Datastore() core.DSReaderWriter
        + Headstore() core.DSReaderWriter
        + DAGstore() core.DAGStore
        + IsBatch() bool

    }
    class UpdateOpt << (S,Aquamarine) >> {
    }
    interface patcher  {
    }
    class sequence << (S,Aquamarine) >> {
        - db *DB
        - key go-datastore.Key
        - val uint64

        - get(ctx context.Context) (uint64, error)
        - update(ctx context.Context) error
        - next(ctx context.Context) (uint64, error)

    }
    class shimBatcherTxn << (S,Aquamarine) >> {
        + Discard(_ context.Context) 

    }
    class shimTxnStore << (S,Aquamarine) >> {
        + Sync(ctx context.Context, prefix go-datastore.Key) error
        + Close() error

    }
}
"go-datastore.Txn" *- - "db.Txn"
"go-datastore.Batch" *- - "db.shimBatcherTxn"
"go-datastore.Read" *- - "db.shimBatcherTxn"
"go-datastore.Txn" *- - "db.shimTxnStore"

"client.Collection" <|- - "db.Collection"
"client.DB" <|- - "db.DB"
"client.Txn" <|- - "db.Txn"
"core.MultiStore" <|- - "db.Txn"
"core.Txn" <|- - "db.Txn"

namespace document {
    class Document << (S,Aquamarine) >> {
        - schema base.SchemaDescription
        - key key.DocKey
        - fields <font color=blue>map</font>[string]Field
        - values <font color=blue>map</font>[Field]Value
        - isDirty bool

        - set(t core.CType, field string, value Value) error
        - setCBOR(t core.CType, field string, val <font color=blue>interface</font>{}) error
        - setObject(t core.CType, field string, val *Document) error
        - setAndParseType(field string, value <font color=blue>interface</font>{}) error
        - setAndParseObjectType(value <font color=blue>map</font>[string]<font color=blue>interface</font>{}) error
        - toMap() (<font color=blue>map</font>[string]<font color=blue>interface</font>{}, error)
        - toMapWithKey() (<font color=blue>map</font>[string]<font color=blue>interface</font>{}, error)
        - newField(t core.CType, name string, schemaType ...string) Field

        + Key() key.DocKey
        + Get(field string) (<font color=blue>interface</font>{}, error)
        + GetValue(field string) (Value, error)
        + GetValueWithField(f Field) (Value, error)
        + SetWithJSON(patch []byte) error
        + Set(field string, value <font color=blue>interface</font>{}) error
        + SetAs(field string, value <font color=blue>interface</font>{}, t core.CType) error
        + Delete(fields ...string) error
        + Fields() <font color=blue>map</font>[string]Field
        + Values() <font color=blue>map</font>[Field]{packageName}Value
        + Bytes() ([]byte, error)
        + String() string
        + ToMap() (<font color=blue>map</font>[string]<font color=blue>interface</font>{}, error)

    }
    class EncProperty << (S,Aquamarine) >> {
        + Desc base.FieldDescription
        + Raw []byte

        + Decode() (core.CType, <font color=blue>interface</font>{}, error)

    }
    class EncodedDocument << (S,Aquamarine) >> {
        + Key []byte
        + Schema *base.SchemaDescription
        + Properties <font color=blue>map</font>[base.FieldDescription]*EncProperty

        + Reset() 
        + Decode() (*Document, error)
        + DecodeToMap() (<font color=blue>map</font>[string]<font color=blue>interface</font>{}, error)

    }
    interface Field  {
        + Key() go-datastore.Key
        + Name() string
        + Type() core.CType
        + SchemaType() string

    }
    class Int64Value << (S,Aquamarine) >> {
        + Bytes() ([]byte, error)

    }
    class List << (S,Aquamarine) >> {
    }
    interface ReadableValue  {
        + Read() (<font color=blue>interface</font>{}, error)

    }
    class Scalar << (S,Aquamarine) >> {
    }
    class SimpleDocument << (S,Aquamarine) >> {
        + Get(field string) <font color=blue>interface</font>{}

    }
    class StringValue << (S,Aquamarine) >> {
        + Bytes() ([]byte, error)

    }
    interface Value  {
        + Value() <font color=blue>interface</font>{}
        + IsDocument() bool
        + Type() core.CType
        + IsDirty() bool
        + Clean() 
        + IsDelete() bool
        + Delete() 

    }
    interface ValueType  {
    }
    interface WriteableValue  {
        + Bytes() ([]byte, error)

    }
    class cborValue << (S,Aquamarine) >> {
        + Bytes() ([]byte, error)

    }
    class document.EPTuple << (T, #FF7700) >>  {
    }
    class simpleField << (S,Aquamarine) >> {
        - name string
        - key go-datastore.Key
        - crdtType core.CType
        - schemaType string

        + Name() string
        + Type() core.CType
        + Key() go-datastore.Key
        + SchemaType() string

    }
    class simpleValue << (S,Aquamarine) >> {
        - t core.CType
        - value <font color=blue>interface</font>{}
        - isDirty bool
        - delete bool

        + Value() <font color=blue>interface</font>{}
        + Type() core.CType
        + IsDocument() bool
        + IsDirty() bool
        + Clean() 
        + Delete() 
        + IsDelete() bool

    }
}
"document.simpleValue" *- - "document.Int64Value"
"document.Value" *- - "document.ReadableValue"
"document.simpleValue" *- - "document.StringValue"
"document.Value" *- - "document.WriteableValue"
"document.simpleValue" *- - "document.cborValue"

"document.WriteableValue" <|- - "document.Document"
"document.WriteableValue" <|- - "document.Int64Value"
"document.WriteableValue" <|- - "document.StringValue"
"document.WriteableValue" <|- - "document.cborValue"
"document.Field" <|- - "document.simpleField"
"document.Value" <|- - "document.simpleValue"

namespace fetcher {
    class BlockFetcher << (S,Aquamarine) >> {
    }
    class DocumentFetcher << (S,Aquamarine) >> {
        - col *base.CollectionDescription
        - index *base.IndexDescription
        - reverse bool
        - txn core.Txn
        - spans core.Spans
        - curSpanIndex int
        - schemaFields <font color=blue>map</font>[uint32]base.FieldDescription
        - fields []*base.FieldDescription
        - doc *document.EncodedDocument
        - decodedDoc *document.Document
        - initialized bool
        - kv *core.KeyValue
        - kvIter query.Results
        - kvEnd bool
        - indexKey []byte

        - nextKey() (bool, error)
        - nextKV() (bool, *core.KeyValue, error)
        - processKV(kv *core.KeyValue) error

        + Init(col *base.CollectionDescription, index *base.IndexDescription, fields []*base.FieldDescription, reverse bool) error
        + Start(ctx context.Context, txn core.Txn, spans core.Spans) error
        + KVEnd() bool
        + KV() *core.KeyValue
        + NextKey() (bool, error)
        + NextKV() (bool, *core.KeyValue, error)
        + ProcessKV(kv *core.KeyValue) error
        + FetchNext() (*document.EncodedDocument, error)
        + FetchNextDecoded() (*document.Document, error)
        + FetchNextMap() ([]byte, <font color=blue>map</font>[string]<font color=blue>interface</font>{}, error)
        + ReadIndexKey(key core.Key) core.Key
        + Close() error

    }
    class HeadFetcher << (S,Aquamarine) >> {
        - spans core.Spans
        - cid *go-cid.Cid
        - kv *core.KeyValue
        - kvIter query.Results
        - kvEnd bool

        - nextKey() (bool, error)
        - nextKV() (bool, *core.KeyValue, error)
        - processKV(kv *core.KeyValue) error

        + Start(ctx context.Context, txn core.Txn, spans core.Spans) error
        + FetchNext() (*go-cid.Cid, error)

    }
}


namespace http {
    class Server << (S,Aquamarine) >> {
        - db client.DB
        - router *chi.Mux

        - ping(w http.ResponseWriter, r *http.Request) 
        - dump(w http.ResponseWriter, r *http.Request) 
        - execGQL(w http.ResponseWriter, r *http.Request) 
        - loadSchema(w http.ResponseWriter, r *http.Request) 
        - getBlock(w http.ResponseWriter, r *http.Request) 

        + Listen(addr string) 

    }
}


namespace key {
    class DocKey << (S,Aquamarine) >> {
        - version uint16
        - uuid go.uuid.UUID
        - cid go-cid.Cid
        - peerID string

        - subrec(subparts []string) DocKey

        + UUID() go.uuid.UUID
        + String() string
        + Bytes() []byte
        + Verify(ctx context.Context, data go-cid.Cid, peerID string) bool
        + Sub(subname string) DocKey

    }
}
"go-datastore.Key" *- - "key.DocKey"


namespace parser {
    class CommitSelect << (S,Aquamarine) >> {
        + Alias string
        + Name string
        + Type CommitType
        + DocKey string
        + FieldName string
        + Cid string
        + Limit *Limit
        + OrderBy *OrderBy
        + Fields []Selection
        + Statement *ast.Field

        + GetRoot() SelectionType
        + GetStatement() ast.Node
        + GetName() string
        + GetAlias() string
        + GetSelections() []Selection
        + ToSelect() *Select

    }
    class EvalContext << (S,Aquamarine) >> {
    }
    class Field << (S,Aquamarine) >> {
        + Name string
        + Alias string
        + Root SelectionType
        + Statement *ast.Field

        + GetRoot() SelectionType
        + GetSelections() []Selection
        + GetName() string
        + GetAlias() string
        + GetStatement() ast.Node

    }
    class Filter << (S,Aquamarine) >> {
        + Conditions <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Statement *ast.ObjectValue

    }
    class GroupBy << (S,Aquamarine) >> {
        + Fields []string

    }
    class Limit << (S,Aquamarine) >> {
        + Limit int64
        + Offset int64

    }
    class Mutation << (S,Aquamarine) >> {
        + Name string
        + Alias string
        + Type MutationType
        + Schema string
        + IDs []string
        + Filter *Filter
        + Data string
        + Fields []Selection
        + Statement *ast.Field

        + GetRoot() SelectionType
        + GetStatement() ast.Node
        + GetSelections() []Selection
        + GetName() string
        + GetAlias() string
        + ToSelect() *Select

    }
    class ObjectPayload << (S,Aquamarine) >> {
        + Object <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Array []<font color=blue>interface</font>{}

    }
    class OperationDefinition << (S,Aquamarine) >> {
        + Name string
        + Selections []Selection
        + Statement *ast.OperationDefinition

        + GetStatement() ast.Node

    }
    class OrderBy << (S,Aquamarine) >> {
        + Conditions []SortCondition
        + Statement *ast.ObjectValue

    }
    class Query << (S,Aquamarine) >> {
        + Queries []*OperationDefinition
        + Mutations []*OperationDefinition
        + Statement *ast.Document

        + GetStatement() ast.Node

    }
    class Select << (S,Aquamarine) >> {
        + Name string
        + Alias string
        + CollectionName string
        + Root SelectionType
        + DocKey string
        + CID string
        + Filter *Filter
        + Limit *Limit
        + OrderBy *OrderBy
        + GroupBy *GroupBy
        + Fields []Selection
        + Statement *ast.Field

        + GetRoot() SelectionType
        + GetStatement() ast.Node
        + GetSelections() []Selection
        + GetName() string
        + GetAlias() string

    }
    interface Selection  {
        + GetName() string
        + GetAlias() string
        + GetSelections() []Selection
        + GetRoot() SelectionType

    }
    class SortCondition << (S,Aquamarine) >> {
        + Field string
        + Direction SortDirection

    }
    interface Statement  {
        + GetStatement() ast.Node

    }
    class parser.CommitType << (T, #FF7700) >>  {
    }
    class parser.MutationType << (T, #FF7700) >>  {
    }
    class parser.SelectionType << (T, #FF7700) >>  {
    }
    class parser.SortDirection << (T, #FF7700) >>  {
    }
    class parser.parseFn << (T, #FF7700) >>  {
    }
    class "<font color=blue>func</font>(*ast.ObjectValue) (<font color=blue>interface</font>{}, error)" as fontcolorbluefuncfontastObjectValuefontcolorblueinterfacefonterror {
    }
}
"context.Context" *- - "parser.EvalContext"
"parser.Statement" *- - "parser.Selection"

"parser.Selection" <|- - "parser.CommitSelect"
"parser.Statement" <|- - "parser.CommitSelect"
"parser.Selection" <|- - "parser.Field"
"parser.Statement" <|- - "parser.Field"
"parser.Selection" <|- - "parser.Mutation"
"parser.Statement" <|- - "parser.Mutation"
"parser.Statement" <|- - "parser.OperationDefinition"
"parser.Statement" <|- - "parser.Query"
"parser.Selection" <|- - "parser.Select"
"parser.Statement" <|- - "parser.Select"

namespace planner {
    class ExecutionContext << (S,Aquamarine) >> {
    }
    interface MultiNode  {
        + Children() []planNode
        + AddChild( string,  planNode) error
        + ReplaceChildAt( int,  string,  planNode) error
        + SetMultiScanner( *multiScanNode) 

    }
    class PlanContext << (S,Aquamarine) >> {
    }
    class Planner << (S,Aquamarine) >> {
        - txn client.Txn
        - db client.DB
        - ctx context.Context
        - evalCtx parser.EvalContext

        - commitSelectLatest(parsed *parser.CommitSelect) (*commitSelectNode, error)
        - commitSelectBlock(parsed *parser.CommitSelect) (*commitSelectNode, error)
        - commitSelectAll(parsed *parser.CommitSelect) (*commitSelectNode, error)
        - getSource(collection string) (planSource, error)
        - getCollectionScanPlan(collection string) (planSource, error)
        - getCollectionDesc(name string) (base.CollectionDescription, error)
        - newPlan(stmt parser.Statement) (planNode, error)
        - newObjectMutationPlan(stmt *parser.Mutation) (planNode, error)
        - makePlan(stmt parser.Statement) (planNode, error)
        - optimizePlan(plan planNode) error
        - expandPlan(plan planNode) error
        - expandSelectTopNodePlan(plan *selectTopNode) error
        - expandMultiNode(plan MultiNode) error
        - expandTypeIndexJoinPlan(plan *typeIndexJoin) error
        - expandGroupNodePlan(plan *selectTopNode) error
        - walkAndReplacePlan(plan planNode, target planNode, replace planNode) error
        - walkAndFindPlanType(plan planNode, target planNode) planNode
        - queryDocs(query *parser.Query) ([]<font color=blue>map</font>[string]<font color=blue>interface</font>{}, error)
        - query(query *parser.Query) (planNode, error)
        - render(parsed *parser.Select) *renderNode
        - makeTypeIndexJoin(parent *selectNode, source planNode, subType *parser.Select) (*typeIndexJoin, error)
        - makeTypeJoinOne(parent *selectNode, source planNode, subType *parser.Select) (*typeJoinOne, error)
        - makeTypeJoinMany(parent *selectNode, source planNode, subType *parser.Select) (*typeJoinMany, error)
        - newContainerValuesNode(ordering []parser.SortCondition) *valuesNode

        + CommitSelect(parsed *parser.CommitSelect) (planNode, error)
        + CreateDoc(parsed *parser.Mutation) (planNode, error)
        + HeadScan() *headsetScanNode
        + DAGScan() *dagScanNode
        + DeleteDocs(parsed *parser.Mutation) (planNode, error)
        + GroupBy(n *parser.GroupBy, childSelect *parser.Select) (*groupNode, error)
        + Limit(n *parser.Limit) (*limitNode, error)
        + Scan() *scanNode
        + SubSelect(parsed *parser.Select) (planNode, error)
        + SelectFromSource(parsed *parser.Select, source planNode, fromCollection bool, providedSourceInfo *sourceInfo) (planNode, error)
        + Select(parsed *parser.Select) (planNode, error)
        + OrderBy(n *parser.OrderBy) (*sortNode, error)
        + UpdateDocs(parsed *parser.Mutation) (planNode, error)

    }
    class QueryExecutor << (S,Aquamarine) >> {
        + SchemaManager *schema.SchemaManager

        - parseQueryString(query string) (*parser.Query, error)

        + MakeSelectQuery(ctx context.Context, db client.DB, txn client.Txn, selectStmt *parser.Select) (Query, error)
        + ExecQuery(ctx context.Context, db client.DB, txn client.Txn, query string, args ...<font color=blue>interface</font>{}) ([]<font color=blue>map</font>[string]<font color=blue>interface</font>{}, error)

    }
    class Statement << (S,Aquamarine) >> {
    }
    class allSortStrategy << (S,Aquamarine) >> {
        - valueNode *valuesNode

        + Add(doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}) error
        + Finish() 
        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Close() 

    }
    interface appendNode  {
        + Append() bool

    }
    class baseNode << (S,Aquamarine) >> {
        - plan planNode

        + Init() error
        + Start() error
        + Next() (bool, error)
        + Spans(spans core.Spans) 
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Close() error
        + Source() planNode

    }
    class commitSelectNode << (S,Aquamarine) >> {
        - p *Planner
        - source *dagScanNode
        - subRenderInfo <font color=blue>map</font>[string]renderInfo
        - doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}

        + Init() error
        + Start() error
        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Spans(spans core.Spans) 
        + Close() error
        + Source() planNode

    }
    class commitSelectTopNode << (S,Aquamarine) >> {
        - p *Planner
        - plan planNode

        + Init() error
        + Start() error
        + Next() (bool, error)
        + Spans(spans core.Spans) 
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Source() planNode
        + Close() error
        + Append() bool

    }
    class createNode << (S,Aquamarine) >> {
        - p *Planner
        - collection client.Collection
        - newDocStr string
        - doc *document.Document
        - err error
        - returned bool

        + Init() error
        + Start() error
        + Next() (bool, error)
        + Spans(spans core.Spans) 
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Close() error
        + Source() planNode

    }
    class dagScanNode << (S,Aquamarine) >> {
        - p *Planner
        - cid *go-cid.Cid
        - field string
        - depthLimit uint32
        - depthVisited uint32
        - visitedNodes <font color=blue>map</font>[string]bool
        - queuedCids *list.List
        - headset *headsetScanNode
        - doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Close() error
        + Source() planNode
        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}

    }
    class dataSource << (S,Aquamarine) >> {
        - pipeNode *pipeNode
        - parentSource planNode
        - childSource planNode
        - childName string
        - lastParentDocIndex int
        - lastChildDocIndex int

        - mergeParent(keyFields []string, destination *orderedMap) (<font color=blue>map</font>[string]<font color=blue>interface</font>{}, bool, error)
        - appendChild(keyFields []string, valuesByKey *orderedMap) (<font color=blue>map</font>[string]<font color=blue>interface</font>{}, bool, error)

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Close() error
        + Source() planNode

    }
    class deleteNode << (S,Aquamarine) >> {
        - p *Planner
        - collection client.Collection
        - filter *parser.Filter
        - ids []string
        - patch string
        - isUpdating bool
        - deleteIter *valuesNode
        - results planNode

        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Spans(spans core.Spans) 
        + Init() error
        + Start() error
        + Close() error
        + Source() planNode

    }
    class groupNode << (S,Aquamarine) >> {
        - p *Planner
        - childSelect *parser.Select
        - groupByFields []string
        - dataSource dataSource
        - values []<font color=blue>map</font>[string]<font color=blue>interface</font>{}
        - currentIndex int
        - currentValue <font color=blue>map</font>[string]<font color=blue>interface</font>{}

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Close() error
        + Source() planNode
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Next() (bool, error)

    }
    class headsetScanNode << (S,Aquamarine) >> {
        - p *Planner
        - key core.Key
        - spans core.Spans
        - scanInitialized bool
        - cid *go-cid.Cid
        - fetcher fetcher.HeadFetcher

        - initScan() error

        + Init() error
        + Spans(spans core.Spans) 
        + Start() error
        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Close() error
        + Source() planNode

    }
    class limitNode << (S,Aquamarine) >> {
        - p *Planner
        - plan planNode
        - limit int64
        - offset int64
        - rowIndex int64

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Close() error
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Next() (bool, error)
        + Source() planNode

    }
    interface mergeNode  {
        + Merge() bool

    }
    class multiScanNode << (S,Aquamarine) >> {
        - numReaders int
        - numCalls int
        - lastBool bool
        - lastErr error

        - addReader() 

        + Source() planNode
        + Next() (bool, error)

    }
    class orderedMap << (S,Aquamarine) >> {
        - values []<font color=blue>map</font>[string]<font color=blue>interface</font>{}
        - indexesByKey <font color=blue>map</font>[string]int

        - mergeParent(key string, childAddress string, value <font color=blue>map</font>[string]<font color=blue>interface</font>{}) 
        - appendChild(key string, childAddress string, value <font color=blue>map</font>[string]<font color=blue>interface</font>{}) 

    }
    class parallelNode << (S,Aquamarine) >> {
        - p *Planner
        - children []planNode
        - childFields []string
        - multiscan *multiScanNode
        - doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}

        - applyToPlans(fn <font color=blue>func</font>(planNode) error) error
        - nextMerge(index int, plan mergeNode) (bool, error)
        - nextAppend(index int, plan appendNode) (bool, error)

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Close() error
        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Source() planNode
        + Children() []planNode
        + AddChild(field string, node planNode) error
        + ReplaceChildAt(i int, field string, node planNode) error
        + SetMultiScanner(ms *multiScanNode) 

    }
    class pipeNode << (S,Aquamarine) >> {
        - source planNode
        - docs *container.DocumentContainer
        - docIndex int

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Close() error
        + Source() planNode
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Next() (bool, error)

    }
    interface planNode  {
        + Init() error
        + Start() error
        + Next() (bool, error)
        + Spans( core.Spans) 
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Source() planNode
        + Close() error

    }
    class planSource << (S,Aquamarine) >> {
        - info sourceInfo
        - plan planNode

    }
    class planner.Query << (T, #FF7700) >>  {
    }
    class renderInfo << (S,Aquamarine) >> {
        - sourceFieldName string
        - destinationFieldName string
        - children []renderInfo

        - render(src <font color=blue>map</font>[string]<font color=blue>interface</font>{}, destination <font color=blue>map</font>[string]<font color=blue>interface</font>{}) 

    }
    class renderNode << (S,Aquamarine) >> {
        - p *Planner
        - plan planNode
        - renderInfo topLevelRenderInfo

        + Init() error
        + Start() error
        + Next() (bool, error)
        + Spans(spans core.Spans) 
        + Close() error
        + Source() planNode
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}

    }
    class scanNode << (S,Aquamarine) >> {
        - p *Planner
        - desc base.CollectionDescription
        - index *base.IndexDescription
        - fields []*base.FieldDescription
        - doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        - docKey []byte
        - spans core.Spans
        - reverse bool
        - filter *parser.Filter
        - scanInitialized bool
        - fetcher fetcher.DocumentFetcher

        - initCollection(desc base.CollectionDescription) error
        - initScan() error

        + Init() error
        + Start() error
        + Next() (bool, error)
        + Spans(spans core.Spans) 
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Close() error
        + Source() planNode
        + Merge() bool

    }
    class selectNode << (S,Aquamarine) >> {
        - p *Planner
        - source planNode
        - origSource planNode
        - sourceInfo sourceInfo
        - renderInfo *renderInfo
        - doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        - filter *parser.Filter
        - groupSelect *parser.Select

        - addSubPlan(field string, plan planNode) error
        - initSource(parsed *parser.Select) error
        - initFields(parsed *parser.Select) error

        + Init() error
        + Start() error
        + Next() (bool, error)
        + Spans(spans core.Spans) 
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Close() error
        + Source() planNode

    }
    class selectTopNode << (S,Aquamarine) >> {
        - source planNode
        - group *groupNode
        - sort *sortNode
        - limit *limitNode
        - render *renderNode
        - plan planNode

        + Init() error
        + Start() error
        + Next() (bool, error)
        + Spans(spans core.Spans) 
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Source() planNode
        + Close() error

    }
    class sortNode << (S,Aquamarine) >> {
        - p *Planner
        - plan planNode
        - ordering []parser.SortCondition
        - valueIter valueIterator
        - sortStrategy sortingStrategy
        - needSort bool

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Next() (bool, error)
        + Close() error
        + Source() planNode

    }
    interface sortingStrategy  {
        + Add( <font color=blue>map</font>[string]<font color=blue>interface</font>{}) error
        + Finish() 

    }
    class sourceInfo << (S,Aquamarine) >> {
        - collectionDescription base.CollectionDescription

    }
    class topLevelRenderInfo << (S,Aquamarine) >> {
        - children []renderInfo

    }
    class typeIndexJoin << (S,Aquamarine) >> {
        - p *Planner
        - joinPlan planNode

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Close() error
        + Source() planNode
        + Merge() bool

    }
    class typeJoinMany << (S,Aquamarine) >> {
        - p *Planner
        - root planNode
        - rootName string
        - index *scanNode
        - subType planNode
        - subTypeName string

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Close() error
        + Source() planNode

    }
    class typeJoinOne << (S,Aquamarine) >> {
        - p *Planner
        - root planNode
        - subType planNode
        - rootName string
        - subTypeName string
        - subTypeFieldName string
        - primary bool
        - spans core.Spans

        - valuesSecondary(doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}) <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        - valuesPrimary(doc <font color=blue>map</font>[string]<font color=blue>interface</font>{}) <font color=blue>map</font>[string]<font color=blue>interface</font>{}

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Close() error
        + Source() planNode

    }
    class updateNode << (S,Aquamarine) >> {
        - p *Planner
        - collection client.Collection
        - filter *parser.Filter
        - ids []string
        - patch string
        - isUpdating bool
        - updateIter *valuesNode
        - results planNode

        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Spans(spans core.Spans) 
        + Init() error
        + Start() error
        + Close() error
        + Source() planNode

    }
    interface valueIterator  {
        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Close() 

    }
    class valuesNode << (S,Aquamarine) >> {
        - p *Planner
        - ordering []parser.SortCondition
        - docs *container.DocumentContainer
        - docIndex int

        - docValueLess(da <font color=blue>map</font>[string]<font color=blue>interface</font>{}, db <font color=blue>map</font>[string]<font color=blue>interface</font>{}) bool

        + Init() error
        + Start() error
        + Spans(spans core.Spans) 
        + Close() 
        + Next() (bool, error)
        + Values() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Source() planNode
        + SortAll() 
        + Less(i int, j int) bool
        + Swap(i int, j int) 
        + Len() int

    }
}
"context.Context" *- - "planner.ExecutionContext"
"planner.planNode" *- - "planner.MultiNode"
"context.Context" *- - "planner.PlanContext"
"planner.planNode" *- - "planner.appendNode"
"planner.planNode" *- - "planner.mergeNode"
"planner.scanNode" *- - "planner.multiScanNode"
"planner.valueIterator" *- - "planner.sortingStrategy"

"planner.sortingStrategy" <|- - "planner.allSortStrategy"
"planner.valueIterator" <|- - "planner.allSortStrategy"
"planner.planNode" <|- - "planner.baseNode"
"planner.planNode" <|- - "planner.commitSelectNode"
"planner.appendNode" <|- - "planner.commitSelectTopNode"
"planner.planNode" <|- - "planner.commitSelectTopNode"
"planner.planNode" <|- - "planner.createNode"
"planner.planNode" <|- - "planner.dagScanNode"
"planner.planNode" <|- - "planner.deleteNode"
"planner.planNode" <|- - "planner.groupNode"
"planner.planNode" <|- - "planner.headsetScanNode"
"planner.planNode" <|- - "planner.limitNode"
"planner.MultiNode" <|- - "planner.parallelNode"
"planner.planNode" <|- - "planner.parallelNode"
"planner.planNode" <|- - "planner.pipeNode"
"planner.planNode" <|- - "planner.renderNode"
"planner.mergeNode" <|- - "planner.scanNode"
"planner.planNode" <|- - "planner.scanNode"
"planner.planNode" <|- - "planner.selectNode"
"planner.planNode" <|- - "planner.selectTopNode"
"planner.planNode" <|- - "planner.sortNode"
"planner.mergeNode" <|- - "planner.typeIndexJoin"
"planner.planNode" <|- - "planner.typeIndexJoin"
"planner.planNode" <|- - "planner.typeJoinMany"
"planner.planNode" <|- - "planner.typeJoinOne"
"planner.planNode" <|- - "planner.updateNode"
"planner.valueIterator" <|- - "planner.valuesNode"

namespace schema {
    class Generator << (S,Aquamarine) >> {
        - typeDefs []*graphql.Object
        - manager *SchemaManager
        - expandedFields <font color=blue>map</font>[string]bool

        - expandInputArgument(obj *graphql.Object) error
        - createExpandedFieldSingle(f *graphql.FieldDefinition, t *graphql.Object) (*graphql.Field, error)
        - createExpandedFieldList(f *graphql.FieldDefinition, t *graphql.Object) (*graphql.Field, error)
        - buildTypesFromAST(document *ast.Document) ([]*graphql.Object, error)
        - genTypeMutationFields(obj *graphql.Object, filterInput *graphql.InputObject) ([]*graphql.Field, error)
        - genTypeMutationCreateField(obj *graphql.Object) (*graphql.Field, error)
        - genTypeMutationUpdateField(obj *graphql.Object, filter *graphql.InputObject) (*graphql.Field, error)
        - genTypeMutationDeleteField(obj *graphql.Object, filter *graphql.InputObject) (*graphql.Field, error)
        - genTypeFieldsEnum(obj *graphql.Object) *graphql.Enum
        - genTypeFilterArgInput(obj *graphql.Object) *graphql.InputObject
        - genTypeFilterBaseArgInput(obj *graphql.Object) *graphql.InputObject
        - genTypeHavingArgInput(obj *graphql.Object) *graphql.InputObject
        - genTypeHavingBlockInput(obj *graphql.Object) *graphql.InputObject
        - genTypeOrderArgInput(obj *graphql.Object) *graphql.InputObject
        - genTypeQueryableFieldList(obj *graphql.Object, config queryInputTypeConfig) *graphql.Field

        + CreateDescriptions(types []*graphql.Object) ([]base.CollectionDescription, error)
        + FromSDL(schema string) ([]*graphql.Object, *ast.Document, error)
        + FromAST(document *ast.Document) ([]*graphql.Object, error)
        + GenerateQueryInputForGQLType(obj *graphql.Object) (*graphql.Field, error)
        + GenerateMutationInputForGQLType(obj *graphql.Object) ([]*graphql.Field, error)
        + Reset() 

    }
    class Relation << (S,Aquamarine) >> {
        - name string
        - relType uint8
        - types []uint8
        - schemaTypes []string
        - fields []string
        - finalized bool

        - finalize() error
        - schemaTypeExists(t string) (int, bool)

        + Kind() uint8
        + Valid() bool
        + SchemaTypeIsPrimary(t string) bool
        + SchemaTypeIsOne(t string) bool
        + SchemaTypeIsMany(t string) bool
        + GetField(field string) (string, uint8, bool)
        + GetFieldFromSchemaType(schemaType string) (string, uint8, bool)

    }
    class RelationManager << (S,Aquamarine) >> {
        - relations <font color=blue>map</font>[string]*Relation

        - validate() ([]*Relation, bool)
        - register(rel *Relation) (bool, error)

        + GetRelations() 
        + GetRelation(name string) (*Relation, error)
        + GetRelationByDescription(field string, schemaType string, objectType string) *Relation
        + NumRelations() int
        + Exists(name string) bool
        + RegisterSingle(name string, schemaType string, schemaField string, relType uint8) (bool, error)
        + RegisterOneToOne(name string, primaryType string, primaryField string, secondaryType string, secondaryField string) (bool, error)
        + RegisterOneToMany(name string, oneType string, oneField string, manyType string, manyField string) (bool, error)
        + RegisterManyToMany(name string, type1 string, type2 string) (bool, error)

    }
    class SchemaManager << (S,Aquamarine) >> {
        - schema graphql.Schema

        + Generator *Generator
        + Relations *RelationManager

        + NewGenerator() *Generator
        + Schema() *graphql.Schema
        + ResolveTypes() error

    }
    class Type << (S,Aquamarine) >> {
        + Object *graphql.Object

    }
    class queryInputTypeConfig << (S,Aquamarine) >> {
        - filter *graphql.InputObject
        - groupBy *graphql.Enum
        - having *graphql.InputObject
        - order *graphql.InputObject

    }
}
"graphql.ObjectConfig" *- - "schema.Type"


namespace store {
    class bstore << (S,Aquamarine) >> {
        - store core.DSReaderWriter
        - rehash bool

        + HashOnRead(_ context.Context, enabled bool) 
        + Get(ctx context.Context, k go-cid.Cid) (go-block-format.Block, error)
        + Put(ctx context.Context, block go-block-format.Block) error
        + PutMany(ctx context.Context, blocks []go-block-format.Block) error
        + Has(ctx context.Context, k go-cid.Cid) (bool, error)
        + GetSize(ctx context.Context, k go-cid.Cid) (int, error)
        + DeleteBlock(ctx context.Context, k go-cid.Cid) error
        + AllKeysChan(ctx context.Context) (<font color=blue>chan</font> go-cid.Cid, error)

    }
    class dagStore << (S,Aquamarine) >> {
        - store core.DSReaderWriter

    }
}
"go-ipfs-blockstore.Blockstore" *- - "store.dagStore"


namespace tests_test {
    class QueryTestCase << (S,Aquamarine) >> {
        + Description string
        + Query string
        + Docs <font color=blue>map</font>[int][]string
        + Updates <font color=blue>map</font>[int][]string
        + Results []<font color=blue>map</font>[string]<font color=blue>interface</font>{}

    }
}


namespace utils {
    class ProxyStore << (S,Aquamarine) >> {
        - frontend go-datastore.Datastore
        - backends []go-datastore.Datastore

        + Get(ctx context.Context, key datastore.Key) ([]byte, error)
        + Has(ctx context.Context, key datastore.Key) (bool, error)
        + GetSize(ctx context.Context, key datastore.Key) (int, error)
        + Query(ctx context.Context, q query.Query) (query.Results, error)
        + Put(ctx context.Context, key datastore.Key, value []byte) error
        + Delete(ctx context.Context, key datastore.Key) error
        + Sync(ctx context.Context, prefix datastore.Key) error
        + Close() error

    }
}


"__builtin__.byte" #.. "core.CType"
"__builtin__.int" #.. "parser.CommitType"
"__builtin__.int" #.. "parser.MutationType"
"__builtin__.int" #.. "parser.SelectionType"
"__builtin__.string" #.. "parser.SortDirection"
"__builtin__.uint32" #.. "base.DataEncoding"
"__builtin__.uint32" #.. "base.FieldID"
"__builtin__.uint8" #.. "base.FieldKind"
"core.[]Span" #.. "core.Spans"
"crdt.fontcolorbluefuncfontcoreMultiStoreMerkleCRDTInitFn" #.. "crdt.MerkleCRDTFactory"
"crdt.fontcolorbluefuncfontgodatastoreKeyMerkleCRDT" #.. "crdt.MerkleCRDTInitFn"
"document.[]EncProperty" #.. "document.EPTuple"
"parser.fontcolorbluefuncfontastObjectValuefontcolorblueinterfacefonterror" #.. "parser.parseFn"
"planner.planNode" #.. "planner.Query"
@enduml

PlantUML version 1.2021.16(Wed Dec 08 17:25:22 GMT 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>