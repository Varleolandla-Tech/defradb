syntax = "proto3";
package api.pb;

message SetReplicatorRequest {
    repeated string collections = 1;
    bytes addr = 2;
}

message SetReplicatorReply {
    bytes peerID = 1;
}

message DeleteReplicatorRequest {
    bytes peerID = 1;
}

message DeleteReplicatorReply {
    bytes peerID = 1;
}

message GetAllReplicatorRequest {}

message GetAllReplicatorReply {
    message Replicators {
        message Info {
            bytes id = 1;
            bytes addrs = 2;
        }
        Info info = 1;
        repeated string schemas = 2;
    }

    repeated Replicators replicators = 1;
   
}

message AddP2PCollectionsRequest {
    repeated string collections = 1;
}

message AddP2PCollectionsReply {
    string err = 1;
}

message RemoveP2PCollectionsRequest {
    repeated string collections = 1;
}

message RemoveP2PCollectionsReply {
    string err = 1;
}

message GetAllP2PCollectionsRequest {}

message GetAllP2PCollectionsReply {
    message Collection {
        string id = 1;
        string name = 2;
    }
    repeated Collection collections = 1;
}


// Service is the peer-to-peer network API for document sync
service Service {
    // SetReplicator for this peer
    rpc SetReplicator(SetReplicatorRequest) returns (SetReplicatorReply) {}

    // DeleteReplicator for this peer
    rpc DeleteReplicator(DeleteReplicatorRequest) returns (DeleteReplicatorReply) {}

    // DeleteReplicator for this peer
    rpc GetAllReplicators(GetAllReplicatorRequest) returns (GetAllReplicatorReply) {}

    rpc AddP2PCollections(AddP2PCollectionsRequest) returns (AddP2PCollectionsReply) {}
    
    rpc RemoveP2PCollections(RemoveP2PCollectionsRequest) returns (RemoveP2PCollectionsReply) {}
    
    rpc GetAllP2PCollections(GetAllP2PCollectionsRequest) returns (GetAllP2PCollectionsReply) {}
}